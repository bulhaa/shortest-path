/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/visibility-graph-master/use/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/graphCreation.worker.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/ngraph.events/index.js":
/*!**********************************************!*\
  !*** ../node_modules/ngraph.events/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(subject) {\n  validateSubject(subject);\n\n  var eventsStorage = createEventsStorage(subject);\n  subject.on = eventsStorage.on;\n  subject.off = eventsStorage.off;\n  subject.fire = eventsStorage.fire;\n  return subject;\n};\n\nfunction createEventsStorage(subject) {\n  // Store all event listeners to this hash. Key is event name, value is array\n  // of callback records.\n  //\n  // A callback record consists of callback function and its optional context:\n  // { 'eventName' => [{callback: function, ctx: object}] }\n  var registeredEvents = Object.create(null);\n\n  return {\n    on: function (eventName, callback, ctx) {\n      if (typeof callback !== 'function') {\n        throw new Error('callback is expected to be a function');\n      }\n      var handlers = registeredEvents[eventName];\n      if (!handlers) {\n        handlers = registeredEvents[eventName] = [];\n      }\n      handlers.push({callback: callback, ctx: ctx});\n\n      return subject;\n    },\n\n    off: function (eventName, callback) {\n      var wantToRemoveAll = (typeof eventName === 'undefined');\n      if (wantToRemoveAll) {\n        // Killing old events storage should be enough in this case:\n        registeredEvents = Object.create(null);\n        return subject;\n      }\n\n      if (registeredEvents[eventName]) {\n        var deleteAllCallbacksForEvent = (typeof callback !== 'function');\n        if (deleteAllCallbacksForEvent) {\n          delete registeredEvents[eventName];\n        } else {\n          var callbacks = registeredEvents[eventName];\n          for (var i = 0; i < callbacks.length; ++i) {\n            if (callbacks[i].callback === callback) {\n              callbacks.splice(i, 1);\n            }\n          }\n        }\n      }\n\n      return subject;\n    },\n\n    fire: function (eventName) {\n      var callbacks = registeredEvents[eventName];\n      if (!callbacks) {\n        return subject;\n      }\n\n      var fireArguments;\n      if (arguments.length > 1) {\n        fireArguments = Array.prototype.splice.call(arguments, 1);\n      }\n      for(var i = 0; i < callbacks.length; ++i) {\n        var callbackInfo = callbacks[i];\n        callbackInfo.callback.apply(callbackInfo.ctx, fireArguments);\n      }\n\n      return subject;\n    }\n  };\n}\n\nfunction validateSubject(subject) {\n  if (!subject) {\n    throw new Error('Eventify cannot use falsy object as events subject');\n  }\n  var reservedWords = ['on', 'fire', 'off'];\n  for (var i = 0; i < reservedWords.length; ++i) {\n    if (subject.hasOwnProperty(reservedWords[i])) {\n      throw new Error(\"Subject cannot be eventified, since it already has property '\" + reservedWords[i] + \"'\");\n    }\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL25ncmFwaC5ldmVudHMvaW5kZXguanM/ZDM5YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxrQkFBa0IsZ0NBQWdDO0FBQ3hEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7O0FBRWxEO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLHlCQUF5QixzQkFBc0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwwQkFBMEI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvbmdyYXBoLmV2ZW50cy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oc3ViamVjdCkge1xuICB2YWxpZGF0ZVN1YmplY3Qoc3ViamVjdCk7XG5cbiAgdmFyIGV2ZW50c1N0b3JhZ2UgPSBjcmVhdGVFdmVudHNTdG9yYWdlKHN1YmplY3QpO1xuICBzdWJqZWN0Lm9uID0gZXZlbnRzU3RvcmFnZS5vbjtcbiAgc3ViamVjdC5vZmYgPSBldmVudHNTdG9yYWdlLm9mZjtcbiAgc3ViamVjdC5maXJlID0gZXZlbnRzU3RvcmFnZS5maXJlO1xuICByZXR1cm4gc3ViamVjdDtcbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50c1N0b3JhZ2Uoc3ViamVjdCkge1xuICAvLyBTdG9yZSBhbGwgZXZlbnQgbGlzdGVuZXJzIHRvIHRoaXMgaGFzaC4gS2V5IGlzIGV2ZW50IG5hbWUsIHZhbHVlIGlzIGFycmF5XG4gIC8vIG9mIGNhbGxiYWNrIHJlY29yZHMuXG4gIC8vXG4gIC8vIEEgY2FsbGJhY2sgcmVjb3JkIGNvbnNpc3RzIG9mIGNhbGxiYWNrIGZ1bmN0aW9uIGFuZCBpdHMgb3B0aW9uYWwgY29udGV4dDpcbiAgLy8geyAnZXZlbnROYW1lJyA9PiBbe2NhbGxiYWNrOiBmdW5jdGlvbiwgY3R4OiBvYmplY3R9XSB9XG4gIHZhciByZWdpc3RlcmVkRXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiAoZXZlbnROYW1lLCBjYWxsYmFjaywgY3R4KSB7XG4gICAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignY2FsbGJhY2sgaXMgZXhwZWN0ZWQgdG8gYmUgYSBmdW5jdGlvbicpO1xuICAgICAgfVxuICAgICAgdmFyIGhhbmRsZXJzID0gcmVnaXN0ZXJlZEV2ZW50c1tldmVudE5hbWVdO1xuICAgICAgaWYgKCFoYW5kbGVycykge1xuICAgICAgICBoYW5kbGVycyA9IHJlZ2lzdGVyZWRFdmVudHNbZXZlbnROYW1lXSA9IFtdO1xuICAgICAgfVxuICAgICAgaGFuZGxlcnMucHVzaCh7Y2FsbGJhY2s6IGNhbGxiYWNrLCBjdHg6IGN0eH0pO1xuXG4gICAgICByZXR1cm4gc3ViamVjdDtcbiAgICB9LFxuXG4gICAgb2ZmOiBmdW5jdGlvbiAoZXZlbnROYW1lLCBjYWxsYmFjaykge1xuICAgICAgdmFyIHdhbnRUb1JlbW92ZUFsbCA9ICh0eXBlb2YgZXZlbnROYW1lID09PSAndW5kZWZpbmVkJyk7XG4gICAgICBpZiAod2FudFRvUmVtb3ZlQWxsKSB7XG4gICAgICAgIC8vIEtpbGxpbmcgb2xkIGV2ZW50cyBzdG9yYWdlIHNob3VsZCBiZSBlbm91Z2ggaW4gdGhpcyBjYXNlOlxuICAgICAgICByZWdpc3RlcmVkRXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgcmV0dXJuIHN1YmplY3Q7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZWdpc3RlcmVkRXZlbnRzW2V2ZW50TmFtZV0pIHtcbiAgICAgICAgdmFyIGRlbGV0ZUFsbENhbGxiYWNrc0ZvckV2ZW50ID0gKHR5cGVvZiBjYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJyk7XG4gICAgICAgIGlmIChkZWxldGVBbGxDYWxsYmFja3NGb3JFdmVudCkge1xuICAgICAgICAgIGRlbGV0ZSByZWdpc3RlcmVkRXZlbnRzW2V2ZW50TmFtZV07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIGNhbGxiYWNrcyA9IHJlZ2lzdGVyZWRFdmVudHNbZXZlbnROYW1lXTtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgaWYgKGNhbGxiYWNrc1tpXS5jYWxsYmFjayA9PT0gY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgY2FsbGJhY2tzLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHN1YmplY3Q7XG4gICAgfSxcblxuICAgIGZpcmU6IGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgICAgIHZhciBjYWxsYmFja3MgPSByZWdpc3RlcmVkRXZlbnRzW2V2ZW50TmFtZV07XG4gICAgICBpZiAoIWNhbGxiYWNrcykge1xuICAgICAgICByZXR1cm4gc3ViamVjdDtcbiAgICAgIH1cblxuICAgICAgdmFyIGZpcmVBcmd1bWVudHM7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZmlyZUFyZ3VtZW50cyA9IEFycmF5LnByb3RvdHlwZS5zcGxpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuICAgICAgfVxuICAgICAgZm9yKHZhciBpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7ICsraSkge1xuICAgICAgICB2YXIgY2FsbGJhY2tJbmZvID0gY2FsbGJhY2tzW2ldO1xuICAgICAgICBjYWxsYmFja0luZm8uY2FsbGJhY2suYXBwbHkoY2FsbGJhY2tJbmZvLmN0eCwgZmlyZUFyZ3VtZW50cyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzdWJqZWN0O1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVTdWJqZWN0KHN1YmplY3QpIHtcbiAgaWYgKCFzdWJqZWN0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdFdmVudGlmeSBjYW5ub3QgdXNlIGZhbHN5IG9iamVjdCBhcyBldmVudHMgc3ViamVjdCcpO1xuICB9XG4gIHZhciByZXNlcnZlZFdvcmRzID0gWydvbicsICdmaXJlJywgJ29mZiddO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc2VydmVkV29yZHMubGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoc3ViamVjdC5oYXNPd25Qcm9wZXJ0eShyZXNlcnZlZFdvcmRzW2ldKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3ViamVjdCBjYW5ub3QgYmUgZXZlbnRpZmllZCwgc2luY2UgaXQgYWxyZWFkeSBoYXMgcHJvcGVydHkgJ1wiICsgcmVzZXJ2ZWRXb3Jkc1tpXSArIFwiJ1wiKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/ngraph.events/index.js\n");

/***/ }),

/***/ "../node_modules/ngraph.graph/index.js":
/*!*********************************************!*\
  !*** ../node_modules/ngraph.graph/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * @fileOverview Contains definition of the core graph object.\n */\n\n// TODO: need to change storage layer:\n// 1. Be able to get all nodes O(1)\n// 2. Be able to get number of links O(1)\n\n/**\n * @example\n *  var graph = require('ngraph.graph')();\n *  graph.addNode(1);     // graph has one node.\n *  graph.addLink(2, 3);  // now graph contains three nodes and one link.\n *\n */\nmodule.exports = createGraph;\n\nvar eventify = __webpack_require__(/*! ngraph.events */ \"../node_modules/ngraph.events/index.js\");\n\n/**\n * Creates a new graph\n */\nfunction createGraph(options) {\n  // Graph structure is maintained as dictionary of nodes\n  // and array of links. Each node has 'links' property which\n  // hold all links related to that node. And general links\n  // array is used to speed up all links enumeration. This is inefficient\n  // in terms of memory, but simplifies coding.\n  options = options || {};\n  if ('uniqueLinkId' in options) {\n    console.warn(\n      'ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\\n' +\n      'Use `multigraph` option instead\\n',\n      '\\n',\n      'Note: there is also change in default behavior: From now on each graph\\n'+\n      'is considered to be not a multigraph by default (each edge is unique).'\n    );\n\n    options.multigraph = options.uniqueLinkId;\n  }\n\n  // Dear reader, the non-multigraphs do not guarantee that there is only\n  // one link for a given pair of node. When this option is set to false\n  // we can save some memory and CPU (18% faster for non-multigraph);\n  if (options.multigraph === undefined) options.multigraph = false;\n\n  var nodes = typeof Object.create === 'function' ? Object.create(null) : {},\n    links = [],\n    // Hash of multi-edges. Used to track ids of edges between same nodes\n    multiEdges = {},\n    nodesCount = 0,\n    suspendEvents = 0,\n\n    forEachNode = createNodeIterator(),\n    createLink = options.multigraph ? createUniqueLink : createSingleLink,\n\n    // Our graph API provides means to listen to graph changes. Users can subscribe\n    // to be notified about changes in the graph by using `on` method. However\n    // in some cases they don't use it. To avoid unnecessary memory consumption\n    // we will not record graph changes until we have at least one subscriber.\n    // Code below supports this optimization.\n    //\n    // Accumulates all changes made during graph updates.\n    // Each change element contains:\n    //  changeType - one of the strings: 'add', 'remove' or 'update';\n    //  node - if change is related to node this property is set to changed graph's node;\n    //  link - if change is related to link this property is set to changed graph's link;\n    changes = [],\n    recordLinkChange = noop,\n    recordNodeChange = noop,\n    enterModification = noop,\n    exitModification = noop;\n\n  // this is our public API:\n  var graphPart = {\n    /**\n     * Adds node to the graph. If node with given id already exists in the graph\n     * its data is extended with whatever comes in 'data' argument.\n     *\n     * @param nodeId the node's identifier. A string or number is preferred.\n     * @param [data] additional data for the node being added. If node already\n     *   exists its data object is augmented with the new one.\n     *\n     * @return {node} The newly added node or node with given id if it already exists.\n     */\n    addNode: addNode,\n\n    /**\n     * Adds a link to the graph. The function always create a new\n     * link between two nodes. If one of the nodes does not exists\n     * a new node is created.\n     *\n     * @param fromId link start node id;\n     * @param toId link end node id;\n     * @param [data] additional data to be set on the new link;\n     *\n     * @return {link} The newly created link\n     */\n    addLink: addLink,\n\n    /**\n     * Removes link from the graph. If link does not exist does nothing.\n     *\n     * @param link - object returned by addLink() or getLinks() methods.\n     *\n     * @returns true if link was removed; false otherwise.\n     */\n    removeLink: removeLink,\n\n    /**\n     * Removes node with given id from the graph. If node does not exist in the graph\n     * does nothing.\n     *\n     * @param nodeId node's identifier passed to addNode() function.\n     *\n     * @returns true if node was removed; false otherwise.\n     */\n    removeNode: removeNode,\n\n    /**\n     * Gets node with given identifier. If node does not exist undefined value is returned.\n     *\n     * @param nodeId requested node identifier;\n     *\n     * @return {node} in with requested identifier or undefined if no such node exists.\n     */\n    getNode: getNode,\n\n    /**\n     * Gets number of nodes in this graph.\n     *\n     * @return number of nodes in the graph.\n     */\n    getNodesCount: function () {\n      return nodesCount;\n    },\n\n    /**\n     * Gets total number of links in the graph.\n     */\n    getLinksCount: function () {\n      return links.length;\n    },\n\n    /**\n     * Gets all links (inbound and outbound) from the node with given id.\n     * If node with given id is not found null is returned.\n     *\n     * @param nodeId requested node identifier.\n     *\n     * @return Array of links from and to requested node if such node exists;\n     *   otherwise null is returned.\n     */\n    getLinks: getLinks,\n\n    /**\n     * Invokes callback on each node of the graph.\n     *\n     * @param {Function(node)} callback Function to be invoked. The function\n     *   is passed one argument: visited node.\n     */\n    forEachNode: forEachNode,\n\n    /**\n     * Invokes callback on every linked (adjacent) node to the given one.\n     *\n     * @param nodeId Identifier of the requested node.\n     * @param {Function(node, link)} callback Function to be called on all linked nodes.\n     *   The function is passed two parameters: adjacent node and link object itself.\n     * @param oriented if true graph treated as oriented.\n     */\n    forEachLinkedNode: forEachLinkedNode,\n\n    /**\n     * Enumerates all links in the graph\n     *\n     * @param {Function(link)} callback Function to be called on all links in the graph.\n     *   The function is passed one parameter: graph's link object.\n     *\n     * Link object contains at least the following fields:\n     *  fromId - node id where link starts;\n     *  toId - node id where link ends,\n     *  data - additional data passed to graph.addLink() method.\n     */\n    forEachLink: forEachLink,\n\n    /**\n     * Suspend all notifications about graph changes until\n     * endUpdate is called.\n     */\n    beginUpdate: enterModification,\n\n    /**\n     * Resumes all notifications about graph changes and fires\n     * graph 'changed' event in case there are any pending changes.\n     */\n    endUpdate: exitModification,\n\n    /**\n     * Removes all nodes and links from the graph.\n     */\n    clear: clear,\n\n    /**\n     * Detects whether there is a link between two nodes.\n     * Operation complexity is O(n) where n - number of links of a node.\n     * NOTE: this function is synonim for getLink()\n     *\n     * @returns link if there is one. null otherwise.\n     */\n    hasLink: getLink,\n\n    /**\n     * Detects whether there is a node with given id\n     * \n     * Operation complexity is O(1)\n     * NOTE: this function is synonim for getNode()\n     *\n     * @returns node if there is one; Falsy value otherwise.\n     */\n    hasNode: getNode,\n\n    /**\n     * Gets an edge between two nodes.\n     * Operation complexity is O(n) where n - number of links of a node.\n     *\n     * @param {string} fromId link start identifier\n     * @param {string} toId link end identifier\n     *\n     * @returns link if there is one. null otherwise.\n     */\n    getLink: getLink\n  };\n\n  // this will add `on()` and `fire()` methods.\n  eventify(graphPart);\n\n  monitorSubscribers();\n\n  return graphPart;\n\n  function monitorSubscribers() {\n    var realOn = graphPart.on;\n\n    // replace real `on` with our temporary on, which will trigger change\n    // modification monitoring:\n    graphPart.on = on;\n\n    function on() {\n      // now it's time to start tracking stuff:\n      graphPart.beginUpdate = enterModification = enterModificationReal;\n      graphPart.endUpdate = exitModification = exitModificationReal;\n      recordLinkChange = recordLinkChangeReal;\n      recordNodeChange = recordNodeChangeReal;\n\n      // this will replace current `on` method with real pub/sub from `eventify`.\n      graphPart.on = realOn;\n      // delegate to real `on` handler:\n      return realOn.apply(graphPart, arguments);\n    }\n  }\n\n  function recordLinkChangeReal(link, changeType) {\n    changes.push({\n      link: link,\n      changeType: changeType\n    });\n  }\n\n  function recordNodeChangeReal(node, changeType) {\n    changes.push({\n      node: node,\n      changeType: changeType\n    });\n  }\n\n  function addNode(nodeId, data) {\n    if (nodeId === undefined) {\n      throw new Error('Invalid node identifier');\n    }\n\n    enterModification();\n\n    var node = getNode(nodeId);\n    if (!node) {\n      node = new Node(nodeId, data);\n      nodesCount++;\n      recordNodeChange(node, 'add');\n    } else {\n      node.data = data;\n      recordNodeChange(node, 'update');\n    }\n\n    nodes[nodeId] = node;\n\n    exitModification();\n    return node;\n  }\n\n  function getNode(nodeId) {\n    return nodes[nodeId];\n  }\n\n  function removeNode(nodeId) {\n    var node = getNode(nodeId);\n    if (!node) {\n      return false;\n    }\n\n    enterModification();\n\n    var prevLinks = node.links;\n    if (prevLinks) {\n      node.links = null;\n      for(var i = 0; i < prevLinks.length; ++i) {\n        removeLink(prevLinks[i]);\n      }\n    }\n\n    delete nodes[nodeId];\n    nodesCount--;\n\n    recordNodeChange(node, 'remove');\n\n    exitModification();\n\n    return true;\n  }\n\n\n  function addLink(fromId, toId, data) {\n    enterModification();\n\n    var fromNode = getNode(fromId) || addNode(fromId);\n    var toNode = getNode(toId) || addNode(toId);\n\n    var link = createLink(fromId, toId, data);\n\n    links.push(link);\n\n    // TODO: this is not cool. On large graphs potentially would consume more memory.\n    addLinkToNode(fromNode, link);\n    if (fromId !== toId) {\n      // make sure we are not duplicating links for self-loops\n      addLinkToNode(toNode, link);\n    }\n\n    recordLinkChange(link, 'add');\n\n    exitModification();\n\n    return link;\n  }\n\n  function createSingleLink(fromId, toId, data) {\n    var linkId = makeLinkId(fromId, toId);\n    return new Link(fromId, toId, data, linkId);\n  }\n\n  function createUniqueLink(fromId, toId, data) {\n    // TODO: Get rid of this method.\n    var linkId = makeLinkId(fromId, toId);\n    var isMultiEdge = multiEdges.hasOwnProperty(linkId);\n    if (isMultiEdge || getLink(fromId, toId)) {\n      if (!isMultiEdge) {\n        multiEdges[linkId] = 0;\n      }\n      var suffix = '@' + (++multiEdges[linkId]);\n      linkId = makeLinkId(fromId + suffix, toId + suffix);\n    }\n\n    return new Link(fromId, toId, data, linkId);\n  }\n\n  function getLinks(nodeId) {\n    var node = getNode(nodeId);\n    return node ? node.links : null;\n  }\n\n  function removeLink(link) {\n    if (!link) {\n      return false;\n    }\n    var idx = indexOfElementInArray(link, links);\n    if (idx < 0) {\n      return false;\n    }\n\n    enterModification();\n\n    links.splice(idx, 1);\n\n    var fromNode = getNode(link.fromId);\n    var toNode = getNode(link.toId);\n\n    if (fromNode) {\n      idx = indexOfElementInArray(link, fromNode.links);\n      if (idx >= 0) {\n        fromNode.links.splice(idx, 1);\n      }\n    }\n\n    if (toNode) {\n      idx = indexOfElementInArray(link, toNode.links);\n      if (idx >= 0) {\n        toNode.links.splice(idx, 1);\n      }\n    }\n\n    recordLinkChange(link, 'remove');\n\n    exitModification();\n\n    return true;\n  }\n\n  function getLink(fromNodeId, toNodeId) {\n    // TODO: Use sorted links to speed this up\n    var node = getNode(fromNodeId),\n      i;\n    if (!node || !node.links) {\n      return null;\n    }\n\n    for (i = 0; i < node.links.length; ++i) {\n      var link = node.links[i];\n      if (link.fromId === fromNodeId && link.toId === toNodeId) {\n        return link;\n      }\n    }\n\n    return null; // no link.\n  }\n\n  function clear() {\n    enterModification();\n    forEachNode(function(node) {\n      removeNode(node.id);\n    });\n    exitModification();\n  }\n\n  function forEachLink(callback) {\n    var i, length;\n    if (typeof callback === 'function') {\n      for (i = 0, length = links.length; i < length; ++i) {\n        callback(links[i]);\n      }\n    }\n  }\n\n  function forEachLinkedNode(nodeId, callback, oriented) {\n    var node = getNode(nodeId);\n\n    if (node && node.links && typeof callback === 'function') {\n      if (oriented) {\n        return forEachOrientedLink(node.links, nodeId, callback);\n      } else {\n        return forEachNonOrientedLink(node.links, nodeId, callback);\n      }\n    }\n  }\n\n  function forEachNonOrientedLink(links, nodeId, callback) {\n    var quitFast;\n    for (var i = 0; i < links.length; ++i) {\n      var link = links[i];\n      var linkedNodeId = link.fromId === nodeId ? link.toId : link.fromId;\n\n      quitFast = callback(nodes[linkedNodeId], link);\n      if (quitFast) {\n        return true; // Client does not need more iterations. Break now.\n      }\n    }\n  }\n\n  function forEachOrientedLink(links, nodeId, callback) {\n    var quitFast;\n    for (var i = 0; i < links.length; ++i) {\n      var link = links[i];\n      if (link.fromId === nodeId) {\n        quitFast = callback(nodes[link.toId], link);\n        if (quitFast) {\n          return true; // Client does not need more iterations. Break now.\n        }\n      }\n    }\n  }\n\n  // we will not fire anything until users of this library explicitly call `on()`\n  // method.\n  function noop() {}\n\n  // Enter, Exit modification allows bulk graph updates without firing events.\n  function enterModificationReal() {\n    suspendEvents += 1;\n  }\n\n  function exitModificationReal() {\n    suspendEvents -= 1;\n    if (suspendEvents === 0 && changes.length > 0) {\n      graphPart.fire('changed', changes);\n      changes.length = 0;\n    }\n  }\n\n  function createNodeIterator() {\n    // Object.keys iterator is 1.3x faster than `for in` loop.\n    // See `https://github.com/anvaka/ngraph.graph/tree/bench-for-in-vs-obj-keys`\n    // branch for perf test\n    return Object.keys ? objectKeysIterator : forInIterator;\n  }\n\n  function objectKeysIterator(callback) {\n    if (typeof callback !== 'function') {\n      return;\n    }\n\n    var keys = Object.keys(nodes);\n    for (var i = 0; i < keys.length; ++i) {\n      if (callback(nodes[keys[i]])) {\n        return true; // client doesn't want to proceed. Return.\n      }\n    }\n  }\n\n  function forInIterator(callback) {\n    if (typeof callback !== 'function') {\n      return;\n    }\n    var node;\n\n    for (node in nodes) {\n      if (callback(nodes[node])) {\n        return true; // client doesn't want to proceed. Return.\n      }\n    }\n  }\n}\n\n// need this for old browsers. Should this be a separate module?\nfunction indexOfElementInArray(element, array) {\n  if (!array) return -1;\n\n  if (array.indexOf) {\n    return array.indexOf(element);\n  }\n\n  var len = array.length,\n    i;\n\n  for (i = 0; i < len; i += 1) {\n    if (array[i] === element) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Internal structure to represent node;\n */\nfunction Node(id, data) {\n  this.id = id;\n  this.links = null;\n  this.data = data;\n}\n\nfunction addLinkToNode(node, link) {\n  if (node.links) {\n    node.links.push(link);\n  } else {\n    node.links = [link];\n  }\n}\n\n/**\n * Internal structure to represent links;\n */\nfunction Link(fromId, toId, data, id) {\n  this.fromId = fromId;\n  this.toId = toId;\n  this.data = data;\n  this.id = id;\n}\n\nfunction hashCode(str) {\n  var hash = 0, i, chr, len;\n  if (str.length == 0) return hash;\n  for (i = 0, len = str.length; i < len; i++) {\n    chr   = str.charCodeAt(i);\n    hash  = ((hash << 5) - hash) + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nfunction makeLinkId(fromId, toId) {\n  return fromId.toString() + '👉 ' + toId.toString();\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/ngraph.graph/index.js\n");

/***/ }),

/***/ "../node_modules/ngraph.tojson/index.js":
/*!**********************************************!*\
  !*** ../node_modules/ngraph.tojson/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = save;\n\nfunction save(graph, customNodeTransform, customLinkTransform) {\n  // Object contains `nodes` and `links` arrays.\n  var result = {\n    nodes: [],\n    links: []\n  };\n\n  var nodeTransform = customNodeTransform || defaultTransformForNode;\n  var linkTransform = customLinkTransform || defaultTransformForLink;\n\n  graph.forEachNode(saveNode);\n  graph.forEachLink(saveLink);\n\n  return JSON.stringify(result);\n\n  function saveNode(node) {\n    // Each node of the graph is processed to take only required fields\n    // `id` and `data`\n    result.nodes.push(nodeTransform(node));\n  }\n\n  function saveLink(link) {\n    // Each link of the graph is also processed to take `fromId`, `toId` and\n    // `data`\n    result.links.push(linkTransform(link));\n  }\n\n  function defaultTransformForNode(node) {\n    var result = {\n      id: node.id\n    };\n    // We don't want to store undefined fields when it's not necessary:\n    if (node.data !== undefined) {\n      result.data = node.data;\n    }\n\n    return result;\n  }\n\n  function defaultTransformForLink(link) {\n    var result = {\n      fromId: link.fromId,\n      toId: link.toId,\n    };\n\n    if (link.data !== undefined) {\n      result.data = link.data;\n    }\n\n    return result;\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL25ncmFwaC50b2pzb24vaW5kZXguanM/ODY2NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9uZ3JhcGgudG9qc29uL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBzYXZlO1xuXG5mdW5jdGlvbiBzYXZlKGdyYXBoLCBjdXN0b21Ob2RlVHJhbnNmb3JtLCBjdXN0b21MaW5rVHJhbnNmb3JtKSB7XG4gIC8vIE9iamVjdCBjb250YWlucyBgbm9kZXNgIGFuZCBgbGlua3NgIGFycmF5cy5cbiAgdmFyIHJlc3VsdCA9IHtcbiAgICBub2RlczogW10sXG4gICAgbGlua3M6IFtdXG4gIH07XG5cbiAgdmFyIG5vZGVUcmFuc2Zvcm0gPSBjdXN0b21Ob2RlVHJhbnNmb3JtIHx8IGRlZmF1bHRUcmFuc2Zvcm1Gb3JOb2RlO1xuICB2YXIgbGlua1RyYW5zZm9ybSA9IGN1c3RvbUxpbmtUcmFuc2Zvcm0gfHwgZGVmYXVsdFRyYW5zZm9ybUZvckxpbms7XG5cbiAgZ3JhcGguZm9yRWFjaE5vZGUoc2F2ZU5vZGUpO1xuICBncmFwaC5mb3JFYWNoTGluayhzYXZlTGluayk7XG5cbiAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHJlc3VsdCk7XG5cbiAgZnVuY3Rpb24gc2F2ZU5vZGUobm9kZSkge1xuICAgIC8vIEVhY2ggbm9kZSBvZiB0aGUgZ3JhcGggaXMgcHJvY2Vzc2VkIHRvIHRha2Ugb25seSByZXF1aXJlZCBmaWVsZHNcbiAgICAvLyBgaWRgIGFuZCBgZGF0YWBcbiAgICByZXN1bHQubm9kZXMucHVzaChub2RlVHJhbnNmb3JtKG5vZGUpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNhdmVMaW5rKGxpbmspIHtcbiAgICAvLyBFYWNoIGxpbmsgb2YgdGhlIGdyYXBoIGlzIGFsc28gcHJvY2Vzc2VkIHRvIHRha2UgYGZyb21JZGAsIGB0b0lkYCBhbmRcbiAgICAvLyBgZGF0YWBcbiAgICByZXN1bHQubGlua3MucHVzaChsaW5rVHJhbnNmb3JtKGxpbmspKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlZmF1bHRUcmFuc2Zvcm1Gb3JOb2RlKG5vZGUpIHtcbiAgICB2YXIgcmVzdWx0ID0ge1xuICAgICAgaWQ6IG5vZGUuaWRcbiAgICB9O1xuICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gc3RvcmUgdW5kZWZpbmVkIGZpZWxkcyB3aGVuIGl0J3Mgbm90IG5lY2Vzc2FyeTpcbiAgICBpZiAobm9kZS5kYXRhICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJlc3VsdC5kYXRhID0gbm9kZS5kYXRhO1xuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBmdW5jdGlvbiBkZWZhdWx0VHJhbnNmb3JtRm9yTGluayhsaW5rKSB7XG4gICAgdmFyIHJlc3VsdCA9IHtcbiAgICAgIGZyb21JZDogbGluay5mcm9tSWQsXG4gICAgICB0b0lkOiBsaW5rLnRvSWQsXG4gICAgfTtcblxuICAgIGlmIChsaW5rLmRhdGEgIT09IHVuZGVmaW5lZCkge1xuICAgICAgcmVzdWx0LmRhdGEgPSBsaW5rLmRhdGE7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/ngraph.tojson/index.js\n");

/***/ }),

/***/ "../src/Edge.js":
/*!**********************!*\
  !*** ../src/Edge.js ***!
  \**********************/
/*! exports provided: Edge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Edge\", function() { return Edge; });\nclass Edge {\n  constructor (p1, p2) {\n    this.p1 = p1\n    this.p2 = p2\n\n    p1.edges.push(this)\n    p2.edges.push(this)\n  }\n\n  getOtherPointInEdge (point) {\n    return this.p1.isPointEqual(point) ? this.p2 : this.p1\n  }\n\n  areEdgesEqual (otherEdge) {\n    if (this.p1.isPointEqual(otherEdge.p1) && this.p2.isPointEqual(otherEdge.p2)) return true\n    if (this.p1.isPointEqual(otherEdge.p2) && this.p2.isPointEqual(otherEdge.p1)) return true\n    return false\n  }\n\n  containsPoint (point) {\n    if (this.p1.isPointEqual(point) || this.p2.isPointEqual(point)) return true\n    return false\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL0VkZ2UuanM/ZDE1ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vc3JjL0VkZ2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRWRnZSB7XG4gIGNvbnN0cnVjdG9yIChwMSwgcDIpIHtcbiAgICB0aGlzLnAxID0gcDFcbiAgICB0aGlzLnAyID0gcDJcblxuICAgIHAxLmVkZ2VzLnB1c2godGhpcylcbiAgICBwMi5lZGdlcy5wdXNoKHRoaXMpXG4gIH1cblxuICBnZXRPdGhlclBvaW50SW5FZGdlIChwb2ludCkge1xuICAgIHJldHVybiB0aGlzLnAxLmlzUG9pbnRFcXVhbChwb2ludCkgPyB0aGlzLnAyIDogdGhpcy5wMVxuICB9XG5cbiAgYXJlRWRnZXNFcXVhbCAob3RoZXJFZGdlKSB7XG4gICAgaWYgKHRoaXMucDEuaXNQb2ludEVxdWFsKG90aGVyRWRnZS5wMSkgJiYgdGhpcy5wMi5pc1BvaW50RXF1YWwob3RoZXJFZGdlLnAyKSkgcmV0dXJuIHRydWVcbiAgICBpZiAodGhpcy5wMS5pc1BvaW50RXF1YWwob3RoZXJFZGdlLnAyKSAmJiB0aGlzLnAyLmlzUG9pbnRFcXVhbChvdGhlckVkZ2UucDEpKSByZXR1cm4gdHJ1ZVxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgY29udGFpbnNQb2ludCAocG9pbnQpIHtcbiAgICBpZiAodGhpcy5wMS5pc1BvaW50RXF1YWwocG9pbnQpIHx8IHRoaXMucDIuaXNQb2ludEVxdWFsKHBvaW50KSkgcmV0dXJuIHRydWVcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/Edge.js\n");

/***/ }),

/***/ "../src/EdgeKey.js":
/*!*************************!*\
  !*** ../src/EdgeKey.js ***!
  \*************************/
/*! exports provided: EdgeKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EdgeKey\", function() { return EdgeKey; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"../src/utils.js\");\n\n\nclass EdgeKey {\n\n  constructor (p1, p2, edge) {\n    this.p1 = p1\n    this.p2 = p2\n    this.edge = edge\n  }\n\n  isLessThanOtherEdgeKey (otherEdgeKey) {\n    if (this.matchesOtherKey(otherEdgeKey)) return false\n    if (!Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"edgeIntersect\"])(this.p1, this.p2, otherEdgeKey.edge)) return true\n    const selfDistance = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"pointEdgeDistance\"])(this.p1, this.p2, this.edge)\n    const otherDistance = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"pointEdgeDistance\"])(this.p1, this.p2, otherEdgeKey.edge)\n    if (selfDistance > otherDistance) return false\n    if (selfDistance < otherDistance) return true\n    if (selfDistance === otherDistance) {\n      let samePoint = null\n      if (otherEdgeKey.edge.containsPoint(this.edge.p1)) samePoint = this.edge.p1\n      // else if (otherEdgeKey.edge.containsPoint(this.edge.p2)) samePoint = this.edge.p2\n      else samePoint = this.edge.p2\n      const aslf = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"angle2\"])(this.p1, this.p2, this.edge.getOtherPointInEdge(samePoint))\n      const aot = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"angle2\"])(this.p1, this.p2, otherEdgeKey.edge.getOtherPointInEdge(samePoint))\n      if (aslf < aot) return true\n      return false\n    }\n  }\n\n  matchesOtherKey (otherKey) {\n    return this.edge.areEdgesEqual(otherKey.edge)\n  }\n\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL0VkZ2VLZXkuanM/MjQzYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBa0U7O0FBRTNEOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVMsNERBQWE7QUFDdEIseUJBQXlCLGdFQUFpQjtBQUMxQywwQkFBMEIsZ0VBQWlCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHFEQUFNO0FBQ3pCLGtCQUFrQixxREFBTTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi4vc3JjL0VkZ2VLZXkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlZGdlSW50ZXJzZWN0LCBwb2ludEVkZ2VEaXN0YW5jZSwgYW5nbGUyIH0gZnJvbSAnLi91dGlscydcblxuZXhwb3J0IGNsYXNzIEVkZ2VLZXkge1xuXG4gIGNvbnN0cnVjdG9yIChwMSwgcDIsIGVkZ2UpIHtcbiAgICB0aGlzLnAxID0gcDFcbiAgICB0aGlzLnAyID0gcDJcbiAgICB0aGlzLmVkZ2UgPSBlZGdlXG4gIH1cblxuICBpc0xlc3NUaGFuT3RoZXJFZGdlS2V5IChvdGhlckVkZ2VLZXkpIHtcbiAgICBpZiAodGhpcy5tYXRjaGVzT3RoZXJLZXkob3RoZXJFZGdlS2V5KSkgcmV0dXJuIGZhbHNlXG4gICAgaWYgKCFlZGdlSW50ZXJzZWN0KHRoaXMucDEsIHRoaXMucDIsIG90aGVyRWRnZUtleS5lZGdlKSkgcmV0dXJuIHRydWVcbiAgICBjb25zdCBzZWxmRGlzdGFuY2UgPSBwb2ludEVkZ2VEaXN0YW5jZSh0aGlzLnAxLCB0aGlzLnAyLCB0aGlzLmVkZ2UpXG4gICAgY29uc3Qgb3RoZXJEaXN0YW5jZSA9IHBvaW50RWRnZURpc3RhbmNlKHRoaXMucDEsIHRoaXMucDIsIG90aGVyRWRnZUtleS5lZGdlKVxuICAgIGlmIChzZWxmRGlzdGFuY2UgPiBvdGhlckRpc3RhbmNlKSByZXR1cm4gZmFsc2VcbiAgICBpZiAoc2VsZkRpc3RhbmNlIDwgb3RoZXJEaXN0YW5jZSkgcmV0dXJuIHRydWVcbiAgICBpZiAoc2VsZkRpc3RhbmNlID09PSBvdGhlckRpc3RhbmNlKSB7XG4gICAgICBsZXQgc2FtZVBvaW50ID0gbnVsbFxuICAgICAgaWYgKG90aGVyRWRnZUtleS5lZGdlLmNvbnRhaW5zUG9pbnQodGhpcy5lZGdlLnAxKSkgc2FtZVBvaW50ID0gdGhpcy5lZGdlLnAxXG4gICAgICAvLyBlbHNlIGlmIChvdGhlckVkZ2VLZXkuZWRnZS5jb250YWluc1BvaW50KHRoaXMuZWRnZS5wMikpIHNhbWVQb2ludCA9IHRoaXMuZWRnZS5wMlxuICAgICAgZWxzZSBzYW1lUG9pbnQgPSB0aGlzLmVkZ2UucDJcbiAgICAgIGNvbnN0IGFzbGYgPSBhbmdsZTIodGhpcy5wMSwgdGhpcy5wMiwgdGhpcy5lZGdlLmdldE90aGVyUG9pbnRJbkVkZ2Uoc2FtZVBvaW50KSlcbiAgICAgIGNvbnN0IGFvdCA9IGFuZ2xlMih0aGlzLnAxLCB0aGlzLnAyLCBvdGhlckVkZ2VLZXkuZWRnZS5nZXRPdGhlclBvaW50SW5FZGdlKHNhbWVQb2ludCkpXG4gICAgICBpZiAoYXNsZiA8IGFvdCkgcmV0dXJuIHRydWVcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgfVxuXG4gIG1hdGNoZXNPdGhlcktleSAob3RoZXJLZXkpIHtcbiAgICByZXR1cm4gdGhpcy5lZGdlLmFyZUVkZ2VzRXF1YWwob3RoZXJLZXkuZWRnZSlcbiAgfVxuXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../src/EdgeKey.js\n");

/***/ }),

/***/ "../src/EdgeKeys.js":
/*!**************************!*\
  !*** ../src/EdgeKeys.js ***!
  \**************************/
/*! exports provided: EdgeKeys */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EdgeKeys\", function() { return EdgeKeys; });\nclass EdgeKeys {\n\n  constructor () {\n    this.keys = []\n  }\n\n  findKeyPosition (edgekey, p) {\n    let lo = 0\n    let hi = this.keys.length\n    while (lo < hi) {\n      const mid = Math.floor((lo + hi) / 2)\n      if (edgekey.isLessThanOtherEdgeKey(this.keys[mid])) hi = mid\n      else lo = mid + 1\n    }\n    return lo\n  }\n\n  addKey (edgekey, p) {\n    const lo = this.findKeyPosition(edgekey)\n    this.keys.splice(lo, 0, edgekey)\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL0VkZ2VLZXlzLmpzPzA3NmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFPOztBQUVQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL3NyYy9FZGdlS2V5cy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBFZGdlS2V5cyB7XG5cbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHRoaXMua2V5cyA9IFtdXG4gIH1cblxuICBmaW5kS2V5UG9zaXRpb24gKGVkZ2VrZXksIHApIHtcbiAgICBsZXQgbG8gPSAwXG4gICAgbGV0IGhpID0gdGhpcy5rZXlzLmxlbmd0aFxuICAgIHdoaWxlIChsbyA8IGhpKSB7XG4gICAgICBjb25zdCBtaWQgPSBNYXRoLmZsb29yKChsbyArIGhpKSAvIDIpXG4gICAgICBpZiAoZWRnZWtleS5pc0xlc3NUaGFuT3RoZXJFZGdlS2V5KHRoaXMua2V5c1ttaWRdKSkgaGkgPSBtaWRcbiAgICAgIGVsc2UgbG8gPSBtaWQgKyAxXG4gICAgfVxuICAgIHJldHVybiBsb1xuICB9XG5cbiAgYWRkS2V5IChlZGdla2V5LCBwKSB7XG4gICAgY29uc3QgbG8gPSB0aGlzLmZpbmRLZXlQb3NpdGlvbihlZGdla2V5KVxuICAgIHRoaXMua2V5cy5zcGxpY2UobG8sIDAsIGVkZ2VrZXkpXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/EdgeKeys.js\n");

/***/ }),

/***/ "../src/Point.js":
/*!***********************!*\
  !*** ../src/Point.js ***!
  \***********************/
/*! exports provided: Point */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Point\", function() { return Point; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"../src/utils.js\");\n\n\nclass Point {\n\n  constructor (coords, polygonID) {\n    if (polygonID === null) polygonID = -1\n    this.x = coords[0]\n    this.y = coords[1]\n    this.polygonID = polygonID\n    this.edges = []\n    this.prevPoint = null\n    this.nextPoint = null\n  }\n\n  isPointEqual (otherPoint) {\n    return this.x === otherPoint.x && this.y === otherPoint.y\n  }\n\n  angleToPoint (otherPoint) {\n    if (this.isPointEqual(otherPoint)) return 0\n    const dx = otherPoint.x - this.x\n    const dy = otherPoint.y - this.y\n    if (dx === 0) dy < 1 ? _utils__WEBPACK_IMPORTED_MODULE_0__[\"pi1\"] : _utils__WEBPACK_IMPORTED_MODULE_0__[\"pi2\"]\n    if (dy === 0) dx < 0 ? Math.PI : 0\n    if (dx < 0) return Math.PI + Math.atan(dy / dx)\n    if (dy < 0) return 2 * Math.PI + Math.atan(dy / dx)\n    return Math.atan(dy / dx)\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL1BvaW50LmpzP2JlNzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQWtDOztBQUUzQjs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDBDQUFHLEdBQUcsMENBQUc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL3NyYy9Qb2ludC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBpMSwgcGkyIH0gZnJvbSAnLi91dGlscydcblxuZXhwb3J0IGNsYXNzIFBvaW50IHtcblxuICBjb25zdHJ1Y3RvciAoY29vcmRzLCBwb2x5Z29uSUQpIHtcbiAgICBpZiAocG9seWdvbklEID09PSBudWxsKSBwb2x5Z29uSUQgPSAtMVxuICAgIHRoaXMueCA9IGNvb3Jkc1swXVxuICAgIHRoaXMueSA9IGNvb3Jkc1sxXVxuICAgIHRoaXMucG9seWdvbklEID0gcG9seWdvbklEXG4gICAgdGhpcy5lZGdlcyA9IFtdXG4gICAgdGhpcy5wcmV2UG9pbnQgPSBudWxsXG4gICAgdGhpcy5uZXh0UG9pbnQgPSBudWxsXG4gIH1cblxuICBpc1BvaW50RXF1YWwgKG90aGVyUG9pbnQpIHtcbiAgICByZXR1cm4gdGhpcy54ID09PSBvdGhlclBvaW50LnggJiYgdGhpcy55ID09PSBvdGhlclBvaW50LnlcbiAgfVxuXG4gIGFuZ2xlVG9Qb2ludCAob3RoZXJQb2ludCkge1xuICAgIGlmICh0aGlzLmlzUG9pbnRFcXVhbChvdGhlclBvaW50KSkgcmV0dXJuIDBcbiAgICBjb25zdCBkeCA9IG90aGVyUG9pbnQueCAtIHRoaXMueFxuICAgIGNvbnN0IGR5ID0gb3RoZXJQb2ludC55IC0gdGhpcy55XG4gICAgaWYgKGR4ID09PSAwKSBkeSA8IDEgPyBwaTEgOiBwaTJcbiAgICBpZiAoZHkgPT09IDApIGR4IDwgMCA/IE1hdGguUEkgOiAwXG4gICAgaWYgKGR4IDwgMCkgcmV0dXJuIE1hdGguUEkgKyBNYXRoLmF0YW4oZHkgLyBkeClcbiAgICBpZiAoZHkgPCAwKSByZXR1cm4gMiAqIE1hdGguUEkgKyBNYXRoLmF0YW4oZHkgLyBkeClcbiAgICByZXR1cm4gTWF0aC5hdGFuKGR5IC8gZHgpXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/Point.js\n");

/***/ }),

/***/ "../src/createGraphFromGeoJson.js":
/*!****************************************!*\
  !*** ../src/createGraphFromGeoJson.js ***!
  \****************************************/
/*! exports provided: loadPoints, restoreOriginalPointsAndEdges, getVisibleNodes, addStartingAndEndingNodes, getObstructingEdge, isVisible, createGraphFromGeoJson */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadPoints\", function() { return loadPoints; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"restoreOriginalPointsAndEdges\", function() { return restoreOriginalPointsAndEdges; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getVisibleNodes\", function() { return getVisibleNodes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addStartingAndEndingNodes\", function() { return addStartingAndEndingNodes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getObstructingEdge\", function() { return getObstructingEdge; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isVisible\", function() { return isVisible; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createGraphFromGeoJson\", function() { return createGraphFromGeoJson; });\n/* harmony import */ var ngraph_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngraph.graph */ \"../node_modules/ngraph.graph/index.js\");\n/* harmony import */ var ngraph_graph__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ngraph_graph__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _EdgeKeys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EdgeKeys */ \"../src/EdgeKeys.js\");\n/* harmony import */ var _EdgeKey__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EdgeKey */ \"../src/EdgeKey.js\");\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Point */ \"../src/Point.js\");\n/* harmony import */ var _setupStructure__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./setupStructure */ \"../src/setupStructure.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \"../src/utils.js\");\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./debug */ \"../src/debug.js\");\n/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Edge */ \"../src/Edge.js\");\n\n\n\n\n\n\n //eslint-disable-line\n\n\n\nconst points = []\nconst edges = []\nconst polygons = []\nvar originalPointsLength = 0\nvar originalEdgesLength = 0\n\nfunction loadPoints (geojson) {\n  Object(_setupStructure__WEBPACK_IMPORTED_MODULE_4__[\"setupStructure\"])(geojson, edges, points, polygons)\n  originalPointsLength = points.length\n  originalEdgesLength = edges.length\n}\n\nfunction restoreOriginalPointsAndEdges() {\n  while(points.length > originalPointsLength) {\n    points.pop()\n  }\n\n  while(edges.length > originalEdgesLength) {\n    edges.pop()\n  }\n}\n\n// add start and end to nodes and check for visibility\nfunction getVisibleNodes (pt1, start, end) {\n  if(start != null && end != null){\n    // edges.push(new Edge(points[points.length-1], start))\n    edges.push(new _Edge__WEBPACK_IMPORTED_MODULE_7__[\"Edge\"](start, end))\n    // edges.push(new Edge(end, points[0]))\n\n    // start.prevPoint = points[points.length-1]\n    // start.nextPoint = end\n    start.polygonID = -1\n\n    // end.prevPoint = start\n    // end.nextPoint = points[0]\n    end.polygonID = -1\n\n    points.push(start)\n    points.push(end)\n  }\n\n  const g = ngraph_graph__WEBPACK_IMPORTED_MODULE_0___default()()\n  const pointsLen = points.length\n  const clonedPoints = clonePoints()\n\n  for (var i = 0; i < pointsLen; i++) {\n    const p = points[i]\n    if (!p.isPointEqual(pt1)) continue\n\n    const prevPoint = p.prevPoint\n    const nextPoint = p.nextPoint\n\n    sortPoints(p, clonedPoints)\n    // _renderSortedPoints(p, clonedPoints)\n\n    const openEdges = new _EdgeKeys__WEBPACK_IMPORTED_MODULE_1__[\"EdgeKeys\"]()\n    const pointInf = new _Point__WEBPACK_IMPORTED_MODULE_3__[\"Point\"]([_utils__WEBPACK_IMPORTED_MODULE_5__[\"INF\"], p.y], null)\n    for (let ii = 0; ii < pointsLen; ii++) {\n      const e = edges[ii]\n      if (typeof e != 'undefined' && e.containsPoint(p)) continue\n      if (typeof e != 'undefined' && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p, pointInf, e)) {\n        if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, e.p1, pointInf) || Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, e.p2, pointInf)) continue\n        openEdges.addKey(new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, pointInf, e))\n      }\n    }\n    // // _renderOpenEdges(p, openEdges.keys)\n\n    const visible = []\n    if(prevPoint) visible.push(prevPoint)\n    if(nextPoint) visible.push(nextPoint)\n    let prev = null\n    let prevVisible = null\n\n    for (let ii = 0; ii < pointsLen; ii++) {\n      const p2 = clonedPoints[ii]\n      // if (!p2.isPointEqual(pt2)) continue\n      if (p2.isPointEqual(p)) continue\n      if (p.angleToPoint(p2) > Math.pi) break\n\n      if (openEdges.keys.length > 0) {\n        for (let iii = 0; iii < p2.edges.length; iii++) {\n          const e = p2.edges[iii]\n          if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, p2, e.getOtherPointInEdge(p2)) === -1) {\n            const k = new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, p2, e)\n            const index = openEdges.findKeyPosition(k) - 1\n            if (index !== -1 && openEdges.keys[index].matchesOtherKey(k)) {\n              openEdges.keys.splice(index, 1)\n            }\n          }\n        }\n      }\n\n      let isVisible = false\n      if (prev === null || Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, prev, p2) !== 0 || !Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, prev, p2)) {\n        if (openEdges.keys.length === 0) {\n          isVisible = true\n        } else if (!Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p, p2, openEdges.keys[0].edge)) {\n          isVisible = true\n        }\n      } else if (!prevVisible) {\n        isVisible = false\n      } else {\n        isVisible = true\n        for (let iii = 0; iii < openEdges.keys.length; iii++) {\n          const e = openEdges.keys[iii]\n          if (!e.edge.containsPoint(prev) && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(prev, p2, e.edge)) {\n            isVisible = false\n            break\n          }\n        }\n        if (isVisible && edgeInPolygon(prev, p2)) isVisible = false\n      }\n\n      const isInAdjacentPoints = (prevPoint != null && p2.isPointEqual(prevPoint)) || (nextPoint != null && p2.isPointEqual(nextPoint))\n      if (isVisible && !isInAdjacentPoints) isVisible = !edgeInPolygon(p, p2)\n\n      if (isVisible) visible.push(p2)\n      \n\n      for (let iii = 0; iii < p2.edges.length; iii++) {\n        const e = p2.edges[iii]\n        if (!e.containsPoint(p) && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, p2, e.getOtherPointInEdge(p2)) === 1) {\n          const k = new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, p2, e)\n          openEdges.addKey(k)\n        }\n      }\n\n      prev = p2\n      prevVisible = isVisible\n    }\n\n    return visible;\n\n    // const nodeId = createNodeId(p)\n    // g.addNode(nodeId, { x: p.x, y: p.y })\n\n    // for (var ii = 0; ii < visible.length; ii++) {\n    //   const otherNodeId = createNodeId(visible[ii])\n    //   g.addNode(otherNodeId, { x: visible[ii].x, y: visible[ii].y })\n    //   g.addLink(nodeId, otherNodeId)\n    // }\n  }\n  // return g\n}\n\nfunction addStartingAndEndingNodes (start, end) {\n  // edges.push(new Edge(points[points.length-1], start))\n  edges.push(new _Edge__WEBPACK_IMPORTED_MODULE_7__[\"Edge\"](start, end))\n  // edges.push(new Edge(end, points[0]))\n\n  // start.prevPoint = points[points.length-1]\n  // start.nextPoint = end\n  start.polygonID = -1\n\n  // end.prevPoint = start\n  // end.nextPoint = points[0]\n  end.polygonID = -1\n\n  points.push(start)\n  points.push(end)\n}\n\n\n\nfunction getObstructingEdge (pt1, pt2, polygonPoints) {\n  const g = ngraph_graph__WEBPACK_IMPORTED_MODULE_0___default()()\n  var points = polygonPoints.slice(0)\n  points.push(pt1)\n  points.push(pt2)\n  const pointsLen = points.length\n  const clonedPoints = polygonPoints.slice(0)\n\n\n  for (var i = 0; i < pointsLen; i++) {\n    const p = points[i]\n    if (!p.isPointEqual(pt1)) continue\n\n    const prevPoint = p.prevPoint\n    const nextPoint = p.nextPoint\n\n    sortPoints(p, clonedPoints)\n    // _renderSortedPoints(p, clonedPoints)\n\n    const openEdges = new _EdgeKeys__WEBPACK_IMPORTED_MODULE_1__[\"EdgeKeys\"]()\n    const pointInf = new _Point__WEBPACK_IMPORTED_MODULE_3__[\"Point\"]([_utils__WEBPACK_IMPORTED_MODULE_5__[\"INF\"], p.y], null)\n    for (let ii = 0; ii < pointsLen; ii++) {\n      const e = edges[ii]\n      if (typeof e != 'undefined' && e.containsPoint(p)) continue\n      if (typeof e != 'undefined' && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p, pointInf, e)) {\n        if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, e.p1, pointInf) || Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, e.p2, pointInf)) continue\n        openEdges.addKey(new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, pointInf, e))\n      }\n    }\n    // // _renderOpenEdges(p, openEdges.keys)\n\n    const visible = []\n    visible.push(prevPoint)\n    visible.push(nextPoint)\n    let prev = null\n    let prevVisible = null\n\n    for (let ii = 0; ii < pointsLen; ii++) {\n      const p2 = clonedPoints[ii]\n      // if (!p2.isPointEqual(pt2)) continue\n\n      if (p2.isPointEqual(p)) continue\n      if (p.angleToPoint(p2) > Math.pi) break\n\n      if (openEdges.keys.length > 0) {\n        for (let iii = 0; iii < p2.edges.length; iii++) {\n          const e = p2.edges[iii]\n          if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, p2, e.getOtherPointInEdge(p2)) === -1) {\n            const k = new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, p2, e)\n            const index = openEdges.findKeyPosition(k) - 1\n            if (index !== -1 && openEdges.keys[index].matchesOtherKey(k)) {\n              openEdges.keys.splice(index, 1)\n            }\n          }\n        }\n      }\n\n      if (p2.isPointEqual(pt2))\n        pt2 = pt2\n      let isVisible = false\n      if (prev === null || Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, prev, p2) !== 0 || !Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, prev, p2)) {\n        if (openEdges.keys.length === 0) {\n          isVisible = true\n        } else if (!Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p, p2, openEdges.keys[0].edge)) {\n          isVisible = true\n        }\n      } else if (!prevVisible) {\n        isVisible = false\n      } else {\n        isVisible = true\n        for (let iii = 0; iii < openEdges.keys.length; iii++) {\n          const e = openEdges.keys[iii]\n          if (!e.edge.containsPoint(prev) && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(prev, p2, e.edge)) {\n            isVisible = false\n            break\n          }\n        }\n        if (isVisible && edgeInPolygon(prev, p2)) isVisible = false\n      }\n\n      const isInAdjacentPoints = (prevPoint != null && p2.isPointEqual(prevPoint)) || (nextPoint != null && p2.isPointEqual(nextPoint))\n      if (isVisible && !isInAdjacentPoints) isVisible = !edgeInPolygon(p, p2)\n\n      // if same polygon visisble\n      if (p.polygonID == p2.polygonID && p.polygonID != -1)\n        isVisible = true\n\n      // if (isVisible) visible.push(p2)\n      if (p2.isPointEqual(pt2))\n       return isVisible ? null : openEdges.keys[0].edge;\n      \n\n      for (let iii = 0; iii < p2.edges.length; iii++) {\n        const e = p2.edges[iii]\n        if (!e.containsPoint(p) && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, p2, e.getOtherPointInEdge(p2)) === 1) {\n          const k = new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, p2, e)\n          openEdges.addKey(k)\n        }\n      }\n\n      prev = p2\n      prevVisible = isVisible\n    }\n\n    // const nodeId = createNodeId(p)\n    // g.addNode(nodeId, { x: p.x, y: p.y })\n\n    // for (var ii = 0; ii < visible.length; ii++) {\n    //   const otherNodeId = createNodeId(visible[ii])\n    //   g.addNode(otherNodeId, { x: visible[ii].x, y: visible[ii].y })\n    //   g.addLink(nodeId, otherNodeId)\n    // }\n  }\n  // return g\n}\n\n// export function getObstructingEdge (pt1, pt2) {\n//   const g = createGraph()\n//   const pointsLen = points.length\n//   const clonedPoints = clonePoints()\n\n//   for (var i = 0; i < pointsLen; i++) {\n//     const p = points[i]\n//     if (!p.isPointEqual(pt1)) continue\n\n//     const prevPoint = p.prevPoint\n//     const nextPoint = p.nextPoint\n\n//     sortPoints(p, clonedPoints)\n//     // _renderSortedPoints(p, clonedPoints)\n\n//     const openEdges = new EdgeKeys()\n//     const pointInf = new Point([INF, p.y], null)\n//     for (let ii = 0; ii < pointsLen; ii++) {\n//       const e = edges[ii]\n//       if (typeof e != 'undefined' && e.containsPoint(p)) continue\n//       if (typeof e != 'undefined' && edgeIntersect(p, pointInf, e)) {\n//         if (onSegment(p, e.p1, pointInf) || onSegment(p, e.p2, pointInf)) continue\n//         openEdges.addKey(new EdgeKey(p, pointInf, e))\n//       }\n//     }\n//     // // _renderOpenEdges(p, openEdges.keys)\n\n//     const visible = []\n//     visible.push(prevPoint)\n//     visible.push(nextPoint)\n//     let prev = null\n//     let prevVisible = null\n\n//     for (let ii = 0; ii < pointsLen; ii++) {\n//       const p2 = clonedPoints[ii]\n//       // if (!p2.isPointEqual(pt2)) continue\n\n//       if (p2.isPointEqual(p)) continue\n//       if (p.angleToPoint(p2) > Math.pi) break\n\n//       if (openEdges.keys.length > 0) {\n//         for (let iii = 0; iii < p2.edges.length; iii++) {\n//           const e = p2.edges[iii]\n//           if (ccw(p, p2, e.getOtherPointInEdge(p2)) === -1) {\n//             const k = new EdgeKey(p, p2, e)\n//             const index = openEdges.findKeyPosition(k) - 1\n//             if (index !== -1 && openEdges.keys[index].matchesOtherKey(k)) {\n//               openEdges.keys.splice(index, 1)\n//             }\n//           }\n//         }\n//       }\n\n//       if (p2.isPointEqual(pt2))\n//         pt2 = pt2\n//       let isVisible = false\n//       if (prev === null || ccw(p, prev, p2) !== 0 || !onSegment(p, prev, p2)) {\n//         if (openEdges.keys.length === 0) {\n//           isVisible = true\n//         } else if (!edgeIntersect(p, p2, openEdges.keys[0].edge)) {\n//           isVisible = true\n//         }\n//       } else if (!prevVisible) {\n//         isVisible = false\n//       } else {\n//         isVisible = true\n//         for (let iii = 0; iii < openEdges.keys.length; iii++) {\n//           const e = openEdges.keys[iii]\n//           if (!e.edge.containsPoint(prev) && edgeIntersect(prev, p2, e.edge)) {\n//             isVisible = false\n//             break\n//           }\n//         }\n//         if (isVisible && edgeInPolygon(prev, p2)) isVisible = false\n//       }\n\n//       const isInAdjacentPoints = (prevPoint != null && p2.isPointEqual(prevPoint)) || (nextPoint != null && p2.isPointEqual(nextPoint))\n//       if (isVisible && !isInAdjacentPoints) isVisible = !edgeInPolygon(p, p2)\n\n//       // if same polygon visisble\n//       if (p.polygonID == p2.polygonID && p.polygonID != -1)\n//         isVisible = true\n\n//       // if (isVisible) visible.push(p2)\n//       if (p2.isPointEqual(pt2))\n//        return isVisible ? null : openEdges.keys[0].edge;\n      \n\n//       for (let iii = 0; iii < p2.edges.length; iii++) {\n//         const e = p2.edges[iii]\n//         if (!e.containsPoint(p) && ccw(p, p2, e.getOtherPointInEdge(p2)) === 1) {\n//           const k = new EdgeKey(p, p2, e)\n//           openEdges.addKey(k)\n//         }\n//       }\n\n//       prev = p2\n//       prevVisible = isVisible\n//     }\n\n//     // const nodeId = createNodeId(p)\n//     // g.addNode(nodeId, { x: p.x, y: p.y })\n\n//     // for (var ii = 0; ii < visible.length; ii++) {\n//     //   const otherNodeId = createNodeId(visible[ii])\n//     //   g.addNode(otherNodeId, { x: visible[ii].x, y: visible[ii].y })\n//     //   g.addLink(nodeId, otherNodeId)\n//     // }\n//   }\n//   // return g\n// }\n\nfunction isVisible (pt1, pt2) {\n  const g = ngraph_graph__WEBPACK_IMPORTED_MODULE_0___default()()\n  const pointsLen = points.length\n  const clonedPoints = clonePoints()\n\n  for (var i = 0; i < pointsLen; i++) {\n    const p = points[i]\n    if (!p.isPointEqual(pt1)) continue\n\n    const prevPoint = p.prevPoint\n    const nextPoint = p.nextPoint\n\n    sortPoints(p, clonedPoints)\n    // _renderSortedPoints(p, clonedPoints)\n\n    const openEdges = new _EdgeKeys__WEBPACK_IMPORTED_MODULE_1__[\"EdgeKeys\"]()\n    const pointInf = new _Point__WEBPACK_IMPORTED_MODULE_3__[\"Point\"]([_utils__WEBPACK_IMPORTED_MODULE_5__[\"INF\"], p.y], null)\n    for (let ii = 0; ii < pointsLen; ii++) {\n      const e = edges[ii]\n      if (typeof e != 'undefined' && e.containsPoint(p)) continue\n      if (typeof e != 'undefined' && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p, pointInf, e)) {\n        if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, e.p1, pointInf) || Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, e.p2, pointInf)) continue\n        openEdges.addKey(new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, pointInf, e))\n      }\n    }\n    // // _renderOpenEdges(p, openEdges.keys)\n\n    const visible = []\n    visible.push(prevPoint)\n    visible.push(nextPoint)\n    let prev = null\n    let prevVisible = null\n\n    for (let ii = 0; ii < pointsLen; ii++) {\n      const p2 = clonedPoints[ii]\n      // if (!p2.isPointEqual(pt2)) continue\n\n      if (p2.isPointEqual(p)) continue\n      if (p.angleToPoint(p2) > Math.pi) break\n\n      if (openEdges.keys.length > 0) {\n        for (let iii = 0; iii < p2.edges.length; iii++) {\n          const e = p2.edges[iii]\n          if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, p2, e.getOtherPointInEdge(p2)) === -1) {\n            const k = new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, p2, e)\n            const index = openEdges.findKeyPosition(k) - 1\n            if (index !== -1 && openEdges.keys[index].matchesOtherKey(k)) {\n              openEdges.keys.splice(index, 1)\n            }\n          }\n        }\n      }\n\n      if (p2.isPointEqual(pt2))\n        pt2 = pt2\n      let isVisible = false\n      if (prev === null || Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, prev, p2) !== 0 || !Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, prev, p2)) {\n        if (openEdges.keys.length === 0) {\n          isVisible = true\n        } else if (!Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p, p2, openEdges.keys[0].edge)) {\n          isVisible = true\n        }\n      } else if (!prevVisible) {\n        isVisible = false\n      } else {\n        isVisible = true\n        for (let iii = 0; iii < openEdges.keys.length; iii++) {\n          const e = openEdges.keys[iii]\n          if (!e.edge.containsPoint(prev) && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(prev, p2, e.edge)) {\n            isVisible = false\n            break\n          }\n        }\n        if (isVisible && edgeInPolygon(prev, p2)) isVisible = false\n      }\n\n      const isInAdjacentPoints = (prevPoint != null && p2.isPointEqual(prevPoint)) || (nextPoint != null && p2.isPointEqual(nextPoint))\n      if (isVisible && !isInAdjacentPoints) isVisible = !edgeInPolygon(p, p2)\n\n      // if (isVisible) visible.push(p2)\n      if (p2.isPointEqual(pt2)) return isVisible;\n      \n\n      for (let iii = 0; iii < p2.edges.length; iii++) {\n        const e = p2.edges[iii]\n        if (!e.containsPoint(p) && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, p2, e.getOtherPointInEdge(p2)) === 1) {\n          const k = new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, p2, e)\n          openEdges.addKey(k)\n        }\n      }\n\n      prev = p2\n      prevVisible = isVisible\n    }\n\n    // const nodeId = createNodeId(p)\n    // g.addNode(nodeId, { x: p.x, y: p.y })\n\n    // for (var ii = 0; ii < visible.length; ii++) {\n    //   const otherNodeId = createNodeId(visible[ii])\n    //   g.addNode(otherNodeId, { x: visible[ii].x, y: visible[ii].y })\n    //   g.addLink(nodeId, otherNodeId)\n    // }\n  }\n  // return g\n}\n\nfunction createGraphFromGeoJson (geojson) {\n\n  Object(_setupStructure__WEBPACK_IMPORTED_MODULE_4__[\"setupStructure\"])(geojson, edges, points, polygons)\n\n  return processGraph()\n}\n\n  function processGraph () {\n    const g = ngraph_graph__WEBPACK_IMPORTED_MODULE_0___default()()\n    const pointsLen = points.length\n    const clonedPoints = clonePoints()\n\n    for (var i = 0; i < pointsLen; i++) {\n      const p = points[i]\n      const prevPoint = p.prevPoint\n      const nextPoint = p.nextPoint\n\n      // sortPoints(p, clonedPoints)\n      // _renderSortedPoints(p, clonedPoints)\n\n      // const openEdges = new EdgeKeys()\n      // const pointInf = new Point([INF, p.y], null)\n      // for (let ii = 0; ii < pointsLen; ii++) {\n      //   const e = edges[ii]\n      //   if (e.containsPoint(p)) continue\n      //   if (edgeIntersect(p, pointInf, e)) {\n      //     if (onSegment(p, e.p1, pointInf) || onSegment(p, e.p2, pointInf)) continue\n      //     openEdges.addKey(new EdgeKey(p, pointInf, e))\n      //   }\n      // }\n      // // _renderOpenEdges(p, openEdges.keys)\n\n      const visible = []\n      if(i == 0)\n        visible.push(prevPoint)\n\n      visible.push(nextPoint)\n      let prev = null\n      let prevVisible = null\n\n      // for (let ii = 0; ii < pointsLen; ii++) {\n      //   const p2 = clonedPoints[ii]\n      //   if (p2.isPointEqual(p)) continue\n      //   if (p.angleToPoint(p2) > Math.pi) break\n\n      //   if (openEdges.keys.length > 0) {\n      //     for (let iii = 0; iii < p2.edges.length; iii++) {\n      //       const e = p2.edges[iii]\n      //       if (ccw(p, p2, e.getOtherPointInEdge(p2)) === -1) {\n      //         const k = new EdgeKey(p, p2, e)\n      //         const index = openEdges.findKeyPosition(k) - 1\n      //         if (index !== -1 && openEdges.keys[index].matchesOtherKey(k)) {\n      //           openEdges.keys.splice(index, 1)\n      //         }\n      //       }\n      //     }\n      //   }\n\n      //   let isVisible = false\n      //   if (prev === null || ccw(p, prev, p2) !== 0 || !onSegment(p, prev, p2)) {\n      //     if (openEdges.keys.length === 0) {\n      //       isVisible = true\n      //     } else if (!edgeIntersect(p, p2, openEdges.keys[0].edge)) {\n      //       isVisible = true\n      //     }\n      //   } else if (!prevVisible) {\n      //     isVisible = false\n      //   } else {\n      //     isVisible = true\n      //     for (let iii = 0; iii < openEdges.keys.length; iii++) {\n      //       const e = openEdges.keys[iii]\n      //       if (!e.edge.containsPoint(prev) && edgeIntersect(prev, p2, e.edge)) {\n      //         isVisible = false\n      //         break\n      //       }\n      //     }\n      //     if (isVisible && edgeInPolygon(prev, p2)) isVisible = false\n      //   }\n\n      //   const isInAdjacentPoints = p2.isPointEqual(prevPoint) || p2.isPointEqual(nextPoint)\n      //   if (isVisible && !isInAdjacentPoints) isVisible = !edgeInPolygon(p, p2)\n\n      //   if (isVisible) visible.push(p2)\n\n      //   for (let iii = 0; iii < p2.edges.length; iii++) {\n      //     const e = p2.edges[iii]\n      //     if (!e.containsPoint(p) && ccw(p, p2, e.getOtherPointInEdge(p2)) === 1) {\n      //       const k = new EdgeKey(p, p2, e)\n      //       openEdges.addKey(k)\n      //     }\n      //   }\n\n      //   prev = p2\n      //   prevVisible = isVisible\n      // }\n\n      const nodeId = createNodeId(p)\n      g.addNode(nodeId, { x: p.x, y: p.y })\n\n      for (var ii = 0; ii < visible.length; ii++) {\n        const otherNodeId = createNodeId(visible[ii])\n        g.addNode(otherNodeId, { x: visible[ii].x, y: visible[ii].y })\n        g.addLink(nodeId, otherNodeId)\n      }\n    }\n    return g\n  }\n\n  function createNodeId (p) {\n    return p.x + ',' + p.y\n  }\n\n  function clonePoints () {\n    return points.slice(0)\n  }\n\n  function sortPoints (point, clonedPoints) {\n    clonedPoints.sort((a, b) => {\n      const angle1 = point.angleToPoint(a)\n      const angle2 = point.angleToPoint(b)\n      if (angle1 < angle2) return -1\n      if (angle1 > angle2) return 1\n      const dist1 = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"calcEdgeDistance\"])(point, a)\n      const dist2 = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"calcEdgeDistance\"])(point, b)\n      if (dist1 < dist2) return -1\n      if (dist1 > dist2) return 1\n      return 0\n    })\n  }\n\n  function edgeInPolygon (p1, p2) {\n    if (p1.polygonID !== p2.polygonID) return false\n    if (p1.polygonID === -1 || p2.polygonID === -1) return false\n    const midPoint = new _Point__WEBPACK_IMPORTED_MODULE_3__[\"Point\"]([(p1.x + p2.x) / 2, (p1.y + p2.y) / 2], null)\n    return polygonCrossing(midPoint, polygons[p1.polygonID])\n  }\n\n  function polygonCrossing (p1, polyEdges) {\n    const p2 = new _Point__WEBPACK_IMPORTED_MODULE_3__[\"Point\"]([_utils__WEBPACK_IMPORTED_MODULE_5__[\"INF\"], p1.y], null)\n    let intersectCount = 0\n    let coFlag = false\n    let coDir = 0\n\n    for (let i = 0; i < polyEdges.length; i++) {\n      const e = polyEdges[i]\n      if (p1.y < e.p1.y && p1.y < e.p2.y) continue\n      if (p1.y > e.p1.y && p1.y > e.p2.y) continue\n      const co0 = (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p1, e.p1, p2) === 0) && (e.p1.x > p1.x)\n      const co1 = (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p1, e.p2, p2) === 0) && (e.p2.x > p1.x)\n      const coPoint = co0 ? e.p1 : e.p2\n      if (co0 || co1) {\n        coDir = e.getOtherPointInEdge(coPoint).y > p1.y ? coDir++ : coDir--\n        if (coFlag) {\n          if (coDir === 0) intersectCount++\n          coFlag = false\n          coDir = 0\n        } else {\n          coFlag = true\n        }\n      } else if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p1, p2, e)) {\n        intersectCount++\n      }\n    }\n    if (intersectCount % 2 === 0) return false\n    return true\n  }\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/createGraphFromGeoJson.js\n");

/***/ }),

/***/ "../src/debug.js":
/*!***********************!*\
  !*** ../src/debug.js ***!
  \***********************/
/*! exports provided: _renderSortedPoints, _renderOpenEdges */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_renderSortedPoints\", function() { return _renderSortedPoints; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_renderOpenEdges\", function() { return _renderOpenEdges; });\n\nfunction _renderSortedPoints (point, sortedPoints) {\n  const map = window.map\n  var sortedPointsLg = null\n\n  L.NumberedDivIcon = createNumberDiv()\n\n  setCurrentPoint(point)\n\n  if (sortedPointsLg === null) sortedPointsLg = L.layerGroup([]).addTo(map)\n  else sortedPointsLg.clearLayers()\n  sortedPoints.forEach((p, index) => {\n    return L.marker([p.y, p.x], {\n      color: 'black',\n      icon: new L.NumberedDivIcon({ number: index.toString() })\n    }).addTo(sortedPointsLg)\n  })\n\n  // debugger\n}\n\nfunction _renderOpenEdges (point, edges) {\n  const map = window.map\n  const currentPoint = L.circleMarker([point.y, point.x], {\n    radius: 20,\n    color: 'green'\n  }).addTo(map)\n  var openEdges = L.layerGroup([]).addTo(map)\n\n  edges.forEach((e, index) => {\n    L.polyline([[e.edge.p1.y, e.edge.p1.x], [e.edge.p2.y, e.edge.p2.x]], {\n      color: 'red'\n    }).addTo(openEdges)\n  })\n\n  // debugger\n  openEdges.clearLayers()\n  map.removeLayer(currentPoint)\n}\n\nfunction setCurrentPoint (point) {\n  const map = window.map\n  let currentPoint = null\n\n  if (currentPoint !== null) map.removeLayer(currentPoint)\n\n  currentPoint = L.circleMarker([point.y, point.x], {\n    radius: 20,\n    color: 'green'\n  }).addTo(map)\n\n}\n\nfunction createNumberDiv () {\n  return L.Icon.extend({\n    options: {\n      number: '',\n      iconSize: new L.Point(25, 25),\n      className: 'leaflet-div-icon'\n    },\n    createIcon: function () {\n      var div = document.createElement('div')\n      var numdiv = document.createElement('div')\n      numdiv.setAttribute('class', 'number')\n      numdiv.innerHTML = this.options['number'] || ''\n      div.appendChild(numdiv)\n      this._setIconStyles(div, 'icon')\n      return div\n    }\n  })\n}\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2RlYnVnLmpzP2M5MWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDJCQUEyQjtBQUM5RCxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsImZpbGUiOiIuLi9zcmMvZGVidWcuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCBmdW5jdGlvbiBfcmVuZGVyU29ydGVkUG9pbnRzIChwb2ludCwgc29ydGVkUG9pbnRzKSB7XG4gIGNvbnN0IG1hcCA9IHdpbmRvdy5tYXBcbiAgdmFyIHNvcnRlZFBvaW50c0xnID0gbnVsbFxuXG4gIEwuTnVtYmVyZWREaXZJY29uID0gY3JlYXRlTnVtYmVyRGl2KClcblxuICBzZXRDdXJyZW50UG9pbnQocG9pbnQpXG5cbiAgaWYgKHNvcnRlZFBvaW50c0xnID09PSBudWxsKSBzb3J0ZWRQb2ludHNMZyA9IEwubGF5ZXJHcm91cChbXSkuYWRkVG8obWFwKVxuICBlbHNlIHNvcnRlZFBvaW50c0xnLmNsZWFyTGF5ZXJzKClcbiAgc29ydGVkUG9pbnRzLmZvckVhY2goKHAsIGluZGV4KSA9PiB7XG4gICAgcmV0dXJuIEwubWFya2VyKFtwLnksIHAueF0sIHtcbiAgICAgIGNvbG9yOiAnYmxhY2snLFxuICAgICAgaWNvbjogbmV3IEwuTnVtYmVyZWREaXZJY29uKHsgbnVtYmVyOiBpbmRleC50b1N0cmluZygpIH0pXG4gICAgfSkuYWRkVG8oc29ydGVkUG9pbnRzTGcpXG4gIH0pXG5cbiAgLy8gZGVidWdnZXJcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIF9yZW5kZXJPcGVuRWRnZXMgKHBvaW50LCBlZGdlcykge1xuICBjb25zdCBtYXAgPSB3aW5kb3cubWFwXG4gIGNvbnN0IGN1cnJlbnRQb2ludCA9IEwuY2lyY2xlTWFya2VyKFtwb2ludC55LCBwb2ludC54XSwge1xuICAgIHJhZGl1czogMjAsXG4gICAgY29sb3I6ICdncmVlbidcbiAgfSkuYWRkVG8obWFwKVxuICB2YXIgb3BlbkVkZ2VzID0gTC5sYXllckdyb3VwKFtdKS5hZGRUbyhtYXApXG5cbiAgZWRnZXMuZm9yRWFjaCgoZSwgaW5kZXgpID0+IHtcbiAgICBMLnBvbHlsaW5lKFtbZS5lZGdlLnAxLnksIGUuZWRnZS5wMS54XSwgW2UuZWRnZS5wMi55LCBlLmVkZ2UucDIueF1dLCB7XG4gICAgICBjb2xvcjogJ3JlZCdcbiAgICB9KS5hZGRUbyhvcGVuRWRnZXMpXG4gIH0pXG5cbiAgLy8gZGVidWdnZXJcbiAgb3BlbkVkZ2VzLmNsZWFyTGF5ZXJzKClcbiAgbWFwLnJlbW92ZUxheWVyKGN1cnJlbnRQb2ludClcbn1cblxuZnVuY3Rpb24gc2V0Q3VycmVudFBvaW50IChwb2ludCkge1xuICBjb25zdCBtYXAgPSB3aW5kb3cubWFwXG4gIGxldCBjdXJyZW50UG9pbnQgPSBudWxsXG5cbiAgaWYgKGN1cnJlbnRQb2ludCAhPT0gbnVsbCkgbWFwLnJlbW92ZUxheWVyKGN1cnJlbnRQb2ludClcblxuICBjdXJyZW50UG9pbnQgPSBMLmNpcmNsZU1hcmtlcihbcG9pbnQueSwgcG9pbnQueF0sIHtcbiAgICByYWRpdXM6IDIwLFxuICAgIGNvbG9yOiAnZ3JlZW4nXG4gIH0pLmFkZFRvKG1hcClcblxufVxuXG5mdW5jdGlvbiBjcmVhdGVOdW1iZXJEaXYgKCkge1xuICByZXR1cm4gTC5JY29uLmV4dGVuZCh7XG4gICAgb3B0aW9uczoge1xuICAgICAgbnVtYmVyOiAnJyxcbiAgICAgIGljb25TaXplOiBuZXcgTC5Qb2ludCgyNSwgMjUpLFxuICAgICAgY2xhc3NOYW1lOiAnbGVhZmxldC1kaXYtaWNvbidcbiAgICB9LFxuICAgIGNyZWF0ZUljb246IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgdmFyIG51bWRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICBudW1kaXYuc2V0QXR0cmlidXRlKCdjbGFzcycsICdudW1iZXInKVxuICAgICAgbnVtZGl2LmlubmVySFRNTCA9IHRoaXMub3B0aW9uc1snbnVtYmVyJ10gfHwgJydcbiAgICAgIGRpdi5hcHBlbmRDaGlsZChudW1kaXYpXG4gICAgICB0aGlzLl9zZXRJY29uU3R5bGVzKGRpdiwgJ2ljb24nKVxuICAgICAgcmV0dXJuIGRpdlxuICAgIH1cbiAgfSlcbn1cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/debug.js\n");

/***/ }),

/***/ "../src/main.js":
/*!**********************!*\
  !*** ../src/main.js ***!
  \**********************/
/*! exports provided: createGraphFromGeoJson, getVisibleNodes, isVisible, loadPoints, restoreOriginalPointsAndEdges, getObstructingEdge, addStartingAndEndingNodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createGraphFromGeoJson */ \"../src/createGraphFromGeoJson.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createGraphFromGeoJson\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"createGraphFromGeoJson\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getVisibleNodes\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"getVisibleNodes\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isVisible\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"isVisible\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"loadPoints\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"loadPoints\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"restoreOriginalPointsAndEdges\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"restoreOriginalPointsAndEdges\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getObstructingEdge\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"getObstructingEdge\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"addStartingAndEndingNodes\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"addStartingAndEndingNodes\"]; });\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL21haW4uanM/ZDNmZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF1TCIsImZpbGUiOiIuLi9zcmMvbWFpbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGNyZWF0ZUdyYXBoRnJvbUdlb0pzb24sIGdldFZpc2libGVOb2RlcywgaXNWaXNpYmxlLCBsb2FkUG9pbnRzLCByZXN0b3JlT3JpZ2luYWxQb2ludHNBbmRFZGdlcywgZ2V0T2JzdHJ1Y3RpbmdFZGdlLCBhZGRTdGFydGluZ0FuZEVuZGluZ05vZGVzIH0gZnJvbSAnLi9jcmVhdGVHcmFwaEZyb21HZW9Kc29uJ1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/main.js\n");

/***/ }),

/***/ "../src/setupStructure.js":
/*!********************************!*\
  !*** ../src/setupStructure.js ***!
  \********************************/
/*! exports provided: setupStructure */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupStructure\", function() { return setupStructure; });\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Point */ \"../src/Point.js\");\n/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Edge */ \"../src/Edge.js\");\n\n\n\nfunction setupStructure (geojson, edges, points, polygons) {\n  const geom = geojson.type === 'Feature' ? geojson.geometry : geojson\n\n  let coords = geom.features\n\n  // standardise the input\n  if (geom.type === 'Polygon') coords = [coords]\n\n  for (let i = 0; i < coords.length; i++) {\n    const contour = []\n    polygons.push(contour)\n\n    for (let ii = 0; ii < coords[i].geometry.coordinates.length; ii++) {\n      let prevPoint = new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"](coords[i].geometry.coordinates[ii][0], i)\n      let currentPoint = new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"](coords[i].geometry.coordinates[ii][1], i)\n      prevPoint.nextPoint = currentPoint\n      let nextPoint = new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"](coords[i].geometry.coordinates[ii][2], i)\n      linkPoints(prevPoint, currentPoint, nextPoint)\n\n      points.push(prevPoint)\n\n      let prevEdge = new _Edge__WEBPACK_IMPORTED_MODULE_1__[\"Edge\"](prevPoint, currentPoint) // eslint-disable-line\n      edges.push(prevEdge)\n      contour.push(prevEdge)\n\n      // Save me for later\n      const firstPoint = prevPoint\n\n      prevPoint = currentPoint\n      currentPoint = nextPoint\n\n      for (let iii = 2; iii < coords[i].geometry.coordinates[ii].length - 2; iii++) {\n        points.push(prevPoint)\n\n        nextPoint = new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"](coords[i].geometry.coordinates[ii][iii + 1], i)\n\n        linkPoints(prevPoint, currentPoint, nextPoint)\n\n        const e = new _Edge__WEBPACK_IMPORTED_MODULE_1__[\"Edge\"](prevPoint, currentPoint) // eslint-disable-line\n\n        edges.push(e)\n        contour.push(e)\n\n        prevPoint = currentPoint\n        currentPoint = nextPoint\n        prevEdge = e\n      }\n\n      linkPoints(prevPoint, currentPoint, firstPoint)\n\n      const secondLastEdge = new _Edge__WEBPACK_IMPORTED_MODULE_1__[\"Edge\"](prevEdge.p2, currentPoint)\n\n      edges.push(secondLastEdge)\n      contour.push(secondLastEdge)\n\n      const lastEdge = new _Edge__WEBPACK_IMPORTED_MODULE_1__[\"Edge\"](currentPoint, firstPoint) // eslint-disable-line\n      linkPoints(currentPoint, firstPoint, firstPoint.nextPoint)\n\n      edges.push(lastEdge)\n      contour.push(lastEdge)\n\n      points.push(prevPoint)\n      points.push(nextPoint)\n    }\n  }\n}\n\n// export function setupStructure (geojson, edges, points, polygons) {\n//   const geom = geojson.type === 'Feature' ? geojson.geometry : geojson\n\n//   let coords = geom.coordinates\n\n//   // standardise the input\n//   if (geom.type === 'Polygon') coords = [coords]\n\n//   for (let i = 0; i < coords.length; i++) {\n//     const contour = []\n//     polygons.push(contour)\n\n//     for (let ii = 0; ii < coords[i].length; ii++) {\n//       let prevPoint = new Point(coords[i][ii][0], i)\n//       let currentPoint = new Point(coords[i][ii][1], i)\n//       prevPoint.nextPoint = currentPoint\n//       let nextPoint = new Point(coords[i][ii][2], i)\n//       linkPoints(prevPoint, currentPoint, nextPoint)\n\n//       points.push(prevPoint)\n\n//       let prevEdge = new Edge(prevPoint, currentPoint) // eslint-disable-line\n//       edges.push(prevEdge)\n//       contour.push(prevEdge)\n\n//       // Save me for later\n//       const firstPoint = prevPoint\n\n//       prevPoint = currentPoint\n//       currentPoint = nextPoint\n\n//       for (let iii = 2; iii < coords[i][ii].length - 2; iii++) {\n//         points.push(prevPoint)\n\n//         nextPoint = new Point(coords[i][ii][iii + 1], i)\n\n//         linkPoints(prevPoint, currentPoint, nextPoint)\n\n//         const e = new Edge(prevPoint, currentPoint) // eslint-disable-line\n\n//         edges.push(e)\n//         contour.push(e)\n\n//         prevPoint = currentPoint\n//         currentPoint = nextPoint\n//         prevEdge = e\n//       }\n\n//       linkPoints(prevPoint, currentPoint, firstPoint)\n\n//       const secondLastEdge = new Edge(prevEdge.p2, currentPoint)\n\n//       edges.push(secondLastEdge)\n//       contour.push(secondLastEdge)\n\n//       const lastEdge = new Edge(currentPoint, firstPoint) // eslint-disable-line\n//       linkPoints(currentPoint, firstPoint, firstPoint.nextPoint)\n\n//       edges.push(lastEdge)\n//       contour.push(lastEdge)\n\n//       points.push(prevPoint)\n//       points.push(nextPoint)\n//     }\n//   }\n// }\n\nfunction linkPoints (prevPoint, currentPoint, nextPoint) {\n  currentPoint.prevPoint = prevPoint\n  currentPoint.nextPoint = nextPoint\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3NldHVwU3RydWN0dXJlLmpzPzI2ZmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBK0I7QUFDRjs7QUFFdEI7QUFDUDs7QUFFQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQixtQkFBbUI7QUFDcEM7QUFDQTs7QUFFQSxvQkFBb0IsNENBQTRDO0FBQ2hFLDBCQUEwQiw0Q0FBSztBQUMvQiw2QkFBNkIsNENBQUs7QUFDbEM7QUFDQSwwQkFBMEIsNENBQUs7QUFDL0I7O0FBRUE7O0FBRUEseUJBQXlCLDBDQUFJO0FBQzdCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHVCQUF1QixxREFBcUQ7QUFDNUU7O0FBRUEsd0JBQXdCLDRDQUFLOztBQUU3Qjs7QUFFQSxzQkFBc0IsMENBQUk7O0FBRTFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsaUNBQWlDLDBDQUFJOztBQUVyQztBQUNBOztBQUVBLDJCQUEyQiwwQ0FBSTtBQUMvQjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTs7QUFFQSx1QkFBdUIsdUJBQXVCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSwwQkFBMEIsZ0NBQWdDO0FBQzFEOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi9zcmMvc2V0dXBTdHJ1Y3R1cmUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb2ludCB9IGZyb20gJy4vUG9pbnQnXG5pbXBvcnQgeyBFZGdlIH0gZnJvbSAnLi9FZGdlJ1xuXG5leHBvcnQgZnVuY3Rpb24gc2V0dXBTdHJ1Y3R1cmUgKGdlb2pzb24sIGVkZ2VzLCBwb2ludHMsIHBvbHlnb25zKSB7XG4gIGNvbnN0IGdlb20gPSBnZW9qc29uLnR5cGUgPT09ICdGZWF0dXJlJyA/IGdlb2pzb24uZ2VvbWV0cnkgOiBnZW9qc29uXG5cbiAgbGV0IGNvb3JkcyA9IGdlb20uZmVhdHVyZXNcblxuICAvLyBzdGFuZGFyZGlzZSB0aGUgaW5wdXRcbiAgaWYgKGdlb20udHlwZSA9PT0gJ1BvbHlnb24nKSBjb29yZHMgPSBbY29vcmRzXVxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgY29vcmRzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgY29udG91ciA9IFtdXG4gICAgcG9seWdvbnMucHVzaChjb250b3VyKVxuXG4gICAgZm9yIChsZXQgaWkgPSAwOyBpaSA8IGNvb3Jkc1tpXS5nZW9tZXRyeS5jb29yZGluYXRlcy5sZW5ndGg7IGlpKyspIHtcbiAgICAgIGxldCBwcmV2UG9pbnQgPSBuZXcgUG9pbnQoY29vcmRzW2ldLmdlb21ldHJ5LmNvb3JkaW5hdGVzW2lpXVswXSwgaSlcbiAgICAgIGxldCBjdXJyZW50UG9pbnQgPSBuZXcgUG9pbnQoY29vcmRzW2ldLmdlb21ldHJ5LmNvb3JkaW5hdGVzW2lpXVsxXSwgaSlcbiAgICAgIHByZXZQb2ludC5uZXh0UG9pbnQgPSBjdXJyZW50UG9pbnRcbiAgICAgIGxldCBuZXh0UG9pbnQgPSBuZXcgUG9pbnQoY29vcmRzW2ldLmdlb21ldHJ5LmNvb3JkaW5hdGVzW2lpXVsyXSwgaSlcbiAgICAgIGxpbmtQb2ludHMocHJldlBvaW50LCBjdXJyZW50UG9pbnQsIG5leHRQb2ludClcblxuICAgICAgcG9pbnRzLnB1c2gocHJldlBvaW50KVxuXG4gICAgICBsZXQgcHJldkVkZ2UgPSBuZXcgRWRnZShwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCkgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgICAgZWRnZXMucHVzaChwcmV2RWRnZSlcbiAgICAgIGNvbnRvdXIucHVzaChwcmV2RWRnZSlcblxuICAgICAgLy8gU2F2ZSBtZSBmb3IgbGF0ZXJcbiAgICAgIGNvbnN0IGZpcnN0UG9pbnQgPSBwcmV2UG9pbnRcblxuICAgICAgcHJldlBvaW50ID0gY3VycmVudFBvaW50XG4gICAgICBjdXJyZW50UG9pbnQgPSBuZXh0UG9pbnRcblxuICAgICAgZm9yIChsZXQgaWlpID0gMjsgaWlpIDwgY29vcmRzW2ldLmdlb21ldHJ5LmNvb3JkaW5hdGVzW2lpXS5sZW5ndGggLSAyOyBpaWkrKykge1xuICAgICAgICBwb2ludHMucHVzaChwcmV2UG9pbnQpXG5cbiAgICAgICAgbmV4dFBvaW50ID0gbmV3IFBvaW50KGNvb3Jkc1tpXS5nZW9tZXRyeS5jb29yZGluYXRlc1tpaV1baWlpICsgMV0sIGkpXG5cbiAgICAgICAgbGlua1BvaW50cyhwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCwgbmV4dFBvaW50KVxuXG4gICAgICAgIGNvbnN0IGUgPSBuZXcgRWRnZShwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCkgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgICAgIGVkZ2VzLnB1c2goZSlcbiAgICAgICAgY29udG91ci5wdXNoKGUpXG5cbiAgICAgICAgcHJldlBvaW50ID0gY3VycmVudFBvaW50XG4gICAgICAgIGN1cnJlbnRQb2ludCA9IG5leHRQb2ludFxuICAgICAgICBwcmV2RWRnZSA9IGVcbiAgICAgIH1cblxuICAgICAgbGlua1BvaW50cyhwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCwgZmlyc3RQb2ludClcblxuICAgICAgY29uc3Qgc2Vjb25kTGFzdEVkZ2UgPSBuZXcgRWRnZShwcmV2RWRnZS5wMiwgY3VycmVudFBvaW50KVxuXG4gICAgICBlZGdlcy5wdXNoKHNlY29uZExhc3RFZGdlKVxuICAgICAgY29udG91ci5wdXNoKHNlY29uZExhc3RFZGdlKVxuXG4gICAgICBjb25zdCBsYXN0RWRnZSA9IG5ldyBFZGdlKGN1cnJlbnRQb2ludCwgZmlyc3RQb2ludCkgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgICAgbGlua1BvaW50cyhjdXJyZW50UG9pbnQsIGZpcnN0UG9pbnQsIGZpcnN0UG9pbnQubmV4dFBvaW50KVxuXG4gICAgICBlZGdlcy5wdXNoKGxhc3RFZGdlKVxuICAgICAgY29udG91ci5wdXNoKGxhc3RFZGdlKVxuXG4gICAgICBwb2ludHMucHVzaChwcmV2UG9pbnQpXG4gICAgICBwb2ludHMucHVzaChuZXh0UG9pbnQpXG4gICAgfVxuICB9XG59XG5cbi8vIGV4cG9ydCBmdW5jdGlvbiBzZXR1cFN0cnVjdHVyZSAoZ2VvanNvbiwgZWRnZXMsIHBvaW50cywgcG9seWdvbnMpIHtcbi8vICAgY29uc3QgZ2VvbSA9IGdlb2pzb24udHlwZSA9PT0gJ0ZlYXR1cmUnID8gZ2VvanNvbi5nZW9tZXRyeSA6IGdlb2pzb25cblxuLy8gICBsZXQgY29vcmRzID0gZ2VvbS5jb29yZGluYXRlc1xuXG4vLyAgIC8vIHN0YW5kYXJkaXNlIHRoZSBpbnB1dFxuLy8gICBpZiAoZ2VvbS50eXBlID09PSAnUG9seWdvbicpIGNvb3JkcyA9IFtjb29yZHNdXG5cbi8vICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb29yZHMubGVuZ3RoOyBpKyspIHtcbi8vICAgICBjb25zdCBjb250b3VyID0gW11cbi8vICAgICBwb2x5Z29ucy5wdXNoKGNvbnRvdXIpXG5cbi8vICAgICBmb3IgKGxldCBpaSA9IDA7IGlpIDwgY29vcmRzW2ldLmxlbmd0aDsgaWkrKykge1xuLy8gICAgICAgbGV0IHByZXZQb2ludCA9IG5ldyBQb2ludChjb29yZHNbaV1baWldWzBdLCBpKVxuLy8gICAgICAgbGV0IGN1cnJlbnRQb2ludCA9IG5ldyBQb2ludChjb29yZHNbaV1baWldWzFdLCBpKVxuLy8gICAgICAgcHJldlBvaW50Lm5leHRQb2ludCA9IGN1cnJlbnRQb2ludFxuLy8gICAgICAgbGV0IG5leHRQb2ludCA9IG5ldyBQb2ludChjb29yZHNbaV1baWldWzJdLCBpKVxuLy8gICAgICAgbGlua1BvaW50cyhwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCwgbmV4dFBvaW50KVxuXG4vLyAgICAgICBwb2ludHMucHVzaChwcmV2UG9pbnQpXG5cbi8vICAgICAgIGxldCBwcmV2RWRnZSA9IG5ldyBFZGdlKHByZXZQb2ludCwgY3VycmVudFBvaW50KSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4vLyAgICAgICBlZGdlcy5wdXNoKHByZXZFZGdlKVxuLy8gICAgICAgY29udG91ci5wdXNoKHByZXZFZGdlKVxuXG4vLyAgICAgICAvLyBTYXZlIG1lIGZvciBsYXRlclxuLy8gICAgICAgY29uc3QgZmlyc3RQb2ludCA9IHByZXZQb2ludFxuXG4vLyAgICAgICBwcmV2UG9pbnQgPSBjdXJyZW50UG9pbnRcbi8vICAgICAgIGN1cnJlbnRQb2ludCA9IG5leHRQb2ludFxuXG4vLyAgICAgICBmb3IgKGxldCBpaWkgPSAyOyBpaWkgPCBjb29yZHNbaV1baWldLmxlbmd0aCAtIDI7IGlpaSsrKSB7XG4vLyAgICAgICAgIHBvaW50cy5wdXNoKHByZXZQb2ludClcblxuLy8gICAgICAgICBuZXh0UG9pbnQgPSBuZXcgUG9pbnQoY29vcmRzW2ldW2lpXVtpaWkgKyAxXSwgaSlcblxuLy8gICAgICAgICBsaW5rUG9pbnRzKHByZXZQb2ludCwgY3VycmVudFBvaW50LCBuZXh0UG9pbnQpXG5cbi8vICAgICAgICAgY29uc3QgZSA9IG5ldyBFZGdlKHByZXZQb2ludCwgY3VycmVudFBvaW50KSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbi8vICAgICAgICAgZWRnZXMucHVzaChlKVxuLy8gICAgICAgICBjb250b3VyLnB1c2goZSlcblxuLy8gICAgICAgICBwcmV2UG9pbnQgPSBjdXJyZW50UG9pbnRcbi8vICAgICAgICAgY3VycmVudFBvaW50ID0gbmV4dFBvaW50XG4vLyAgICAgICAgIHByZXZFZGdlID0gZVxuLy8gICAgICAgfVxuXG4vLyAgICAgICBsaW5rUG9pbnRzKHByZXZQb2ludCwgY3VycmVudFBvaW50LCBmaXJzdFBvaW50KVxuXG4vLyAgICAgICBjb25zdCBzZWNvbmRMYXN0RWRnZSA9IG5ldyBFZGdlKHByZXZFZGdlLnAyLCBjdXJyZW50UG9pbnQpXG5cbi8vICAgICAgIGVkZ2VzLnB1c2goc2Vjb25kTGFzdEVkZ2UpXG4vLyAgICAgICBjb250b3VyLnB1c2goc2Vjb25kTGFzdEVkZ2UpXG5cbi8vICAgICAgIGNvbnN0IGxhc3RFZGdlID0gbmV3IEVkZ2UoY3VycmVudFBvaW50LCBmaXJzdFBvaW50KSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4vLyAgICAgICBsaW5rUG9pbnRzKGN1cnJlbnRQb2ludCwgZmlyc3RQb2ludCwgZmlyc3RQb2ludC5uZXh0UG9pbnQpXG5cbi8vICAgICAgIGVkZ2VzLnB1c2gobGFzdEVkZ2UpXG4vLyAgICAgICBjb250b3VyLnB1c2gobGFzdEVkZ2UpXG5cbi8vICAgICAgIHBvaW50cy5wdXNoKHByZXZQb2ludClcbi8vICAgICAgIHBvaW50cy5wdXNoKG5leHRQb2ludClcbi8vICAgICB9XG4vLyAgIH1cbi8vIH1cblxuZnVuY3Rpb24gbGlua1BvaW50cyAocHJldlBvaW50LCBjdXJyZW50UG9pbnQsIG5leHRQb2ludCkge1xuICBjdXJyZW50UG9pbnQucHJldlBvaW50ID0gcHJldlBvaW50XG4gIGN1cnJlbnRQb2ludC5uZXh0UG9pbnQgPSBuZXh0UG9pbnRcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/setupStructure.js\n");

/***/ }),

/***/ "../src/utils.js":
/*!***********************!*\
  !*** ../src/utils.js ***!
  \***********************/
/*! exports provided: pi1, pi2, INF, edgeIntersect, ccw, onSegment, angle2, pointEdgeDistance, intersectPoint, calcEdgeDistance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pi1\", function() { return pi1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pi2\", function() { return pi2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"INF\", function() { return INF; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"edgeIntersect\", function() { return edgeIntersect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ccw\", function() { return ccw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onSegment\", function() { return onSegment; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"angle2\", function() { return angle2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pointEdgeDistance\", function() { return pointEdgeDistance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"intersectPoint\", function() { return intersectPoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calcEdgeDistance\", function() { return calcEdgeDistance; });\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Point */ \"../src/Point.js\");\n\n\nconst pi1 = Math.PI * 3 / 2\nconst pi2 = Math.PI / 2\n\nconst INF = 10000\nconst COLIN_TOLERANCE = 13\nconst T = Math.pow(10, COLIN_TOLERANCE)\nconst T2 = Math.pow(10.0, COLIN_TOLERANCE)\n\nfunction edgeIntersect (p1, q1, edge) {\n  const p2 = edge.p1\n  const q2 = edge.p2\n  const o1 = ccw(p1, q1, p2)\n  const o2 = ccw(p1, q1, q2)\n  const o3 = ccw(p2, q2, p1)\n  const o4 = ccw(p2, q2, q1)\n  if (o1 !== o2 && o3 !== o4) return true\n  if (o1 === 0 && onSegment(p1, p2, q1)) return true\n  if (o2 === 0 && onSegment(p1, q2, q1)) return true\n  if (o3 === 0 && onSegment(p2, p1, q2)) return true\n  if (o4 === 0 && onSegment(p2, q1, q2)) return true\n  return false\n}\n\nfunction ccw (a, b, c) {\n  const area = Math.round(((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) * T) / T2\n  if (area > 0) return 1\n  if (area < 0) return -1\n  return 0\n}\n\nfunction onSegment (p, q, r) {\n  if (q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x)) {\n    if (q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y)) return true\n  }\n  return false\n}\n\nfunction angle2 (p1, p2, p3) {\n  const a = Math.pow((p3.x - p2.x), 2) + Math.pow((p3.y - p2.y), 2)\n  const b = Math.pow((p3.x - p1.x), 2) + Math.pow((p3.y - p1.y), 2)\n  const c = Math.pow((p2.x - p1.x), 2) + Math.pow((p2.y - p1.y), 2)\n  return Math.acos((a + c - b) / (2 * Math.sqrt(a) * Math.sqrt(c)))\n}\n\nfunction pointEdgeDistance (p1, p2, edge) {\n  const ip = intersectPoint(p1, p2, edge)\n  return ip !== null ? calcEdgeDistance(p1, ip) : 0\n}\n\nfunction intersectPoint (p1, p2, edge) {\n  if (edge.containsPoint(p1)) return p1\n  if (edge.containsPoint(p2)) return p2\n  if (edge.p1.x === edge.p2.x) {\n    if (p1.x === p2.x) return null\n    const pslope = (p1.y - p2.y) / (p1.x - p2.x)\n    const intersectX = edge.p1.x\n    const intersectY = pslope * (intersectX - p1.x) + p1.y\n    return new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"]([intersectX, intersectY], null)\n  }\n  if (p1.x === p2.x) {\n    const eslope = (edge.p1.y - edge.p2.y) / (edge.p1.x - edge.p2.x)\n    const intersectX = p1.x\n    const intersectY = eslope * (intersectX - edge.p1.x) + edge.p1.y\n    return new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"]([intersectX, intersectY], null)\n  }\n\n  const pslope = (p1.y - p2.y) / (p1.x - p2.x)\n  const eslope = (edge.p1.y - edge.p2.y) / (edge.p1.x - edge.p2.x)\n\n  if (pslope === eslope) return null\n  const intersectX = (eslope * edge.p1.x - pslope * p1.x + p1.y - edge.p1.y) / (eslope - pslope)\n  const intersectY = eslope * (intersectX - edge.p1.x) + edge.p1.y\n  return new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"]([intersectX, intersectY], null)\n}\n\nfunction calcEdgeDistance (p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2))\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3V0aWxzLmpzPzUwZjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQStCOztBQUV4QjtBQUNBOztBQUVBO0FBQ1A7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNENBQUs7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNENBQUs7QUFDcEI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDRDQUFLO0FBQ2xCOztBQUVPO0FBQ1A7QUFDQSIsImZpbGUiOiIuLi9zcmMvdXRpbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb2ludCB9IGZyb20gJy4vUG9pbnQnXG5cbmV4cG9ydCBjb25zdCBwaTEgPSBNYXRoLlBJICogMyAvIDJcbmV4cG9ydCBjb25zdCBwaTIgPSBNYXRoLlBJIC8gMlxuXG5leHBvcnQgY29uc3QgSU5GID0gMTAwMDBcbmNvbnN0IENPTElOX1RPTEVSQU5DRSA9IDEzXG5jb25zdCBUID0gTWF0aC5wb3coMTAsIENPTElOX1RPTEVSQU5DRSlcbmNvbnN0IFQyID0gTWF0aC5wb3coMTAuMCwgQ09MSU5fVE9MRVJBTkNFKVxuXG5leHBvcnQgZnVuY3Rpb24gZWRnZUludGVyc2VjdCAocDEsIHExLCBlZGdlKSB7XG4gIGNvbnN0IHAyID0gZWRnZS5wMVxuICBjb25zdCBxMiA9IGVkZ2UucDJcbiAgY29uc3QgbzEgPSBjY3cocDEsIHExLCBwMilcbiAgY29uc3QgbzIgPSBjY3cocDEsIHExLCBxMilcbiAgY29uc3QgbzMgPSBjY3cocDIsIHEyLCBwMSlcbiAgY29uc3QgbzQgPSBjY3cocDIsIHEyLCBxMSlcbiAgaWYgKG8xICE9PSBvMiAmJiBvMyAhPT0gbzQpIHJldHVybiB0cnVlXG4gIGlmIChvMSA9PT0gMCAmJiBvblNlZ21lbnQocDEsIHAyLCBxMSkpIHJldHVybiB0cnVlXG4gIGlmIChvMiA9PT0gMCAmJiBvblNlZ21lbnQocDEsIHEyLCBxMSkpIHJldHVybiB0cnVlXG4gIGlmIChvMyA9PT0gMCAmJiBvblNlZ21lbnQocDIsIHAxLCBxMikpIHJldHVybiB0cnVlXG4gIGlmIChvNCA9PT0gMCAmJiBvblNlZ21lbnQocDIsIHExLCBxMikpIHJldHVybiB0cnVlXG4gIHJldHVybiBmYWxzZVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY2N3IChhLCBiLCBjKSB7XG4gIGNvbnN0IGFyZWEgPSBNYXRoLnJvdW5kKCgoYi54IC0gYS54KSAqIChjLnkgLSBhLnkpIC0gKGIueSAtIGEueSkgKiAoYy54IC0gYS54KSkgKiBUKSAvIFQyXG4gIGlmIChhcmVhID4gMCkgcmV0dXJuIDFcbiAgaWYgKGFyZWEgPCAwKSByZXR1cm4gLTFcbiAgcmV0dXJuIDBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uU2VnbWVudCAocCwgcSwgcikge1xuICBpZiAocS54IDw9IE1hdGgubWF4KHAueCwgci54KSAmJiBxLnggPj0gTWF0aC5taW4ocC54LCByLngpKSB7XG4gICAgaWYgKHEueSA8PSBNYXRoLm1heChwLnksIHIueSkgJiYgcS55ID49IE1hdGgubWluKHAueSwgci55KSkgcmV0dXJuIHRydWVcbiAgfVxuICByZXR1cm4gZmFsc2Vcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFuZ2xlMiAocDEsIHAyLCBwMykge1xuICBjb25zdCBhID0gTWF0aC5wb3coKHAzLnggLSBwMi54KSwgMikgKyBNYXRoLnBvdygocDMueSAtIHAyLnkpLCAyKVxuICBjb25zdCBiID0gTWF0aC5wb3coKHAzLnggLSBwMS54KSwgMikgKyBNYXRoLnBvdygocDMueSAtIHAxLnkpLCAyKVxuICBjb25zdCBjID0gTWF0aC5wb3coKHAyLnggLSBwMS54KSwgMikgKyBNYXRoLnBvdygocDIueSAtIHAxLnkpLCAyKVxuICByZXR1cm4gTWF0aC5hY29zKChhICsgYyAtIGIpIC8gKDIgKiBNYXRoLnNxcnQoYSkgKiBNYXRoLnNxcnQoYykpKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcG9pbnRFZGdlRGlzdGFuY2UgKHAxLCBwMiwgZWRnZSkge1xuICBjb25zdCBpcCA9IGludGVyc2VjdFBvaW50KHAxLCBwMiwgZWRnZSlcbiAgcmV0dXJuIGlwICE9PSBudWxsID8gY2FsY0VkZ2VEaXN0YW5jZShwMSwgaXApIDogMFxufVxuXG5leHBvcnQgZnVuY3Rpb24gaW50ZXJzZWN0UG9pbnQgKHAxLCBwMiwgZWRnZSkge1xuICBpZiAoZWRnZS5jb250YWluc1BvaW50KHAxKSkgcmV0dXJuIHAxXG4gIGlmIChlZGdlLmNvbnRhaW5zUG9pbnQocDIpKSByZXR1cm4gcDJcbiAgaWYgKGVkZ2UucDEueCA9PT0gZWRnZS5wMi54KSB7XG4gICAgaWYgKHAxLnggPT09IHAyLngpIHJldHVybiBudWxsXG4gICAgY29uc3QgcHNsb3BlID0gKHAxLnkgLSBwMi55KSAvIChwMS54IC0gcDIueClcbiAgICBjb25zdCBpbnRlcnNlY3RYID0gZWRnZS5wMS54XG4gICAgY29uc3QgaW50ZXJzZWN0WSA9IHBzbG9wZSAqIChpbnRlcnNlY3RYIC0gcDEueCkgKyBwMS55XG4gICAgcmV0dXJuIG5ldyBQb2ludChbaW50ZXJzZWN0WCwgaW50ZXJzZWN0WV0sIG51bGwpXG4gIH1cbiAgaWYgKHAxLnggPT09IHAyLngpIHtcbiAgICBjb25zdCBlc2xvcGUgPSAoZWRnZS5wMS55IC0gZWRnZS5wMi55KSAvIChlZGdlLnAxLnggLSBlZGdlLnAyLngpXG4gICAgY29uc3QgaW50ZXJzZWN0WCA9IHAxLnhcbiAgICBjb25zdCBpbnRlcnNlY3RZID0gZXNsb3BlICogKGludGVyc2VjdFggLSBlZGdlLnAxLngpICsgZWRnZS5wMS55XG4gICAgcmV0dXJuIG5ldyBQb2ludChbaW50ZXJzZWN0WCwgaW50ZXJzZWN0WV0sIG51bGwpXG4gIH1cblxuICBjb25zdCBwc2xvcGUgPSAocDEueSAtIHAyLnkpIC8gKHAxLnggLSBwMi54KVxuICBjb25zdCBlc2xvcGUgPSAoZWRnZS5wMS55IC0gZWRnZS5wMi55KSAvIChlZGdlLnAxLnggLSBlZGdlLnAyLngpXG5cbiAgaWYgKHBzbG9wZSA9PT0gZXNsb3BlKSByZXR1cm4gbnVsbFxuICBjb25zdCBpbnRlcnNlY3RYID0gKGVzbG9wZSAqIGVkZ2UucDEueCAtIHBzbG9wZSAqIHAxLnggKyBwMS55IC0gZWRnZS5wMS55KSAvIChlc2xvcGUgLSBwc2xvcGUpXG4gIGNvbnN0IGludGVyc2VjdFkgPSBlc2xvcGUgKiAoaW50ZXJzZWN0WCAtIGVkZ2UucDEueCkgKyBlZGdlLnAxLnlcbiAgcmV0dXJuIG5ldyBQb2ludChbaW50ZXJzZWN0WCwgaW50ZXJzZWN0WV0sIG51bGwpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYWxjRWRnZURpc3RhbmNlIChwMSwgcDIpIHtcbiAgcmV0dXJuIE1hdGguc3FydChNYXRoLnBvdyhwMi54IC0gcDEueCwgMikgKyBNYXRoLnBvdyhwMi55IC0gcDEueSwgMikpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../src/utils.js\n");

/***/ }),

/***/ "./src/graphCreation.worker.js":
/*!*************************************!*\
  !*** ./src/graphCreation.worker.js ***!
  \*************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/main */ \"../src/main.js\");\n\nvar tojson = __webpack_require__(/*! ngraph.tojson */ \"../node_modules/ngraph.tojson/index.js\")\n\nself.addEventListener('message', function (e) {\n  const outGraph = Object(_src_main__WEBPACK_IMPORTED_MODULE_0__[\"createGraphFromGeoJson\"])(e.data)\n  const jsonContent = tojson(outGraph)\n\n  self.postMessage(jsonContent)\n}, false)\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZ3JhcGhDcmVhdGlvbi53b3JrZXIuanM/MmIzMiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQXVEO0FBQ3ZELGFBQWEsbUJBQU8sQ0FBQyw2REFBZTs7QUFFcEM7QUFDQSxtQkFBbUIsd0VBQXNCO0FBQ3pDOztBQUVBO0FBQ0EsQ0FBQyIsImZpbGUiOiIuL3NyYy9ncmFwaENyZWF0aW9uLndvcmtlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUdyYXBoRnJvbUdlb0pzb24gfSBmcm9tICcuLi8uLi9zcmMvbWFpbidcbnZhciB0b2pzb24gPSByZXF1aXJlKCduZ3JhcGgudG9qc29uJylcblxuc2VsZi5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgZnVuY3Rpb24gKGUpIHtcbiAgY29uc3Qgb3V0R3JhcGggPSBjcmVhdGVHcmFwaEZyb21HZW9Kc29uKGUuZGF0YSlcbiAgY29uc3QganNvbkNvbnRlbnQgPSB0b2pzb24ob3V0R3JhcGgpXG5cbiAgc2VsZi5wb3N0TWVzc2FnZShqc29uQ29udGVudClcbn0sIGZhbHNlKVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/graphCreation.worker.js\n");

/***/ })

/******/ });