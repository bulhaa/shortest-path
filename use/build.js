/******/ (function(modules) { // webpackBootstrap
exports.__webpack_require__ = __webpack_require__;
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/visibility-graph-master/use/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/ngraph.events/index.js":
/*!**********************************************!*\
  !*** ../node_modules/ngraph.events/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(subject) {\n  validateSubject(subject);\n\n  var eventsStorage = createEventsStorage(subject);\n  subject.on = eventsStorage.on;\n  subject.off = eventsStorage.off;\n  subject.fire = eventsStorage.fire;\n  return subject;\n};\n\nfunction createEventsStorage(subject) {\n  // Store all event listeners to this hash. Key is event name, value is array\n  // of callback records.\n  //\n  // A callback record consists of callback function and its optional context:\n  // { 'eventName' => [{callback: function, ctx: object}] }\n  var registeredEvents = Object.create(null);\n\n  return {\n    on: function (eventName, callback, ctx) {\n      if (typeof callback !== 'function') {\n        throw new Error('callback is expected to be a function');\n      }\n      var handlers = registeredEvents[eventName];\n      if (!handlers) {\n        handlers = registeredEvents[eventName] = [];\n      }\n      handlers.push({callback: callback, ctx: ctx});\n\n      return subject;\n    },\n\n    off: function (eventName, callback) {\n      var wantToRemoveAll = (typeof eventName === 'undefined');\n      if (wantToRemoveAll) {\n        // Killing old events storage should be enough in this case:\n        registeredEvents = Object.create(null);\n        return subject;\n      }\n\n      if (registeredEvents[eventName]) {\n        var deleteAllCallbacksForEvent = (typeof callback !== 'function');\n        if (deleteAllCallbacksForEvent) {\n          delete registeredEvents[eventName];\n        } else {\n          var callbacks = registeredEvents[eventName];\n          for (var i = 0; i < callbacks.length; ++i) {\n            if (callbacks[i].callback === callback) {\n              callbacks.splice(i, 1);\n            }\n          }\n        }\n      }\n\n      return subject;\n    },\n\n    fire: function (eventName) {\n      var callbacks = registeredEvents[eventName];\n      if (!callbacks) {\n        return subject;\n      }\n\n      var fireArguments;\n      if (arguments.length > 1) {\n        fireArguments = Array.prototype.splice.call(arguments, 1);\n      }\n      for(var i = 0; i < callbacks.length; ++i) {\n        var callbackInfo = callbacks[i];\n        callbackInfo.callback.apply(callbackInfo.ctx, fireArguments);\n      }\n\n      return subject;\n    }\n  };\n}\n\nfunction validateSubject(subject) {\n  if (!subject) {\n    throw new Error('Eventify cannot use falsy object as events subject');\n  }\n  var reservedWords = ['on', 'fire', 'off'];\n  for (var i = 0; i < reservedWords.length; ++i) {\n    if (subject.hasOwnProperty(reservedWords[i])) {\n      throw new Error(\"Subject cannot be eventified, since it already has property '\" + reservedWords[i] + \"'\");\n    }\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL25ncmFwaC5ldmVudHMvaW5kZXguanM/ZDM5YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxrQkFBa0IsZ0NBQWdDO0FBQ3hEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7O0FBRWxEO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLHlCQUF5QixzQkFBc0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHNCQUFzQjtBQUMxQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwwQkFBMEI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvbmdyYXBoLmV2ZW50cy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oc3ViamVjdCkge1xuICB2YWxpZGF0ZVN1YmplY3Qoc3ViamVjdCk7XG5cbiAgdmFyIGV2ZW50c1N0b3JhZ2UgPSBjcmVhdGVFdmVudHNTdG9yYWdlKHN1YmplY3QpO1xuICBzdWJqZWN0Lm9uID0gZXZlbnRzU3RvcmFnZS5vbjtcbiAgc3ViamVjdC5vZmYgPSBldmVudHNTdG9yYWdlLm9mZjtcbiAgc3ViamVjdC5maXJlID0gZXZlbnRzU3RvcmFnZS5maXJlO1xuICByZXR1cm4gc3ViamVjdDtcbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZUV2ZW50c1N0b3JhZ2Uoc3ViamVjdCkge1xuICAvLyBTdG9yZSBhbGwgZXZlbnQgbGlzdGVuZXJzIHRvIHRoaXMgaGFzaC4gS2V5IGlzIGV2ZW50IG5hbWUsIHZhbHVlIGlzIGFycmF5XG4gIC8vIG9mIGNhbGxiYWNrIHJlY29yZHMuXG4gIC8vXG4gIC8vIEEgY2FsbGJhY2sgcmVjb3JkIGNvbnNpc3RzIG9mIGNhbGxiYWNrIGZ1bmN0aW9uIGFuZCBpdHMgb3B0aW9uYWwgY29udGV4dDpcbiAgLy8geyAnZXZlbnROYW1lJyA9PiBbe2NhbGxiYWNrOiBmdW5jdGlvbiwgY3R4OiBvYmplY3R9XSB9XG4gIHZhciByZWdpc3RlcmVkRXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcblxuICByZXR1cm4ge1xuICAgIG9uOiBmdW5jdGlvbiAoZXZlbnROYW1lLCBjYWxsYmFjaywgY3R4KSB7XG4gICAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignY2FsbGJhY2sgaXMgZXhwZWN0ZWQgdG8gYmUgYSBmdW5jdGlvbicpO1xuICAgICAgfVxuICAgICAgdmFyIGhhbmRsZXJzID0gcmVnaXN0ZXJlZEV2ZW50c1tldmVudE5hbWVdO1xuICAgICAgaWYgKCFoYW5kbGVycykge1xuICAgICAgICBoYW5kbGVycyA9IHJlZ2lzdGVyZWRFdmVudHNbZXZlbnROYW1lXSA9IFtdO1xuICAgICAgfVxuICAgICAgaGFuZGxlcnMucHVzaCh7Y2FsbGJhY2s6IGNhbGxiYWNrLCBjdHg6IGN0eH0pO1xuXG4gICAgICByZXR1cm4gc3ViamVjdDtcbiAgICB9LFxuXG4gICAgb2ZmOiBmdW5jdGlvbiAoZXZlbnROYW1lLCBjYWxsYmFjaykge1xuICAgICAgdmFyIHdhbnRUb1JlbW92ZUFsbCA9ICh0eXBlb2YgZXZlbnROYW1lID09PSAndW5kZWZpbmVkJyk7XG4gICAgICBpZiAod2FudFRvUmVtb3ZlQWxsKSB7XG4gICAgICAgIC8vIEtpbGxpbmcgb2xkIGV2ZW50cyBzdG9yYWdlIHNob3VsZCBiZSBlbm91Z2ggaW4gdGhpcyBjYXNlOlxuICAgICAgICByZWdpc3RlcmVkRXZlbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgcmV0dXJuIHN1YmplY3Q7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZWdpc3RlcmVkRXZlbnRzW2V2ZW50TmFtZV0pIHtcbiAgICAgICAgdmFyIGRlbGV0ZUFsbENhbGxiYWNrc0ZvckV2ZW50ID0gKHR5cGVvZiBjYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJyk7XG4gICAgICAgIGlmIChkZWxldGVBbGxDYWxsYmFja3NGb3JFdmVudCkge1xuICAgICAgICAgIGRlbGV0ZSByZWdpc3RlcmVkRXZlbnRzW2V2ZW50TmFtZV07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIGNhbGxiYWNrcyA9IHJlZ2lzdGVyZWRFdmVudHNbZXZlbnROYW1lXTtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgaWYgKGNhbGxiYWNrc1tpXS5jYWxsYmFjayA9PT0gY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgY2FsbGJhY2tzLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHN1YmplY3Q7XG4gICAgfSxcblxuICAgIGZpcmU6IGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgICAgIHZhciBjYWxsYmFja3MgPSByZWdpc3RlcmVkRXZlbnRzW2V2ZW50TmFtZV07XG4gICAgICBpZiAoIWNhbGxiYWNrcykge1xuICAgICAgICByZXR1cm4gc3ViamVjdDtcbiAgICAgIH1cblxuICAgICAgdmFyIGZpcmVBcmd1bWVudHM7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZmlyZUFyZ3VtZW50cyA9IEFycmF5LnByb3RvdHlwZS5zcGxpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuICAgICAgfVxuICAgICAgZm9yKHZhciBpID0gMDsgaSA8IGNhbGxiYWNrcy5sZW5ndGg7ICsraSkge1xuICAgICAgICB2YXIgY2FsbGJhY2tJbmZvID0gY2FsbGJhY2tzW2ldO1xuICAgICAgICBjYWxsYmFja0luZm8uY2FsbGJhY2suYXBwbHkoY2FsbGJhY2tJbmZvLmN0eCwgZmlyZUFyZ3VtZW50cyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBzdWJqZWN0O1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVTdWJqZWN0KHN1YmplY3QpIHtcbiAgaWYgKCFzdWJqZWN0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdFdmVudGlmeSBjYW5ub3QgdXNlIGZhbHN5IG9iamVjdCBhcyBldmVudHMgc3ViamVjdCcpO1xuICB9XG4gIHZhciByZXNlcnZlZFdvcmRzID0gWydvbicsICdmaXJlJywgJ29mZiddO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc2VydmVkV29yZHMubGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoc3ViamVjdC5oYXNPd25Qcm9wZXJ0eShyZXNlcnZlZFdvcmRzW2ldKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU3ViamVjdCBjYW5ub3QgYmUgZXZlbnRpZmllZCwgc2luY2UgaXQgYWxyZWFkeSBoYXMgcHJvcGVydHkgJ1wiICsgcmVzZXJ2ZWRXb3Jkc1tpXSArIFwiJ1wiKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/ngraph.events/index.js\n");

/***/ }),

/***/ "../node_modules/ngraph.fromjson/index.js":
/*!************************************************!*\
  !*** ../node_modules/ngraph.fromjson/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = load;\n\nvar createGraph = __webpack_require__(/*! ngraph.graph */ \"../node_modules/ngraph.fromjson/node_modules/ngraph.graph/index.js\");\n\nfunction load(jsonGraph, nodeTransform, linkTransform) {\n  var stored;\n  nodeTransform = nodeTransform || id;\n  linkTransform = linkTransform || id;\n  if (typeof jsonGraph === 'string') {\n    stored = JSON.parse(jsonGraph);\n  } else {\n    stored = jsonGraph;\n  }\n\n  var graph = createGraph(),\n      i;\n\n  if (stored.links === undefined || stored.nodes === undefined) {\n    throw new Error('Cannot load graph without links and nodes');\n  }\n\n  for (i = 0; i < stored.nodes.length; ++i) {\n    var parsedNode = nodeTransform(stored.nodes[i]);\n    if (!parsedNode.hasOwnProperty('id')) {\n      throw new Error('Graph node format is invalid: Node id is missing');\n    }\n\n    graph.addNode(parsedNode.id, parsedNode.data);\n  }\n\n  for (i = 0; i < stored.links.length; ++i) {\n    var link = linkTransform(stored.links[i]);\n    if (!link.hasOwnProperty('fromId') || !link.hasOwnProperty('toId')) {\n      throw new Error('Graph link format is invalid. Both fromId and toId are required');\n    }\n\n    graph.addLink(link.fromId, link.toId, link.data);\n  }\n\n  return graph;\n}\n\nfunction id(x) { return x; }\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL25ncmFwaC5mcm9tanNvbi9pbmRleC5qcz9hZDNkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLGtCQUFrQixtQkFBTyxDQUFDLHdGQUFjOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLHlCQUF5QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGFBQWEseUJBQXlCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxnQkFBZ0IsVUFBVSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvbmdyYXBoLmZyb21qc29uL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBsb2FkO1xuXG52YXIgY3JlYXRlR3JhcGggPSByZXF1aXJlKCduZ3JhcGguZ3JhcGgnKTtcblxuZnVuY3Rpb24gbG9hZChqc29uR3JhcGgsIG5vZGVUcmFuc2Zvcm0sIGxpbmtUcmFuc2Zvcm0pIHtcbiAgdmFyIHN0b3JlZDtcbiAgbm9kZVRyYW5zZm9ybSA9IG5vZGVUcmFuc2Zvcm0gfHwgaWQ7XG4gIGxpbmtUcmFuc2Zvcm0gPSBsaW5rVHJhbnNmb3JtIHx8IGlkO1xuICBpZiAodHlwZW9mIGpzb25HcmFwaCA9PT0gJ3N0cmluZycpIHtcbiAgICBzdG9yZWQgPSBKU09OLnBhcnNlKGpzb25HcmFwaCk7XG4gIH0gZWxzZSB7XG4gICAgc3RvcmVkID0ganNvbkdyYXBoO1xuICB9XG5cbiAgdmFyIGdyYXBoID0gY3JlYXRlR3JhcGgoKSxcbiAgICAgIGk7XG5cbiAgaWYgKHN0b3JlZC5saW5rcyA9PT0gdW5kZWZpbmVkIHx8IHN0b3JlZC5ub2RlcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgbG9hZCBncmFwaCB3aXRob3V0IGxpbmtzIGFuZCBub2RlcycpO1xuICB9XG5cbiAgZm9yIChpID0gMDsgaSA8IHN0b3JlZC5ub2Rlcy5sZW5ndGg7ICsraSkge1xuICAgIHZhciBwYXJzZWROb2RlID0gbm9kZVRyYW5zZm9ybShzdG9yZWQubm9kZXNbaV0pO1xuICAgIGlmICghcGFyc2VkTm9kZS5oYXNPd25Qcm9wZXJ0eSgnaWQnKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdHcmFwaCBub2RlIGZvcm1hdCBpcyBpbnZhbGlkOiBOb2RlIGlkIGlzIG1pc3NpbmcnKTtcbiAgICB9XG5cbiAgICBncmFwaC5hZGROb2RlKHBhcnNlZE5vZGUuaWQsIHBhcnNlZE5vZGUuZGF0YSk7XG4gIH1cblxuICBmb3IgKGkgPSAwOyBpIDwgc3RvcmVkLmxpbmtzLmxlbmd0aDsgKytpKSB7XG4gICAgdmFyIGxpbmsgPSBsaW5rVHJhbnNmb3JtKHN0b3JlZC5saW5rc1tpXSk7XG4gICAgaWYgKCFsaW5rLmhhc093blByb3BlcnR5KCdmcm9tSWQnKSB8fCAhbGluay5oYXNPd25Qcm9wZXJ0eSgndG9JZCcpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0dyYXBoIGxpbmsgZm9ybWF0IGlzIGludmFsaWQuIEJvdGggZnJvbUlkIGFuZCB0b0lkIGFyZSByZXF1aXJlZCcpO1xuICAgIH1cblxuICAgIGdyYXBoLmFkZExpbmsobGluay5mcm9tSWQsIGxpbmsudG9JZCwgbGluay5kYXRhKTtcbiAgfVxuXG4gIHJldHVybiBncmFwaDtcbn1cblxuZnVuY3Rpb24gaWQoeCkgeyByZXR1cm4geDsgfVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/ngraph.fromjson/index.js\n");

/***/ }),

/***/ "../node_modules/ngraph.fromjson/node_modules/ngraph.graph/index.js":
/*!**************************************************************************!*\
  !*** ../node_modules/ngraph.fromjson/node_modules/ngraph.graph/index.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * @fileOverview Contains definition of the core graph object.\n */\n\n// TODO: need to change storage layer:\n// 1. Be able to get all nodes O(1)\n// 2. Be able to get number of links O(1)\n\n/**\n * @example\n *  var graph = require('ngraph.graph')();\n *  graph.addNode(1);     // graph has one node.\n *  graph.addLink(2, 3);  // now graph contains three nodes and one link.\n *\n */\nmodule.exports = createGraph;\n\nvar eventify = __webpack_require__(/*! ngraph.events */ \"../node_modules/ngraph.events/index.js\");\n\n/**\n * Creates a new graph\n */\nfunction createGraph(options) {\n  // Graph structure is maintained as dictionary of nodes\n  // and array of links. Each node has 'links' property which\n  // hold all links related to that node. And general links\n  // array is used to speed up all links enumeration. This is inefficient\n  // in terms of memory, but simplifies coding.\n  options = options || {};\n  if ('uniqueLinkId' in options) {\n    console.warn(\n      'ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\\n' +\n      'Use `multigraph` option instead\\n',\n      '\\n',\n      'Note: there is also change in default behavior: From now own each graph\\n'+\n      'is considered to be not a multigraph by default (each edge is unique).'\n    );\n\n    options.multigraph = options.uniqueLinkId;\n  }\n\n  // Dear reader, the non-multigraphs do not guarantee that there is only\n  // one link for a given pair of node. When this option is set to false\n  // we can save some memory and CPU (18% faster for non-multigraph);\n  if (options.multigraph === undefined) options.multigraph = false;\n\n  var nodes = typeof Object.create === 'function' ? Object.create(null) : {},\n    links = [],\n    // Hash of multi-edges. Used to track ids of edges between same nodes\n    multiEdges = {},\n    nodesCount = 0,\n    suspendEvents = 0,\n\n    forEachNode = createNodeIterator(),\n    createLink = options.multigraph ? createUniqueLink : createSingleLink,\n\n    // Our graph API provides means to listen to graph changes. Users can subscribe\n    // to be notified about changes in the graph by using `on` method. However\n    // in some cases they don't use it. To avoid unnecessary memory consumption\n    // we will not record graph changes until we have at least one subscriber.\n    // Code below supports this optimization.\n    //\n    // Accumulates all changes made during graph updates.\n    // Each change element contains:\n    //  changeType - one of the strings: 'add', 'remove' or 'update';\n    //  node - if change is related to node this property is set to changed graph's node;\n    //  link - if change is related to link this property is set to changed graph's link;\n    changes = [],\n    recordLinkChange = noop,\n    recordNodeChange = noop,\n    enterModification = noop,\n    exitModification = noop;\n\n  // this is our public API:\n  var graphPart = {\n    /**\n     * Adds node to the graph. If node with given id already exists in the graph\n     * its data is extended with whatever comes in 'data' argument.\n     *\n     * @param nodeId the node's identifier. A string or number is preferred.\n     * @param [data] additional data for the node being added. If node already\n     *   exists its data object is augmented with the new one.\n     *\n     * @return {node} The newly added node or node with given id if it already exists.\n     */\n    addNode: addNode,\n\n    /**\n     * Adds a link to the graph. The function always create a new\n     * link between two nodes. If one of the nodes does not exists\n     * a new node is created.\n     *\n     * @param fromId link start node id;\n     * @param toId link end node id;\n     * @param [data] additional data to be set on the new link;\n     *\n     * @return {link} The newly created link\n     */\n    addLink: addLink,\n\n    /**\n     * Removes link from the graph. If link does not exist does nothing.\n     *\n     * @param link - object returned by addLink() or getLinks() methods.\n     *\n     * @returns true if link was removed; false otherwise.\n     */\n    removeLink: removeLink,\n\n    /**\n     * Removes node with given id from the graph. If node does not exist in the graph\n     * does nothing.\n     *\n     * @param nodeId node's identifier passed to addNode() function.\n     *\n     * @returns true if node was removed; false otherwise.\n     */\n    removeNode: removeNode,\n\n    /**\n     * Gets node with given identifier. If node does not exist undefined value is returned.\n     *\n     * @param nodeId requested node identifier;\n     *\n     * @return {node} in with requested identifier or undefined if no such node exists.\n     */\n    getNode: getNode,\n\n    /**\n     * Gets number of nodes in this graph.\n     *\n     * @return number of nodes in the graph.\n     */\n    getNodesCount: function () {\n      return nodesCount;\n    },\n\n    /**\n     * Gets total number of links in the graph.\n     */\n    getLinksCount: function () {\n      return links.length;\n    },\n\n    /**\n     * Gets all links (inbound and outbound) from the node with given id.\n     * If node with given id is not found null is returned.\n     *\n     * @param nodeId requested node identifier.\n     *\n     * @return Array of links from and to requested node if such node exists;\n     *   otherwise null is returned.\n     */\n    getLinks: getLinks,\n\n    /**\n     * Invokes callback on each node of the graph.\n     *\n     * @param {Function(node)} callback Function to be invoked. The function\n     *   is passed one argument: visited node.\n     */\n    forEachNode: forEachNode,\n\n    /**\n     * Invokes callback on every linked (adjacent) node to the given one.\n     *\n     * @param nodeId Identifier of the requested node.\n     * @param {Function(node, link)} callback Function to be called on all linked nodes.\n     *   The function is passed two parameters: adjacent node and link object itself.\n     * @param oriented if true graph treated as oriented.\n     */\n    forEachLinkedNode: forEachLinkedNode,\n\n    /**\n     * Enumerates all links in the graph\n     *\n     * @param {Function(link)} callback Function to be called on all links in the graph.\n     *   The function is passed one parameter: graph's link object.\n     *\n     * Link object contains at least the following fields:\n     *  fromId - node id where link starts;\n     *  toId - node id where link ends,\n     *  data - additional data passed to graph.addLink() method.\n     */\n    forEachLink: forEachLink,\n\n    /**\n     * Suspend all notifications about graph changes until\n     * endUpdate is called.\n     */\n    beginUpdate: enterModification,\n\n    /**\n     * Resumes all notifications about graph changes and fires\n     * graph 'changed' event in case there are any pending changes.\n     */\n    endUpdate: exitModification,\n\n    /**\n     * Removes all nodes and links from the graph.\n     */\n    clear: clear,\n\n    /**\n     * Detects whether there is a link between two nodes.\n     * Operation complexity is O(n) where n - number of links of a node.\n     * NOTE: this function is synonim for getLink()\n     *\n     * @returns link if there is one. null otherwise.\n     */\n    hasLink: getLink,\n\n    /**\n     * Detects whether there is a node with given id\n     * \n     * Operation complexity is O(1)\n     * NOTE: this function is synonim for getNode()\n     *\n     * @returns node if there is one; Falsy value otherwise.\n     */\n    hasNode: getNode,\n\n    /**\n     * Gets an edge between two nodes.\n     * Operation complexity is O(n) where n - number of links of a node.\n     *\n     * @param {string} fromId link start identifier\n     * @param {string} toId link end identifier\n     *\n     * @returns link if there is one. null otherwise.\n     */\n    getLink: getLink\n  };\n\n  // this will add `on()` and `fire()` methods.\n  eventify(graphPart);\n\n  monitorSubscribers();\n\n  return graphPart;\n\n  function monitorSubscribers() {\n    var realOn = graphPart.on;\n\n    // replace real `on` with our temporary on, which will trigger change\n    // modification monitoring:\n    graphPart.on = on;\n\n    function on() {\n      // now it's time to start tracking stuff:\n      graphPart.beginUpdate = enterModification = enterModificationReal;\n      graphPart.endUpdate = exitModification = exitModificationReal;\n      recordLinkChange = recordLinkChangeReal;\n      recordNodeChange = recordNodeChangeReal;\n\n      // this will replace current `on` method with real pub/sub from `eventify`.\n      graphPart.on = realOn;\n      // delegate to real `on` handler:\n      return realOn.apply(graphPart, arguments);\n    }\n  }\n\n  function recordLinkChangeReal(link, changeType) {\n    changes.push({\n      link: link,\n      changeType: changeType\n    });\n  }\n\n  function recordNodeChangeReal(node, changeType) {\n    changes.push({\n      node: node,\n      changeType: changeType\n    });\n  }\n\n  function addNode(nodeId, data) {\n    if (nodeId === undefined) {\n      throw new Error('Invalid node identifier');\n    }\n\n    enterModification();\n\n    var node = getNode(nodeId);\n    if (!node) {\n      node = new Node(nodeId, data);\n      nodesCount++;\n      recordNodeChange(node, 'add');\n    } else {\n      node.data = data;\n      recordNodeChange(node, 'update');\n    }\n\n    nodes[nodeId] = node;\n\n    exitModification();\n    return node;\n  }\n\n  function getNode(nodeId) {\n    return nodes[nodeId];\n  }\n\n  function removeNode(nodeId) {\n    var node = getNode(nodeId);\n    if (!node) {\n      return false;\n    }\n\n    enterModification();\n\n    var prevLinks = node.links;\n    if (prevLinks) {\n      node.links = null;\n      for(var i = 0; i < prevLinks.length; ++i) {\n        removeLink(prevLinks[i]);\n      }\n    }\n\n    delete nodes[nodeId];\n    nodesCount--;\n\n    recordNodeChange(node, 'remove');\n\n    exitModification();\n\n    return true;\n  }\n\n\n  function addLink(fromId, toId, data) {\n    enterModification();\n\n    var fromNode = getNode(fromId) || addNode(fromId);\n    var toNode = getNode(toId) || addNode(toId);\n\n    var link = createLink(fromId, toId, data);\n\n    links.push(link);\n\n    // TODO: this is not cool. On large graphs potentially would consume more memory.\n    addLinkToNode(fromNode, link);\n    if (fromId !== toId) {\n      // make sure we are not duplicating links for self-loops\n      addLinkToNode(toNode, link);\n    }\n\n    recordLinkChange(link, 'add');\n\n    exitModification();\n\n    return link;\n  }\n\n  function createSingleLink(fromId, toId, data) {\n    var linkId = makeLinkId(fromId, toId);\n    return new Link(fromId, toId, data, linkId);\n  }\n\n  function createUniqueLink(fromId, toId, data) {\n    // TODO: Get rid of this method.\n    var linkId = makeLinkId(fromId, toId);\n    var isMultiEdge = multiEdges.hasOwnProperty(linkId);\n    if (isMultiEdge || getLink(fromId, toId)) {\n      if (!isMultiEdge) {\n        multiEdges[linkId] = 0;\n      }\n      var suffix = '@' + (++multiEdges[linkId]);\n      linkId = makeLinkId(fromId + suffix, toId + suffix);\n    }\n\n    return new Link(fromId, toId, data, linkId);\n  }\n\n  function getLinks(nodeId) {\n    var node = getNode(nodeId);\n    return node ? node.links : null;\n  }\n\n  function removeLink(link) {\n    if (!link) {\n      return false;\n    }\n    var idx = indexOfElementInArray(link, links);\n    if (idx < 0) {\n      return false;\n    }\n\n    enterModification();\n\n    links.splice(idx, 1);\n\n    var fromNode = getNode(link.fromId);\n    var toNode = getNode(link.toId);\n\n    if (fromNode) {\n      idx = indexOfElementInArray(link, fromNode.links);\n      if (idx >= 0) {\n        fromNode.links.splice(idx, 1);\n      }\n    }\n\n    if (toNode) {\n      idx = indexOfElementInArray(link, toNode.links);\n      if (idx >= 0) {\n        toNode.links.splice(idx, 1);\n      }\n    }\n\n    recordLinkChange(link, 'remove');\n\n    exitModification();\n\n    return true;\n  }\n\n  function getLink(fromNodeId, toNodeId) {\n    // TODO: Use sorted links to speed this up\n    var node = getNode(fromNodeId),\n      i;\n    if (!node || !node.links) {\n      return null;\n    }\n\n    for (i = 0; i < node.links.length; ++i) {\n      var link = node.links[i];\n      if (link.fromId === fromNodeId && link.toId === toNodeId) {\n        return link;\n      }\n    }\n\n    return null; // no link.\n  }\n\n  function clear() {\n    enterModification();\n    forEachNode(function(node) {\n      removeNode(node.id);\n    });\n    exitModification();\n  }\n\n  function forEachLink(callback) {\n    var i, length;\n    if (typeof callback === 'function') {\n      for (i = 0, length = links.length; i < length; ++i) {\n        callback(links[i]);\n      }\n    }\n  }\n\n  function forEachLinkedNode(nodeId, callback, oriented) {\n    var node = getNode(nodeId);\n\n    if (node && node.links && typeof callback === 'function') {\n      if (oriented) {\n        return forEachOrientedLink(node.links, nodeId, callback);\n      } else {\n        return forEachNonOrientedLink(node.links, nodeId, callback);\n      }\n    }\n  }\n\n  function forEachNonOrientedLink(links, nodeId, callback) {\n    var quitFast;\n    for (var i = 0; i < links.length; ++i) {\n      var link = links[i];\n      var linkedNodeId = link.fromId === nodeId ? link.toId : link.fromId;\n\n      quitFast = callback(nodes[linkedNodeId], link);\n      if (quitFast) {\n        return true; // Client does not need more iterations. Break now.\n      }\n    }\n  }\n\n  function forEachOrientedLink(links, nodeId, callback) {\n    var quitFast;\n    for (var i = 0; i < links.length; ++i) {\n      var link = links[i];\n      if (link.fromId === nodeId) {\n        quitFast = callback(nodes[link.toId], link);\n        if (quitFast) {\n          return true; // Client does not need more iterations. Break now.\n        }\n      }\n    }\n  }\n\n  // we will not fire anything until users of this library explicitly call `on()`\n  // method.\n  function noop() {}\n\n  // Enter, Exit modification allows bulk graph updates without firing events.\n  function enterModificationReal() {\n    suspendEvents += 1;\n  }\n\n  function exitModificationReal() {\n    suspendEvents -= 1;\n    if (suspendEvents === 0 && changes.length > 0) {\n      graphPart.fire('changed', changes);\n      changes.length = 0;\n    }\n  }\n\n  function createNodeIterator() {\n    // Object.keys iterator is 1.3x faster than `for in` loop.\n    // See `https://github.com/anvaka/ngraph.graph/tree/bench-for-in-vs-obj-keys`\n    // branch for perf test\n    return Object.keys ? objectKeysIterator : forInIterator;\n  }\n\n  function objectKeysIterator(callback) {\n    if (typeof callback !== 'function') {\n      return;\n    }\n\n    var keys = Object.keys(nodes);\n    for (var i = 0; i < keys.length; ++i) {\n      if (callback(nodes[keys[i]])) {\n        return true; // client doesn't want to proceed. Return.\n      }\n    }\n  }\n\n  function forInIterator(callback) {\n    if (typeof callback !== 'function') {\n      return;\n    }\n    var node;\n\n    for (node in nodes) {\n      if (callback(nodes[node])) {\n        return true; // client doesn't want to proceed. Return.\n      }\n    }\n  }\n}\n\n// need this for old browsers. Should this be a separate module?\nfunction indexOfElementInArray(element, array) {\n  if (!array) return -1;\n\n  if (array.indexOf) {\n    return array.indexOf(element);\n  }\n\n  var len = array.length,\n    i;\n\n  for (i = 0; i < len; i += 1) {\n    if (array[i] === element) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Internal structure to represent node;\n */\nfunction Node(id, data) {\n  this.id = id;\n  this.links = null;\n  this.data = data;\n}\n\nfunction addLinkToNode(node, link) {\n  if (node.links) {\n    node.links.push(link);\n  } else {\n    node.links = [link];\n  }\n}\n\n/**\n * Internal structure to represent links;\n */\nfunction Link(fromId, toId, data, id) {\n  this.fromId = fromId;\n  this.toId = toId;\n  this.data = data;\n  this.id = id;\n}\n\nfunction hashCode(str) {\n  var hash = 0, i, chr, len;\n  if (str.length == 0) return hash;\n  for (i = 0, len = str.length; i < len; i++) {\n    chr   = str.charCodeAt(i);\n    hash  = ((hash << 5) - hash) + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nfunction makeLinkId(fromId, toId) {\n  return fromId.toString() + '👉 ' + toId.toString();\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL25ncmFwaC5mcm9tanNvbi9ub2RlX21vZHVsZXMvbmdyYXBoLmdyYXBoL2luZGV4LmpzPzVmNDciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTs7QUFFQSxlQUFlLG1CQUFPLENBQUMsNkRBQWU7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDRFQUE0RTtBQUM1RTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixLQUFLO0FBQ3JCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLEtBQUs7QUFDckI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixLQUFLO0FBQ3JCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHFCQUFxQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGVBQWU7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QixlQUFlLE9BQU87QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixzQkFBc0I7QUFDMUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGVBQWUsdUJBQXVCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0JBQWdCO0FBQ2hCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLFlBQVk7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1CQUFtQixrQkFBa0I7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLGtCQUFrQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLGlCQUFpQjtBQUNwQztBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixTQUFTO0FBQ3hDO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvbmdyYXBoLmZyb21qc29uL25vZGVfbW9kdWxlcy9uZ3JhcGguZ3JhcGgvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlT3ZlcnZpZXcgQ29udGFpbnMgZGVmaW5pdGlvbiBvZiB0aGUgY29yZSBncmFwaCBvYmplY3QuXG4gKi9cblxuLy8gVE9ETzogbmVlZCB0byBjaGFuZ2Ugc3RvcmFnZSBsYXllcjpcbi8vIDEuIEJlIGFibGUgdG8gZ2V0IGFsbCBub2RlcyBPKDEpXG4vLyAyLiBCZSBhYmxlIHRvIGdldCBudW1iZXIgb2YgbGlua3MgTygxKVxuXG4vKipcbiAqIEBleGFtcGxlXG4gKiAgdmFyIGdyYXBoID0gcmVxdWlyZSgnbmdyYXBoLmdyYXBoJykoKTtcbiAqICBncmFwaC5hZGROb2RlKDEpOyAgICAgLy8gZ3JhcGggaGFzIG9uZSBub2RlLlxuICogIGdyYXBoLmFkZExpbmsoMiwgMyk7ICAvLyBub3cgZ3JhcGggY29udGFpbnMgdGhyZWUgbm9kZXMgYW5kIG9uZSBsaW5rLlxuICpcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVHcmFwaDtcblxudmFyIGV2ZW50aWZ5ID0gcmVxdWlyZSgnbmdyYXBoLmV2ZW50cycpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgZ3JhcGhcbiAqL1xuZnVuY3Rpb24gY3JlYXRlR3JhcGgob3B0aW9ucykge1xuICAvLyBHcmFwaCBzdHJ1Y3R1cmUgaXMgbWFpbnRhaW5lZCBhcyBkaWN0aW9uYXJ5IG9mIG5vZGVzXG4gIC8vIGFuZCBhcnJheSBvZiBsaW5rcy4gRWFjaCBub2RlIGhhcyAnbGlua3MnIHByb3BlcnR5IHdoaWNoXG4gIC8vIGhvbGQgYWxsIGxpbmtzIHJlbGF0ZWQgdG8gdGhhdCBub2RlLiBBbmQgZ2VuZXJhbCBsaW5rc1xuICAvLyBhcnJheSBpcyB1c2VkIHRvIHNwZWVkIHVwIGFsbCBsaW5rcyBlbnVtZXJhdGlvbi4gVGhpcyBpcyBpbmVmZmljaWVudFxuICAvLyBpbiB0ZXJtcyBvZiBtZW1vcnksIGJ1dCBzaW1wbGlmaWVzIGNvZGluZy5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGlmICgndW5pcXVlTGlua0lkJyBpbiBvcHRpb25zKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgJ25ncmFwaC5ncmFwaDogU3RhcnRpbmcgZnJvbSB2ZXJzaW9uIDAuMTQgYHVuaXF1ZUxpbmtJZGAgaXMgZGVwcmVjYXRlZC5cXG4nICtcbiAgICAgICdVc2UgYG11bHRpZ3JhcGhgIG9wdGlvbiBpbnN0ZWFkXFxuJyxcbiAgICAgICdcXG4nLFxuICAgICAgJ05vdGU6IHRoZXJlIGlzIGFsc28gY2hhbmdlIGluIGRlZmF1bHQgYmVoYXZpb3I6IEZyb20gbm93IG93biBlYWNoIGdyYXBoXFxuJytcbiAgICAgICdpcyBjb25zaWRlcmVkIHRvIGJlIG5vdCBhIG11bHRpZ3JhcGggYnkgZGVmYXVsdCAoZWFjaCBlZGdlIGlzIHVuaXF1ZSkuJ1xuICAgICk7XG5cbiAgICBvcHRpb25zLm11bHRpZ3JhcGggPSBvcHRpb25zLnVuaXF1ZUxpbmtJZDtcbiAgfVxuXG4gIC8vIERlYXIgcmVhZGVyLCB0aGUgbm9uLW11bHRpZ3JhcGhzIGRvIG5vdCBndWFyYW50ZWUgdGhhdCB0aGVyZSBpcyBvbmx5XG4gIC8vIG9uZSBsaW5rIGZvciBhIGdpdmVuIHBhaXIgb2Ygbm9kZS4gV2hlbiB0aGlzIG9wdGlvbiBpcyBzZXQgdG8gZmFsc2VcbiAgLy8gd2UgY2FuIHNhdmUgc29tZSBtZW1vcnkgYW5kIENQVSAoMTglIGZhc3RlciBmb3Igbm9uLW11bHRpZ3JhcGgpO1xuICBpZiAob3B0aW9ucy5tdWx0aWdyYXBoID09PSB1bmRlZmluZWQpIG9wdGlvbnMubXVsdGlncmFwaCA9IGZhbHNlO1xuXG4gIHZhciBub2RlcyA9IHR5cGVvZiBPYmplY3QuY3JlYXRlID09PSAnZnVuY3Rpb24nID8gT2JqZWN0LmNyZWF0ZShudWxsKSA6IHt9LFxuICAgIGxpbmtzID0gW10sXG4gICAgLy8gSGFzaCBvZiBtdWx0aS1lZGdlcy4gVXNlZCB0byB0cmFjayBpZHMgb2YgZWRnZXMgYmV0d2VlbiBzYW1lIG5vZGVzXG4gICAgbXVsdGlFZGdlcyA9IHt9LFxuICAgIG5vZGVzQ291bnQgPSAwLFxuICAgIHN1c3BlbmRFdmVudHMgPSAwLFxuXG4gICAgZm9yRWFjaE5vZGUgPSBjcmVhdGVOb2RlSXRlcmF0b3IoKSxcbiAgICBjcmVhdGVMaW5rID0gb3B0aW9ucy5tdWx0aWdyYXBoID8gY3JlYXRlVW5pcXVlTGluayA6IGNyZWF0ZVNpbmdsZUxpbmssXG5cbiAgICAvLyBPdXIgZ3JhcGggQVBJIHByb3ZpZGVzIG1lYW5zIHRvIGxpc3RlbiB0byBncmFwaCBjaGFuZ2VzLiBVc2VycyBjYW4gc3Vic2NyaWJlXG4gICAgLy8gdG8gYmUgbm90aWZpZWQgYWJvdXQgY2hhbmdlcyBpbiB0aGUgZ3JhcGggYnkgdXNpbmcgYG9uYCBtZXRob2QuIEhvd2V2ZXJcbiAgICAvLyBpbiBzb21lIGNhc2VzIHRoZXkgZG9uJ3QgdXNlIGl0LiBUbyBhdm9pZCB1bm5lY2Vzc2FyeSBtZW1vcnkgY29uc3VtcHRpb25cbiAgICAvLyB3ZSB3aWxsIG5vdCByZWNvcmQgZ3JhcGggY2hhbmdlcyB1bnRpbCB3ZSBoYXZlIGF0IGxlYXN0IG9uZSBzdWJzY3JpYmVyLlxuICAgIC8vIENvZGUgYmVsb3cgc3VwcG9ydHMgdGhpcyBvcHRpbWl6YXRpb24uXG4gICAgLy9cbiAgICAvLyBBY2N1bXVsYXRlcyBhbGwgY2hhbmdlcyBtYWRlIGR1cmluZyBncmFwaCB1cGRhdGVzLlxuICAgIC8vIEVhY2ggY2hhbmdlIGVsZW1lbnQgY29udGFpbnM6XG4gICAgLy8gIGNoYW5nZVR5cGUgLSBvbmUgb2YgdGhlIHN0cmluZ3M6ICdhZGQnLCAncmVtb3ZlJyBvciAndXBkYXRlJztcbiAgICAvLyAgbm9kZSAtIGlmIGNoYW5nZSBpcyByZWxhdGVkIHRvIG5vZGUgdGhpcyBwcm9wZXJ0eSBpcyBzZXQgdG8gY2hhbmdlZCBncmFwaCdzIG5vZGU7XG4gICAgLy8gIGxpbmsgLSBpZiBjaGFuZ2UgaXMgcmVsYXRlZCB0byBsaW5rIHRoaXMgcHJvcGVydHkgaXMgc2V0IHRvIGNoYW5nZWQgZ3JhcGgncyBsaW5rO1xuICAgIGNoYW5nZXMgPSBbXSxcbiAgICByZWNvcmRMaW5rQ2hhbmdlID0gbm9vcCxcbiAgICByZWNvcmROb2RlQ2hhbmdlID0gbm9vcCxcbiAgICBlbnRlck1vZGlmaWNhdGlvbiA9IG5vb3AsXG4gICAgZXhpdE1vZGlmaWNhdGlvbiA9IG5vb3A7XG5cbiAgLy8gdGhpcyBpcyBvdXIgcHVibGljIEFQSTpcbiAgdmFyIGdyYXBoUGFydCA9IHtcbiAgICAvKipcbiAgICAgKiBBZGRzIG5vZGUgdG8gdGhlIGdyYXBoLiBJZiBub2RlIHdpdGggZ2l2ZW4gaWQgYWxyZWFkeSBleGlzdHMgaW4gdGhlIGdyYXBoXG4gICAgICogaXRzIGRhdGEgaXMgZXh0ZW5kZWQgd2l0aCB3aGF0ZXZlciBjb21lcyBpbiAnZGF0YScgYXJndW1lbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbm9kZUlkIHRoZSBub2RlJ3MgaWRlbnRpZmllci4gQSBzdHJpbmcgb3IgbnVtYmVyIGlzIHByZWZlcnJlZC5cbiAgICAgKiBAcGFyYW0gW2RhdGFdIGFkZGl0aW9uYWwgZGF0YSBmb3IgdGhlIG5vZGUgYmVpbmcgYWRkZWQuIElmIG5vZGUgYWxyZWFkeVxuICAgICAqICAgZXhpc3RzIGl0cyBkYXRhIG9iamVjdCBpcyBhdWdtZW50ZWQgd2l0aCB0aGUgbmV3IG9uZS5cbiAgICAgKlxuICAgICAqIEByZXR1cm4ge25vZGV9IFRoZSBuZXdseSBhZGRlZCBub2RlIG9yIG5vZGUgd2l0aCBnaXZlbiBpZCBpZiBpdCBhbHJlYWR5IGV4aXN0cy5cbiAgICAgKi9cbiAgICBhZGROb2RlOiBhZGROb2RlLFxuXG4gICAgLyoqXG4gICAgICogQWRkcyBhIGxpbmsgdG8gdGhlIGdyYXBoLiBUaGUgZnVuY3Rpb24gYWx3YXlzIGNyZWF0ZSBhIG5ld1xuICAgICAqIGxpbmsgYmV0d2VlbiB0d28gbm9kZXMuIElmIG9uZSBvZiB0aGUgbm9kZXMgZG9lcyBub3QgZXhpc3RzXG4gICAgICogYSBuZXcgbm9kZSBpcyBjcmVhdGVkLlxuICAgICAqXG4gICAgICogQHBhcmFtIGZyb21JZCBsaW5rIHN0YXJ0IG5vZGUgaWQ7XG4gICAgICogQHBhcmFtIHRvSWQgbGluayBlbmQgbm9kZSBpZDtcbiAgICAgKiBAcGFyYW0gW2RhdGFdIGFkZGl0aW9uYWwgZGF0YSB0byBiZSBzZXQgb24gdGhlIG5ldyBsaW5rO1xuICAgICAqXG4gICAgICogQHJldHVybiB7bGlua30gVGhlIG5ld2x5IGNyZWF0ZWQgbGlua1xuICAgICAqL1xuICAgIGFkZExpbms6IGFkZExpbmssXG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGxpbmsgZnJvbSB0aGUgZ3JhcGguIElmIGxpbmsgZG9lcyBub3QgZXhpc3QgZG9lcyBub3RoaW5nLlxuICAgICAqXG4gICAgICogQHBhcmFtIGxpbmsgLSBvYmplY3QgcmV0dXJuZWQgYnkgYWRkTGluaygpIG9yIGdldExpbmtzKCkgbWV0aG9kcy5cbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHRydWUgaWYgbGluayB3YXMgcmVtb3ZlZDsgZmFsc2Ugb3RoZXJ3aXNlLlxuICAgICAqL1xuICAgIHJlbW92ZUxpbms6IHJlbW92ZUxpbmssXG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIG5vZGUgd2l0aCBnaXZlbiBpZCBmcm9tIHRoZSBncmFwaC4gSWYgbm9kZSBkb2VzIG5vdCBleGlzdCBpbiB0aGUgZ3JhcGhcbiAgICAgKiBkb2VzIG5vdGhpbmcuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbm9kZUlkIG5vZGUncyBpZGVudGlmaWVyIHBhc3NlZCB0byBhZGROb2RlKCkgZnVuY3Rpb24uXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB0cnVlIGlmIG5vZGUgd2FzIHJlbW92ZWQ7IGZhbHNlIG90aGVyd2lzZS5cbiAgICAgKi9cbiAgICByZW1vdmVOb2RlOiByZW1vdmVOb2RlLFxuXG4gICAgLyoqXG4gICAgICogR2V0cyBub2RlIHdpdGggZ2l2ZW4gaWRlbnRpZmllci4gSWYgbm9kZSBkb2VzIG5vdCBleGlzdCB1bmRlZmluZWQgdmFsdWUgaXMgcmV0dXJuZWQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbm9kZUlkIHJlcXVlc3RlZCBub2RlIGlkZW50aWZpZXI7XG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHtub2RlfSBpbiB3aXRoIHJlcXVlc3RlZCBpZGVudGlmaWVyIG9yIHVuZGVmaW5lZCBpZiBubyBzdWNoIG5vZGUgZXhpc3RzLlxuICAgICAqL1xuICAgIGdldE5vZGU6IGdldE5vZGUsXG5cbiAgICAvKipcbiAgICAgKiBHZXRzIG51bWJlciBvZiBub2RlcyBpbiB0aGlzIGdyYXBoLlxuICAgICAqXG4gICAgICogQHJldHVybiBudW1iZXIgb2Ygbm9kZXMgaW4gdGhlIGdyYXBoLlxuICAgICAqL1xuICAgIGdldE5vZGVzQ291bnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBub2Rlc0NvdW50O1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBHZXRzIHRvdGFsIG51bWJlciBvZiBsaW5rcyBpbiB0aGUgZ3JhcGguXG4gICAgICovXG4gICAgZ2V0TGlua3NDb3VudDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGxpbmtzLmxlbmd0aDtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogR2V0cyBhbGwgbGlua3MgKGluYm91bmQgYW5kIG91dGJvdW5kKSBmcm9tIHRoZSBub2RlIHdpdGggZ2l2ZW4gaWQuXG4gICAgICogSWYgbm9kZSB3aXRoIGdpdmVuIGlkIGlzIG5vdCBmb3VuZCBudWxsIGlzIHJldHVybmVkLlxuICAgICAqXG4gICAgICogQHBhcmFtIG5vZGVJZCByZXF1ZXN0ZWQgbm9kZSBpZGVudGlmaWVyLlxuICAgICAqXG4gICAgICogQHJldHVybiBBcnJheSBvZiBsaW5rcyBmcm9tIGFuZCB0byByZXF1ZXN0ZWQgbm9kZSBpZiBzdWNoIG5vZGUgZXhpc3RzO1xuICAgICAqICAgb3RoZXJ3aXNlIG51bGwgaXMgcmV0dXJuZWQuXG4gICAgICovXG4gICAgZ2V0TGlua3M6IGdldExpbmtzLFxuXG4gICAgLyoqXG4gICAgICogSW52b2tlcyBjYWxsYmFjayBvbiBlYWNoIG5vZGUgb2YgdGhlIGdyYXBoLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbihub2RlKX0gY2FsbGJhY2sgRnVuY3Rpb24gdG8gYmUgaW52b2tlZC4gVGhlIGZ1bmN0aW9uXG4gICAgICogICBpcyBwYXNzZWQgb25lIGFyZ3VtZW50OiB2aXNpdGVkIG5vZGUuXG4gICAgICovXG4gICAgZm9yRWFjaE5vZGU6IGZvckVhY2hOb2RlLFxuXG4gICAgLyoqXG4gICAgICogSW52b2tlcyBjYWxsYmFjayBvbiBldmVyeSBsaW5rZWQgKGFkamFjZW50KSBub2RlIHRvIHRoZSBnaXZlbiBvbmUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbm9kZUlkIElkZW50aWZpZXIgb2YgdGhlIHJlcXVlc3RlZCBub2RlLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb24obm9kZSwgbGluayl9IGNhbGxiYWNrIEZ1bmN0aW9uIHRvIGJlIGNhbGxlZCBvbiBhbGwgbGlua2VkIG5vZGVzLlxuICAgICAqICAgVGhlIGZ1bmN0aW9uIGlzIHBhc3NlZCB0d28gcGFyYW1ldGVyczogYWRqYWNlbnQgbm9kZSBhbmQgbGluayBvYmplY3QgaXRzZWxmLlxuICAgICAqIEBwYXJhbSBvcmllbnRlZCBpZiB0cnVlIGdyYXBoIHRyZWF0ZWQgYXMgb3JpZW50ZWQuXG4gICAgICovXG4gICAgZm9yRWFjaExpbmtlZE5vZGU6IGZvckVhY2hMaW5rZWROb2RlLFxuXG4gICAgLyoqXG4gICAgICogRW51bWVyYXRlcyBhbGwgbGlua3MgaW4gdGhlIGdyYXBoXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9uKGxpbmspfSBjYWxsYmFjayBGdW5jdGlvbiB0byBiZSBjYWxsZWQgb24gYWxsIGxpbmtzIGluIHRoZSBncmFwaC5cbiAgICAgKiAgIFRoZSBmdW5jdGlvbiBpcyBwYXNzZWQgb25lIHBhcmFtZXRlcjogZ3JhcGgncyBsaW5rIG9iamVjdC5cbiAgICAgKlxuICAgICAqIExpbmsgb2JqZWN0IGNvbnRhaW5zIGF0IGxlYXN0IHRoZSBmb2xsb3dpbmcgZmllbGRzOlxuICAgICAqICBmcm9tSWQgLSBub2RlIGlkIHdoZXJlIGxpbmsgc3RhcnRzO1xuICAgICAqICB0b0lkIC0gbm9kZSBpZCB3aGVyZSBsaW5rIGVuZHMsXG4gICAgICogIGRhdGEgLSBhZGRpdGlvbmFsIGRhdGEgcGFzc2VkIHRvIGdyYXBoLmFkZExpbmsoKSBtZXRob2QuXG4gICAgICovXG4gICAgZm9yRWFjaExpbms6IGZvckVhY2hMaW5rLFxuXG4gICAgLyoqXG4gICAgICogU3VzcGVuZCBhbGwgbm90aWZpY2F0aW9ucyBhYm91dCBncmFwaCBjaGFuZ2VzIHVudGlsXG4gICAgICogZW5kVXBkYXRlIGlzIGNhbGxlZC5cbiAgICAgKi9cbiAgICBiZWdpblVwZGF0ZTogZW50ZXJNb2RpZmljYXRpb24sXG5cbiAgICAvKipcbiAgICAgKiBSZXN1bWVzIGFsbCBub3RpZmljYXRpb25zIGFib3V0IGdyYXBoIGNoYW5nZXMgYW5kIGZpcmVzXG4gICAgICogZ3JhcGggJ2NoYW5nZWQnIGV2ZW50IGluIGNhc2UgdGhlcmUgYXJlIGFueSBwZW5kaW5nIGNoYW5nZXMuXG4gICAgICovXG4gICAgZW5kVXBkYXRlOiBleGl0TW9kaWZpY2F0aW9uLFxuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhbGwgbm9kZXMgYW5kIGxpbmtzIGZyb20gdGhlIGdyYXBoLlxuICAgICAqL1xuICAgIGNsZWFyOiBjbGVhcixcblxuICAgIC8qKlxuICAgICAqIERldGVjdHMgd2hldGhlciB0aGVyZSBpcyBhIGxpbmsgYmV0d2VlbiB0d28gbm9kZXMuXG4gICAgICogT3BlcmF0aW9uIGNvbXBsZXhpdHkgaXMgTyhuKSB3aGVyZSBuIC0gbnVtYmVyIG9mIGxpbmtzIG9mIGEgbm9kZS5cbiAgICAgKiBOT1RFOiB0aGlzIGZ1bmN0aW9uIGlzIHN5bm9uaW0gZm9yIGdldExpbmsoKVxuICAgICAqXG4gICAgICogQHJldHVybnMgbGluayBpZiB0aGVyZSBpcyBvbmUuIG51bGwgb3RoZXJ3aXNlLlxuICAgICAqL1xuICAgIGhhc0xpbms6IGdldExpbmssXG5cbiAgICAvKipcbiAgICAgKiBEZXRlY3RzIHdoZXRoZXIgdGhlcmUgaXMgYSBub2RlIHdpdGggZ2l2ZW4gaWRcbiAgICAgKiBcbiAgICAgKiBPcGVyYXRpb24gY29tcGxleGl0eSBpcyBPKDEpXG4gICAgICogTk9URTogdGhpcyBmdW5jdGlvbiBpcyBzeW5vbmltIGZvciBnZXROb2RlKClcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIG5vZGUgaWYgdGhlcmUgaXMgb25lOyBGYWxzeSB2YWx1ZSBvdGhlcndpc2UuXG4gICAgICovXG4gICAgaGFzTm9kZTogZ2V0Tm9kZSxcblxuICAgIC8qKlxuICAgICAqIEdldHMgYW4gZWRnZSBiZXR3ZWVuIHR3byBub2Rlcy5cbiAgICAgKiBPcGVyYXRpb24gY29tcGxleGl0eSBpcyBPKG4pIHdoZXJlIG4gLSBudW1iZXIgb2YgbGlua3Mgb2YgYSBub2RlLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGZyb21JZCBsaW5rIHN0YXJ0IGlkZW50aWZpZXJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdG9JZCBsaW5rIGVuZCBpZGVudGlmaWVyXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBsaW5rIGlmIHRoZXJlIGlzIG9uZS4gbnVsbCBvdGhlcndpc2UuXG4gICAgICovXG4gICAgZ2V0TGluazogZ2V0TGlua1xuICB9O1xuXG4gIC8vIHRoaXMgd2lsbCBhZGQgYG9uKClgIGFuZCBgZmlyZSgpYCBtZXRob2RzLlxuICBldmVudGlmeShncmFwaFBhcnQpO1xuXG4gIG1vbml0b3JTdWJzY3JpYmVycygpO1xuXG4gIHJldHVybiBncmFwaFBhcnQ7XG5cbiAgZnVuY3Rpb24gbW9uaXRvclN1YnNjcmliZXJzKCkge1xuICAgIHZhciByZWFsT24gPSBncmFwaFBhcnQub247XG5cbiAgICAvLyByZXBsYWNlIHJlYWwgYG9uYCB3aXRoIG91ciB0ZW1wb3Jhcnkgb24sIHdoaWNoIHdpbGwgdHJpZ2dlciBjaGFuZ2VcbiAgICAvLyBtb2RpZmljYXRpb24gbW9uaXRvcmluZzpcbiAgICBncmFwaFBhcnQub24gPSBvbjtcblxuICAgIGZ1bmN0aW9uIG9uKCkge1xuICAgICAgLy8gbm93IGl0J3MgdGltZSB0byBzdGFydCB0cmFja2luZyBzdHVmZjpcbiAgICAgIGdyYXBoUGFydC5iZWdpblVwZGF0ZSA9IGVudGVyTW9kaWZpY2F0aW9uID0gZW50ZXJNb2RpZmljYXRpb25SZWFsO1xuICAgICAgZ3JhcGhQYXJ0LmVuZFVwZGF0ZSA9IGV4aXRNb2RpZmljYXRpb24gPSBleGl0TW9kaWZpY2F0aW9uUmVhbDtcbiAgICAgIHJlY29yZExpbmtDaGFuZ2UgPSByZWNvcmRMaW5rQ2hhbmdlUmVhbDtcbiAgICAgIHJlY29yZE5vZGVDaGFuZ2UgPSByZWNvcmROb2RlQ2hhbmdlUmVhbDtcblxuICAgICAgLy8gdGhpcyB3aWxsIHJlcGxhY2UgY3VycmVudCBgb25gIG1ldGhvZCB3aXRoIHJlYWwgcHViL3N1YiBmcm9tIGBldmVudGlmeWAuXG4gICAgICBncmFwaFBhcnQub24gPSByZWFsT247XG4gICAgICAvLyBkZWxlZ2F0ZSB0byByZWFsIGBvbmAgaGFuZGxlcjpcbiAgICAgIHJldHVybiByZWFsT24uYXBwbHkoZ3JhcGhQYXJ0LCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlY29yZExpbmtDaGFuZ2VSZWFsKGxpbmssIGNoYW5nZVR5cGUpIHtcbiAgICBjaGFuZ2VzLnB1c2goe1xuICAgICAgbGluazogbGluayxcbiAgICAgIGNoYW5nZVR5cGU6IGNoYW5nZVR5cGVcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlY29yZE5vZGVDaGFuZ2VSZWFsKG5vZGUsIGNoYW5nZVR5cGUpIHtcbiAgICBjaGFuZ2VzLnB1c2goe1xuICAgICAgbm9kZTogbm9kZSxcbiAgICAgIGNoYW5nZVR5cGU6IGNoYW5nZVR5cGVcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFkZE5vZGUobm9kZUlkLCBkYXRhKSB7XG4gICAgaWYgKG5vZGVJZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgbm9kZSBpZGVudGlmaWVyJyk7XG4gICAgfVxuXG4gICAgZW50ZXJNb2RpZmljYXRpb24oKTtcblxuICAgIHZhciBub2RlID0gZ2V0Tm9kZShub2RlSWQpO1xuICAgIGlmICghbm9kZSkge1xuICAgICAgbm9kZSA9IG5ldyBOb2RlKG5vZGVJZCwgZGF0YSk7XG4gICAgICBub2Rlc0NvdW50Kys7XG4gICAgICByZWNvcmROb2RlQ2hhbmdlKG5vZGUsICdhZGQnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbm9kZS5kYXRhID0gZGF0YTtcbiAgICAgIHJlY29yZE5vZGVDaGFuZ2Uobm9kZSwgJ3VwZGF0ZScpO1xuICAgIH1cblxuICAgIG5vZGVzW25vZGVJZF0gPSBub2RlO1xuXG4gICAgZXhpdE1vZGlmaWNhdGlvbigpO1xuICAgIHJldHVybiBub2RlO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0Tm9kZShub2RlSWQpIHtcbiAgICByZXR1cm4gbm9kZXNbbm9kZUlkXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlbW92ZU5vZGUobm9kZUlkKSB7XG4gICAgdmFyIG5vZGUgPSBnZXROb2RlKG5vZGVJZCk7XG4gICAgaWYgKCFub2RlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgZW50ZXJNb2RpZmljYXRpb24oKTtcblxuICAgIHZhciBwcmV2TGlua3MgPSBub2RlLmxpbmtzO1xuICAgIGlmIChwcmV2TGlua3MpIHtcbiAgICAgIG5vZGUubGlua3MgPSBudWxsO1xuICAgICAgZm9yKHZhciBpID0gMDsgaSA8IHByZXZMaW5rcy5sZW5ndGg7ICsraSkge1xuICAgICAgICByZW1vdmVMaW5rKHByZXZMaW5rc1tpXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZGVsZXRlIG5vZGVzW25vZGVJZF07XG4gICAgbm9kZXNDb3VudC0tO1xuXG4gICAgcmVjb3JkTm9kZUNoYW5nZShub2RlLCAncmVtb3ZlJyk7XG5cbiAgICBleGl0TW9kaWZpY2F0aW9uKCk7XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG5cbiAgZnVuY3Rpb24gYWRkTGluayhmcm9tSWQsIHRvSWQsIGRhdGEpIHtcbiAgICBlbnRlck1vZGlmaWNhdGlvbigpO1xuXG4gICAgdmFyIGZyb21Ob2RlID0gZ2V0Tm9kZShmcm9tSWQpIHx8IGFkZE5vZGUoZnJvbUlkKTtcbiAgICB2YXIgdG9Ob2RlID0gZ2V0Tm9kZSh0b0lkKSB8fCBhZGROb2RlKHRvSWQpO1xuXG4gICAgdmFyIGxpbmsgPSBjcmVhdGVMaW5rKGZyb21JZCwgdG9JZCwgZGF0YSk7XG5cbiAgICBsaW5rcy5wdXNoKGxpbmspO1xuXG4gICAgLy8gVE9ETzogdGhpcyBpcyBub3QgY29vbC4gT24gbGFyZ2UgZ3JhcGhzIHBvdGVudGlhbGx5IHdvdWxkIGNvbnN1bWUgbW9yZSBtZW1vcnkuXG4gICAgYWRkTGlua1RvTm9kZShmcm9tTm9kZSwgbGluayk7XG4gICAgaWYgKGZyb21JZCAhPT0gdG9JZCkge1xuICAgICAgLy8gbWFrZSBzdXJlIHdlIGFyZSBub3QgZHVwbGljYXRpbmcgbGlua3MgZm9yIHNlbGYtbG9vcHNcbiAgICAgIGFkZExpbmtUb05vZGUodG9Ob2RlLCBsaW5rKTtcbiAgICB9XG5cbiAgICByZWNvcmRMaW5rQ2hhbmdlKGxpbmssICdhZGQnKTtcblxuICAgIGV4aXRNb2RpZmljYXRpb24oKTtcblxuICAgIHJldHVybiBsaW5rO1xuICB9XG5cbiAgZnVuY3Rpb24gY3JlYXRlU2luZ2xlTGluayhmcm9tSWQsIHRvSWQsIGRhdGEpIHtcbiAgICB2YXIgbGlua0lkID0gbWFrZUxpbmtJZChmcm9tSWQsIHRvSWQpO1xuICAgIHJldHVybiBuZXcgTGluayhmcm9tSWQsIHRvSWQsIGRhdGEsIGxpbmtJZCk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVVbmlxdWVMaW5rKGZyb21JZCwgdG9JZCwgZGF0YSkge1xuICAgIC8vIFRPRE86IEdldCByaWQgb2YgdGhpcyBtZXRob2QuXG4gICAgdmFyIGxpbmtJZCA9IG1ha2VMaW5rSWQoZnJvbUlkLCB0b0lkKTtcbiAgICB2YXIgaXNNdWx0aUVkZ2UgPSBtdWx0aUVkZ2VzLmhhc093blByb3BlcnR5KGxpbmtJZCk7XG4gICAgaWYgKGlzTXVsdGlFZGdlIHx8IGdldExpbmsoZnJvbUlkLCB0b0lkKSkge1xuICAgICAgaWYgKCFpc011bHRpRWRnZSkge1xuICAgICAgICBtdWx0aUVkZ2VzW2xpbmtJZF0gPSAwO1xuICAgICAgfVxuICAgICAgdmFyIHN1ZmZpeCA9ICdAJyArICgrK211bHRpRWRnZXNbbGlua0lkXSk7XG4gICAgICBsaW5rSWQgPSBtYWtlTGlua0lkKGZyb21JZCArIHN1ZmZpeCwgdG9JZCArIHN1ZmZpeCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBMaW5rKGZyb21JZCwgdG9JZCwgZGF0YSwgbGlua0lkKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldExpbmtzKG5vZGVJZCkge1xuICAgIHZhciBub2RlID0gZ2V0Tm9kZShub2RlSWQpO1xuICAgIHJldHVybiBub2RlID8gbm9kZS5saW5rcyA6IG51bGw7XG4gIH1cblxuICBmdW5jdGlvbiByZW1vdmVMaW5rKGxpbmspIHtcbiAgICBpZiAoIWxpbmspIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdmFyIGlkeCA9IGluZGV4T2ZFbGVtZW50SW5BcnJheShsaW5rLCBsaW5rcyk7XG4gICAgaWYgKGlkeCA8IDApIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBlbnRlck1vZGlmaWNhdGlvbigpO1xuXG4gICAgbGlua3Muc3BsaWNlKGlkeCwgMSk7XG5cbiAgICB2YXIgZnJvbU5vZGUgPSBnZXROb2RlKGxpbmsuZnJvbUlkKTtcbiAgICB2YXIgdG9Ob2RlID0gZ2V0Tm9kZShsaW5rLnRvSWQpO1xuXG4gICAgaWYgKGZyb21Ob2RlKSB7XG4gICAgICBpZHggPSBpbmRleE9mRWxlbWVudEluQXJyYXkobGluaywgZnJvbU5vZGUubGlua3MpO1xuICAgICAgaWYgKGlkeCA+PSAwKSB7XG4gICAgICAgIGZyb21Ob2RlLmxpbmtzLnNwbGljZShpZHgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0b05vZGUpIHtcbiAgICAgIGlkeCA9IGluZGV4T2ZFbGVtZW50SW5BcnJheShsaW5rLCB0b05vZGUubGlua3MpO1xuICAgICAgaWYgKGlkeCA+PSAwKSB7XG4gICAgICAgIHRvTm9kZS5saW5rcy5zcGxpY2UoaWR4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZWNvcmRMaW5rQ2hhbmdlKGxpbmssICdyZW1vdmUnKTtcblxuICAgIGV4aXRNb2RpZmljYXRpb24oKTtcblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0TGluayhmcm9tTm9kZUlkLCB0b05vZGVJZCkge1xuICAgIC8vIFRPRE86IFVzZSBzb3J0ZWQgbGlua3MgdG8gc3BlZWQgdGhpcyB1cFxuICAgIHZhciBub2RlID0gZ2V0Tm9kZShmcm9tTm9kZUlkKSxcbiAgICAgIGk7XG4gICAgaWYgKCFub2RlIHx8ICFub2RlLmxpbmtzKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbm9kZS5saW5rcy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGxpbmsgPSBub2RlLmxpbmtzW2ldO1xuICAgICAgaWYgKGxpbmsuZnJvbUlkID09PSBmcm9tTm9kZUlkICYmIGxpbmsudG9JZCA9PT0gdG9Ob2RlSWQpIHtcbiAgICAgICAgcmV0dXJuIGxpbms7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7IC8vIG5vIGxpbmsuXG4gIH1cblxuICBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICBlbnRlck1vZGlmaWNhdGlvbigpO1xuICAgIGZvckVhY2hOb2RlKGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIHJlbW92ZU5vZGUobm9kZS5pZCk7XG4gICAgfSk7XG4gICAgZXhpdE1vZGlmaWNhdGlvbigpO1xuICB9XG5cbiAgZnVuY3Rpb24gZm9yRWFjaExpbmsoY2FsbGJhY2spIHtcbiAgICB2YXIgaSwgbGVuZ3RoO1xuICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGZvciAoaSA9IDAsIGxlbmd0aCA9IGxpbmtzLmxlbmd0aDsgaSA8IGxlbmd0aDsgKytpKSB7XG4gICAgICAgIGNhbGxiYWNrKGxpbmtzW2ldKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBmb3JFYWNoTGlua2VkTm9kZShub2RlSWQsIGNhbGxiYWNrLCBvcmllbnRlZCkge1xuICAgIHZhciBub2RlID0gZ2V0Tm9kZShub2RlSWQpO1xuXG4gICAgaWYgKG5vZGUgJiYgbm9kZS5saW5rcyAmJiB0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGlmIChvcmllbnRlZCkge1xuICAgICAgICByZXR1cm4gZm9yRWFjaE9yaWVudGVkTGluayhub2RlLmxpbmtzLCBub2RlSWQsIGNhbGxiYWNrKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBmb3JFYWNoTm9uT3JpZW50ZWRMaW5rKG5vZGUubGlua3MsIG5vZGVJZCwgY2FsbGJhY2spO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGZvckVhY2hOb25PcmllbnRlZExpbmsobGlua3MsIG5vZGVJZCwgY2FsbGJhY2spIHtcbiAgICB2YXIgcXVpdEZhc3Q7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaW5rcy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGxpbmsgPSBsaW5rc1tpXTtcbiAgICAgIHZhciBsaW5rZWROb2RlSWQgPSBsaW5rLmZyb21JZCA9PT0gbm9kZUlkID8gbGluay50b0lkIDogbGluay5mcm9tSWQ7XG5cbiAgICAgIHF1aXRGYXN0ID0gY2FsbGJhY2sobm9kZXNbbGlua2VkTm9kZUlkXSwgbGluayk7XG4gICAgICBpZiAocXVpdEZhc3QpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7IC8vIENsaWVudCBkb2VzIG5vdCBuZWVkIG1vcmUgaXRlcmF0aW9ucy4gQnJlYWsgbm93LlxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGZvckVhY2hPcmllbnRlZExpbmsobGlua3MsIG5vZGVJZCwgY2FsbGJhY2spIHtcbiAgICB2YXIgcXVpdEZhc3Q7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaW5rcy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGxpbmsgPSBsaW5rc1tpXTtcbiAgICAgIGlmIChsaW5rLmZyb21JZCA9PT0gbm9kZUlkKSB7XG4gICAgICAgIHF1aXRGYXN0ID0gY2FsbGJhY2sobm9kZXNbbGluay50b0lkXSwgbGluayk7XG4gICAgICAgIGlmIChxdWl0RmFzdCkge1xuICAgICAgICAgIHJldHVybiB0cnVlOyAvLyBDbGllbnQgZG9lcyBub3QgbmVlZCBtb3JlIGl0ZXJhdGlvbnMuIEJyZWFrIG5vdy5cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIHdlIHdpbGwgbm90IGZpcmUgYW55dGhpbmcgdW50aWwgdXNlcnMgb2YgdGhpcyBsaWJyYXJ5IGV4cGxpY2l0bHkgY2FsbCBgb24oKWBcbiAgLy8gbWV0aG9kLlxuICBmdW5jdGlvbiBub29wKCkge31cblxuICAvLyBFbnRlciwgRXhpdCBtb2RpZmljYXRpb24gYWxsb3dzIGJ1bGsgZ3JhcGggdXBkYXRlcyB3aXRob3V0IGZpcmluZyBldmVudHMuXG4gIGZ1bmN0aW9uIGVudGVyTW9kaWZpY2F0aW9uUmVhbCgpIHtcbiAgICBzdXNwZW5kRXZlbnRzICs9IDE7XG4gIH1cblxuICBmdW5jdGlvbiBleGl0TW9kaWZpY2F0aW9uUmVhbCgpIHtcbiAgICBzdXNwZW5kRXZlbnRzIC09IDE7XG4gICAgaWYgKHN1c3BlbmRFdmVudHMgPT09IDAgJiYgY2hhbmdlcy5sZW5ndGggPiAwKSB7XG4gICAgICBncmFwaFBhcnQuZmlyZSgnY2hhbmdlZCcsIGNoYW5nZXMpO1xuICAgICAgY2hhbmdlcy5sZW5ndGggPSAwO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZU5vZGVJdGVyYXRvcigpIHtcbiAgICAvLyBPYmplY3Qua2V5cyBpdGVyYXRvciBpcyAxLjN4IGZhc3RlciB0aGFuIGBmb3IgaW5gIGxvb3AuXG4gICAgLy8gU2VlIGBodHRwczovL2dpdGh1Yi5jb20vYW52YWthL25ncmFwaC5ncmFwaC90cmVlL2JlbmNoLWZvci1pbi12cy1vYmota2V5c2BcbiAgICAvLyBicmFuY2ggZm9yIHBlcmYgdGVzdFxuICAgIHJldHVybiBPYmplY3Qua2V5cyA/IG9iamVjdEtleXNJdGVyYXRvciA6IGZvckluSXRlcmF0b3I7XG4gIH1cblxuICBmdW5jdGlvbiBvYmplY3RLZXlzSXRlcmF0b3IoY2FsbGJhY2spIHtcbiAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhub2Rlcyk7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICBpZiAoY2FsbGJhY2sobm9kZXNba2V5c1tpXV0pKSB7XG4gICAgICAgIHJldHVybiB0cnVlOyAvLyBjbGllbnQgZG9lc24ndCB3YW50IHRvIHByb2NlZWQuIFJldHVybi5cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBmb3JJbkl0ZXJhdG9yKGNhbGxiYWNrKSB7XG4gICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgbm9kZTtcblxuICAgIGZvciAobm9kZSBpbiBub2Rlcykge1xuICAgICAgaWYgKGNhbGxiYWNrKG5vZGVzW25vZGVdKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTsgLy8gY2xpZW50IGRvZXNuJ3Qgd2FudCB0byBwcm9jZWVkLiBSZXR1cm4uXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8vIG5lZWQgdGhpcyBmb3Igb2xkIGJyb3dzZXJzLiBTaG91bGQgdGhpcyBiZSBhIHNlcGFyYXRlIG1vZHVsZT9cbmZ1bmN0aW9uIGluZGV4T2ZFbGVtZW50SW5BcnJheShlbGVtZW50LCBhcnJheSkge1xuICBpZiAoIWFycmF5KSByZXR1cm4gLTE7XG5cbiAgaWYgKGFycmF5LmluZGV4T2YpIHtcbiAgICByZXR1cm4gYXJyYXkuaW5kZXhPZihlbGVtZW50KTtcbiAgfVxuXG4gIHZhciBsZW4gPSBhcnJheS5sZW5ndGgsXG4gICAgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcbiAgICBpZiAoYXJyYXlbaV0gPT09IGVsZW1lbnQpIHtcbiAgICAgIHJldHVybiBpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAtMTtcbn1cblxuLyoqXG4gKiBJbnRlcm5hbCBzdHJ1Y3R1cmUgdG8gcmVwcmVzZW50IG5vZGU7XG4gKi9cbmZ1bmN0aW9uIE5vZGUoaWQsIGRhdGEpIHtcbiAgdGhpcy5pZCA9IGlkO1xuICB0aGlzLmxpbmtzID0gbnVsbDtcbiAgdGhpcy5kYXRhID0gZGF0YTtcbn1cblxuZnVuY3Rpb24gYWRkTGlua1RvTm9kZShub2RlLCBsaW5rKSB7XG4gIGlmIChub2RlLmxpbmtzKSB7XG4gICAgbm9kZS5saW5rcy5wdXNoKGxpbmspO1xuICB9IGVsc2Uge1xuICAgIG5vZGUubGlua3MgPSBbbGlua107XG4gIH1cbn1cblxuLyoqXG4gKiBJbnRlcm5hbCBzdHJ1Y3R1cmUgdG8gcmVwcmVzZW50IGxpbmtzO1xuICovXG5mdW5jdGlvbiBMaW5rKGZyb21JZCwgdG9JZCwgZGF0YSwgaWQpIHtcbiAgdGhpcy5mcm9tSWQgPSBmcm9tSWQ7XG4gIHRoaXMudG9JZCA9IHRvSWQ7XG4gIHRoaXMuZGF0YSA9IGRhdGE7XG4gIHRoaXMuaWQgPSBpZDtcbn1cblxuZnVuY3Rpb24gaGFzaENvZGUoc3RyKSB7XG4gIHZhciBoYXNoID0gMCwgaSwgY2hyLCBsZW47XG4gIGlmIChzdHIubGVuZ3RoID09IDApIHJldHVybiBoYXNoO1xuICBmb3IgKGkgPSAwLCBsZW4gPSBzdHIubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBjaHIgICA9IHN0ci5jaGFyQ29kZUF0KGkpO1xuICAgIGhhc2ggID0gKChoYXNoIDw8IDUpIC0gaGFzaCkgKyBjaHI7XG4gICAgaGFzaCB8PSAwOyAvLyBDb252ZXJ0IHRvIDMyYml0IGludGVnZXJcbiAgfVxuICByZXR1cm4gaGFzaDtcbn1cblxuZnVuY3Rpb24gbWFrZUxpbmtJZChmcm9tSWQsIHRvSWQpIHtcbiAgcmV0dXJuIGZyb21JZC50b1N0cmluZygpICsgJ/CfkYkgJyArIHRvSWQudG9TdHJpbmcoKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/ngraph.fromjson/node_modules/ngraph.graph/index.js\n");

/***/ }),

/***/ "../node_modules/ngraph.graph/index.js":
/*!*********************************************!*\
  !*** ../node_modules/ngraph.graph/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * @fileOverview Contains definition of the core graph object.\n */\n\n// TODO: need to change storage layer:\n// 1. Be able to get all nodes O(1)\n// 2. Be able to get number of links O(1)\n\n/**\n * @example\n *  var graph = require('ngraph.graph')();\n *  graph.addNode(1);     // graph has one node.\n *  graph.addLink(2, 3);  // now graph contains three nodes and one link.\n *\n */\nmodule.exports = createGraph;\n\nvar eventify = __webpack_require__(/*! ngraph.events */ \"../node_modules/ngraph.events/index.js\");\n\n/**\n * Creates a new graph\n */\nfunction createGraph(options) {\n  // Graph structure is maintained as dictionary of nodes\n  // and array of links. Each node has 'links' property which\n  // hold all links related to that node. And general links\n  // array is used to speed up all links enumeration. This is inefficient\n  // in terms of memory, but simplifies coding.\n  options = options || {};\n  if ('uniqueLinkId' in options) {\n    console.warn(\n      'ngraph.graph: Starting from version 0.14 `uniqueLinkId` is deprecated.\\n' +\n      'Use `multigraph` option instead\\n',\n      '\\n',\n      'Note: there is also change in default behavior: From now on each graph\\n'+\n      'is considered to be not a multigraph by default (each edge is unique).'\n    );\n\n    options.multigraph = options.uniqueLinkId;\n  }\n\n  // Dear reader, the non-multigraphs do not guarantee that there is only\n  // one link for a given pair of node. When this option is set to false\n  // we can save some memory and CPU (18% faster for non-multigraph);\n  if (options.multigraph === undefined) options.multigraph = false;\n\n  var nodes = typeof Object.create === 'function' ? Object.create(null) : {},\n    links = [],\n    // Hash of multi-edges. Used to track ids of edges between same nodes\n    multiEdges = {},\n    nodesCount = 0,\n    suspendEvents = 0,\n\n    forEachNode = createNodeIterator(),\n    createLink = options.multigraph ? createUniqueLink : createSingleLink,\n\n    // Our graph API provides means to listen to graph changes. Users can subscribe\n    // to be notified about changes in the graph by using `on` method. However\n    // in some cases they don't use it. To avoid unnecessary memory consumption\n    // we will not record graph changes until we have at least one subscriber.\n    // Code below supports this optimization.\n    //\n    // Accumulates all changes made during graph updates.\n    // Each change element contains:\n    //  changeType - one of the strings: 'add', 'remove' or 'update';\n    //  node - if change is related to node this property is set to changed graph's node;\n    //  link - if change is related to link this property is set to changed graph's link;\n    changes = [],\n    recordLinkChange = noop,\n    recordNodeChange = noop,\n    enterModification = noop,\n    exitModification = noop;\n\n  // this is our public API:\n  var graphPart = {\n    /**\n     * Adds node to the graph. If node with given id already exists in the graph\n     * its data is extended with whatever comes in 'data' argument.\n     *\n     * @param nodeId the node's identifier. A string or number is preferred.\n     * @param [data] additional data for the node being added. If node already\n     *   exists its data object is augmented with the new one.\n     *\n     * @return {node} The newly added node or node with given id if it already exists.\n     */\n    addNode: addNode,\n\n    /**\n     * Adds a link to the graph. The function always create a new\n     * link between two nodes. If one of the nodes does not exists\n     * a new node is created.\n     *\n     * @param fromId link start node id;\n     * @param toId link end node id;\n     * @param [data] additional data to be set on the new link;\n     *\n     * @return {link} The newly created link\n     */\n    addLink: addLink,\n\n    /**\n     * Removes link from the graph. If link does not exist does nothing.\n     *\n     * @param link - object returned by addLink() or getLinks() methods.\n     *\n     * @returns true if link was removed; false otherwise.\n     */\n    removeLink: removeLink,\n\n    /**\n     * Removes node with given id from the graph. If node does not exist in the graph\n     * does nothing.\n     *\n     * @param nodeId node's identifier passed to addNode() function.\n     *\n     * @returns true if node was removed; false otherwise.\n     */\n    removeNode: removeNode,\n\n    /**\n     * Gets node with given identifier. If node does not exist undefined value is returned.\n     *\n     * @param nodeId requested node identifier;\n     *\n     * @return {node} in with requested identifier or undefined if no such node exists.\n     */\n    getNode: getNode,\n\n    /**\n     * Gets number of nodes in this graph.\n     *\n     * @return number of nodes in the graph.\n     */\n    getNodesCount: function () {\n      return nodesCount;\n    },\n\n    /**\n     * Gets total number of links in the graph.\n     */\n    getLinksCount: function () {\n      return links.length;\n    },\n\n    /**\n     * Gets all links (inbound and outbound) from the node with given id.\n     * If node with given id is not found null is returned.\n     *\n     * @param nodeId requested node identifier.\n     *\n     * @return Array of links from and to requested node if such node exists;\n     *   otherwise null is returned.\n     */\n    getLinks: getLinks,\n\n    /**\n     * Invokes callback on each node of the graph.\n     *\n     * @param {Function(node)} callback Function to be invoked. The function\n     *   is passed one argument: visited node.\n     */\n    forEachNode: forEachNode,\n\n    /**\n     * Invokes callback on every linked (adjacent) node to the given one.\n     *\n     * @param nodeId Identifier of the requested node.\n     * @param {Function(node, link)} callback Function to be called on all linked nodes.\n     *   The function is passed two parameters: adjacent node and link object itself.\n     * @param oriented if true graph treated as oriented.\n     */\n    forEachLinkedNode: forEachLinkedNode,\n\n    /**\n     * Enumerates all links in the graph\n     *\n     * @param {Function(link)} callback Function to be called on all links in the graph.\n     *   The function is passed one parameter: graph's link object.\n     *\n     * Link object contains at least the following fields:\n     *  fromId - node id where link starts;\n     *  toId - node id where link ends,\n     *  data - additional data passed to graph.addLink() method.\n     */\n    forEachLink: forEachLink,\n\n    /**\n     * Suspend all notifications about graph changes until\n     * endUpdate is called.\n     */\n    beginUpdate: enterModification,\n\n    /**\n     * Resumes all notifications about graph changes and fires\n     * graph 'changed' event in case there are any pending changes.\n     */\n    endUpdate: exitModification,\n\n    /**\n     * Removes all nodes and links from the graph.\n     */\n    clear: clear,\n\n    /**\n     * Detects whether there is a link between two nodes.\n     * Operation complexity is O(n) where n - number of links of a node.\n     * NOTE: this function is synonim for getLink()\n     *\n     * @returns link if there is one. null otherwise.\n     */\n    hasLink: getLink,\n\n    /**\n     * Detects whether there is a node with given id\n     * \n     * Operation complexity is O(1)\n     * NOTE: this function is synonim for getNode()\n     *\n     * @returns node if there is one; Falsy value otherwise.\n     */\n    hasNode: getNode,\n\n    /**\n     * Gets an edge between two nodes.\n     * Operation complexity is O(n) where n - number of links of a node.\n     *\n     * @param {string} fromId link start identifier\n     * @param {string} toId link end identifier\n     *\n     * @returns link if there is one. null otherwise.\n     */\n    getLink: getLink\n  };\n\n  // this will add `on()` and `fire()` methods.\n  eventify(graphPart);\n\n  monitorSubscribers();\n\n  return graphPart;\n\n  function monitorSubscribers() {\n    var realOn = graphPart.on;\n\n    // replace real `on` with our temporary on, which will trigger change\n    // modification monitoring:\n    graphPart.on = on;\n\n    function on() {\n      // now it's time to start tracking stuff:\n      graphPart.beginUpdate = enterModification = enterModificationReal;\n      graphPart.endUpdate = exitModification = exitModificationReal;\n      recordLinkChange = recordLinkChangeReal;\n      recordNodeChange = recordNodeChangeReal;\n\n      // this will replace current `on` method with real pub/sub from `eventify`.\n      graphPart.on = realOn;\n      // delegate to real `on` handler:\n      return realOn.apply(graphPart, arguments);\n    }\n  }\n\n  function recordLinkChangeReal(link, changeType) {\n    changes.push({\n      link: link,\n      changeType: changeType\n    });\n  }\n\n  function recordNodeChangeReal(node, changeType) {\n    changes.push({\n      node: node,\n      changeType: changeType\n    });\n  }\n\n  function addNode(nodeId, data) {\n    if (nodeId === undefined) {\n      throw new Error('Invalid node identifier');\n    }\n\n    enterModification();\n\n    var node = getNode(nodeId);\n    if (!node) {\n      node = new Node(nodeId, data);\n      nodesCount++;\n      recordNodeChange(node, 'add');\n    } else {\n      node.data = data;\n      recordNodeChange(node, 'update');\n    }\n\n    nodes[nodeId] = node;\n\n    exitModification();\n    return node;\n  }\n\n  function getNode(nodeId) {\n    return nodes[nodeId];\n  }\n\n  function removeNode(nodeId) {\n    var node = getNode(nodeId);\n    if (!node) {\n      return false;\n    }\n\n    enterModification();\n\n    var prevLinks = node.links;\n    if (prevLinks) {\n      node.links = null;\n      for(var i = 0; i < prevLinks.length; ++i) {\n        removeLink(prevLinks[i]);\n      }\n    }\n\n    delete nodes[nodeId];\n    nodesCount--;\n\n    recordNodeChange(node, 'remove');\n\n    exitModification();\n\n    return true;\n  }\n\n\n  function addLink(fromId, toId, data) {\n    enterModification();\n\n    var fromNode = getNode(fromId) || addNode(fromId);\n    var toNode = getNode(toId) || addNode(toId);\n\n    var link = createLink(fromId, toId, data);\n\n    links.push(link);\n\n    // TODO: this is not cool. On large graphs potentially would consume more memory.\n    addLinkToNode(fromNode, link);\n    if (fromId !== toId) {\n      // make sure we are not duplicating links for self-loops\n      addLinkToNode(toNode, link);\n    }\n\n    recordLinkChange(link, 'add');\n\n    exitModification();\n\n    return link;\n  }\n\n  function createSingleLink(fromId, toId, data) {\n    var linkId = makeLinkId(fromId, toId);\n    return new Link(fromId, toId, data, linkId);\n  }\n\n  function createUniqueLink(fromId, toId, data) {\n    // TODO: Get rid of this method.\n    var linkId = makeLinkId(fromId, toId);\n    var isMultiEdge = multiEdges.hasOwnProperty(linkId);\n    if (isMultiEdge || getLink(fromId, toId)) {\n      if (!isMultiEdge) {\n        multiEdges[linkId] = 0;\n      }\n      var suffix = '@' + (++multiEdges[linkId]);\n      linkId = makeLinkId(fromId + suffix, toId + suffix);\n    }\n\n    return new Link(fromId, toId, data, linkId);\n  }\n\n  function getLinks(nodeId) {\n    var node = getNode(nodeId);\n    return node ? node.links : null;\n  }\n\n  function removeLink(link) {\n    if (!link) {\n      return false;\n    }\n    var idx = indexOfElementInArray(link, links);\n    if (idx < 0) {\n      return false;\n    }\n\n    enterModification();\n\n    links.splice(idx, 1);\n\n    var fromNode = getNode(link.fromId);\n    var toNode = getNode(link.toId);\n\n    if (fromNode) {\n      idx = indexOfElementInArray(link, fromNode.links);\n      if (idx >= 0) {\n        fromNode.links.splice(idx, 1);\n      }\n    }\n\n    if (toNode) {\n      idx = indexOfElementInArray(link, toNode.links);\n      if (idx >= 0) {\n        toNode.links.splice(idx, 1);\n      }\n    }\n\n    recordLinkChange(link, 'remove');\n\n    exitModification();\n\n    return true;\n  }\n\n  function getLink(fromNodeId, toNodeId) {\n    // TODO: Use sorted links to speed this up\n    var node = getNode(fromNodeId),\n      i;\n    if (!node || !node.links) {\n      return null;\n    }\n\n    for (i = 0; i < node.links.length; ++i) {\n      var link = node.links[i];\n      if (link.fromId === fromNodeId && link.toId === toNodeId) {\n        return link;\n      }\n    }\n\n    return null; // no link.\n  }\n\n  function clear() {\n    enterModification();\n    forEachNode(function(node) {\n      removeNode(node.id);\n    });\n    exitModification();\n  }\n\n  function forEachLink(callback) {\n    var i, length;\n    if (typeof callback === 'function') {\n      for (i = 0, length = links.length; i < length; ++i) {\n        callback(links[i]);\n      }\n    }\n  }\n\n  function forEachLinkedNode(nodeId, callback, oriented) {\n    var node = getNode(nodeId);\n\n    if (node && node.links && typeof callback === 'function') {\n      if (oriented) {\n        return forEachOrientedLink(node.links, nodeId, callback);\n      } else {\n        return forEachNonOrientedLink(node.links, nodeId, callback);\n      }\n    }\n  }\n\n  function forEachNonOrientedLink(links, nodeId, callback) {\n    var quitFast;\n    for (var i = 0; i < links.length; ++i) {\n      var link = links[i];\n      var linkedNodeId = link.fromId === nodeId ? link.toId : link.fromId;\n\n      quitFast = callback(nodes[linkedNodeId], link);\n      if (quitFast) {\n        return true; // Client does not need more iterations. Break now.\n      }\n    }\n  }\n\n  function forEachOrientedLink(links, nodeId, callback) {\n    var quitFast;\n    for (var i = 0; i < links.length; ++i) {\n      var link = links[i];\n      if (link.fromId === nodeId) {\n        quitFast = callback(nodes[link.toId], link);\n        if (quitFast) {\n          return true; // Client does not need more iterations. Break now.\n        }\n      }\n    }\n  }\n\n  // we will not fire anything until users of this library explicitly call `on()`\n  // method.\n  function noop() {}\n\n  // Enter, Exit modification allows bulk graph updates without firing events.\n  function enterModificationReal() {\n    suspendEvents += 1;\n  }\n\n  function exitModificationReal() {\n    suspendEvents -= 1;\n    if (suspendEvents === 0 && changes.length > 0) {\n      graphPart.fire('changed', changes);\n      changes.length = 0;\n    }\n  }\n\n  function createNodeIterator() {\n    // Object.keys iterator is 1.3x faster than `for in` loop.\n    // See `https://github.com/anvaka/ngraph.graph/tree/bench-for-in-vs-obj-keys`\n    // branch for perf test\n    return Object.keys ? objectKeysIterator : forInIterator;\n  }\n\n  function objectKeysIterator(callback) {\n    if (typeof callback !== 'function') {\n      return;\n    }\n\n    var keys = Object.keys(nodes);\n    for (var i = 0; i < keys.length; ++i) {\n      if (callback(nodes[keys[i]])) {\n        return true; // client doesn't want to proceed. Return.\n      }\n    }\n  }\n\n  function forInIterator(callback) {\n    if (typeof callback !== 'function') {\n      return;\n    }\n    var node;\n\n    for (node in nodes) {\n      if (callback(nodes[node])) {\n        return true; // client doesn't want to proceed. Return.\n      }\n    }\n  }\n}\n\n// need this for old browsers. Should this be a separate module?\nfunction indexOfElementInArray(element, array) {\n  if (!array) return -1;\n\n  if (array.indexOf) {\n    return array.indexOf(element);\n  }\n\n  var len = array.length,\n    i;\n\n  for (i = 0; i < len; i += 1) {\n    if (array[i] === element) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Internal structure to represent node;\n */\nfunction Node(id, data) {\n  this.id = id;\n  this.links = null;\n  this.data = data;\n}\n\nfunction addLinkToNode(node, link) {\n  if (node.links) {\n    node.links.push(link);\n  } else {\n    node.links = [link];\n  }\n}\n\n/**\n * Internal structure to represent links;\n */\nfunction Link(fromId, toId, data, id) {\n  this.fromId = fromId;\n  this.toId = toId;\n  this.data = data;\n  this.id = id;\n}\n\nfunction hashCode(str) {\n  var hash = 0, i, chr, len;\n  if (str.length == 0) return hash;\n  for (i = 0, len = str.length; i < len; i++) {\n    chr   = str.charCodeAt(i);\n    hash  = ((hash << 5) - hash) + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nfunction makeLinkId(fromId, toId) {\n  return fromId.toString() + '👉 ' + toId.toString();\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/ngraph.graph/index.js\n");

/***/ }),

/***/ "../node_modules/ngraph.path/a-star/NodeHeap.js":
/*!******************************************************!*\
  !*** ../node_modules/ngraph.path/a-star/NodeHeap.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Based on https://github.com/mourner/tinyqueue\n * Copyright (c) 2017, Vladimir Agafonkin https://github.com/mourner/tinyqueue/blob/master/LICENSE\n * \n * Adapted for PathFinding needs by @anvaka\n * Copyright (c) 2017, Andrei Kashcha\n */\nmodule.exports = NodeHeap;\n\nfunction NodeHeap(data, options) {\n  if (!(this instanceof NodeHeap)) return new NodeHeap(data, options);\n\n  if (!Array.isArray(data)) {\n    // assume first argument is our config object;\n    options = data;\n    data = [];\n  }\n\n  options = options || {};\n\n  this.data = data || [];\n  this.length = this.data.length;\n  this.compare = options.compare || defaultCompare;\n  this.setNodeId = options.setNodeId || noop;\n\n  if (this.length > 0) {\n    for (var i = (this.length >> 1); i >= 0; i--) this._down(i);\n  }\n\n  if (options.setNodeId) {\n    for (var i = 0; i < this.length; ++i) {\n      this.setNodeId(this.data[i], i);\n    }\n  }\n}\n\nfunction noop() {}\n\nfunction defaultCompare(a, b) {\n  return a - b;\n}\n\nNodeHeap.prototype = {\n\n  push: function (item) {\n    this.data.push(item);\n    this.setNodeId(item, this.length);\n    this.length++;\n    this._up(this.length - 1);\n  },\n\n  pop: function () {\n    if (this.length === 0) return undefined;\n\n    var top = this.data[0];\n    this.length--;\n\n    if (this.length > 0) {\n      this.data[0] = this.data[this.length];\n      this.setNodeId(this.data[0], 0);\n      this._down(0);\n    }\n    this.data.pop();\n\n    return top;\n  },\n\n  peek: function () {\n    return this.data[0];\n  },\n\n  updateItem: function (pos) {\n    this._down(pos);\n    this._up(pos);\n  },\n\n  _up: function (pos) {\n    var data = this.data;\n    var compare = this.compare;\n    var setNodeId = this.setNodeId;\n    var item = data[pos];\n\n    while (pos > 0) {\n      var parent = (pos - 1) >> 1;\n      var current = data[parent];\n      if (compare(item, current) >= 0) break;\n        data[pos] = current;\n\n       setNodeId(current, pos);\n       pos = parent;\n    }\n\n    data[pos] = item;\n    setNodeId(item, pos);\n  },\n\n  _down: function (pos) {\n    var data = this.data;\n    var compare = this.compare;\n    var halfLength = this.length >> 1;\n    var item = data[pos];\n    var setNodeId = this.setNodeId;\n\n    while (pos < halfLength) {\n      var left = (pos << 1) + 1;\n      var right = left + 1;\n      var best = data[left];\n\n      if (right < this.length && compare(data[right], best) < 0) {\n        left = right;\n        best = data[right];\n      }\n      if (compare(best, item) >= 0) break;\n\n      data[pos] = best;\n      setNodeId(best, pos);\n      pos = left;\n    }\n\n    data[pos] = item;\n    setNodeId(item, pos);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL25ncmFwaC5wYXRoL2Etc3Rhci9Ob2RlSGVhcC5qcz82MTMyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0NBQW9DLFFBQVE7QUFDNUM7O0FBRUE7QUFDQSxtQkFBbUIsaUJBQWlCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL25ncmFwaC5wYXRoL2Etc3Rhci9Ob2RlSGVhcC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL21vdXJuZXIvdGlueXF1ZXVlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcsIFZsYWRpbWlyIEFnYWZvbmtpbiBodHRwczovL2dpdGh1Yi5jb20vbW91cm5lci90aW55cXVldWUvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICogXG4gKiBBZGFwdGVkIGZvciBQYXRoRmluZGluZyBuZWVkcyBieSBAYW52YWthXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcsIEFuZHJlaSBLYXNoY2hhXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gTm9kZUhlYXA7XG5cbmZ1bmN0aW9uIE5vZGVIZWFwKGRhdGEsIG9wdGlvbnMpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIE5vZGVIZWFwKSkgcmV0dXJuIG5ldyBOb2RlSGVhcChkYXRhLCBvcHRpb25zKTtcblxuICBpZiAoIUFycmF5LmlzQXJyYXkoZGF0YSkpIHtcbiAgICAvLyBhc3N1bWUgZmlyc3QgYXJndW1lbnQgaXMgb3VyIGNvbmZpZyBvYmplY3Q7XG4gICAgb3B0aW9ucyA9IGRhdGE7XG4gICAgZGF0YSA9IFtdO1xuICB9XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cbiAgdGhpcy5kYXRhID0gZGF0YSB8fCBbXTtcbiAgdGhpcy5sZW5ndGggPSB0aGlzLmRhdGEubGVuZ3RoO1xuICB0aGlzLmNvbXBhcmUgPSBvcHRpb25zLmNvbXBhcmUgfHwgZGVmYXVsdENvbXBhcmU7XG4gIHRoaXMuc2V0Tm9kZUlkID0gb3B0aW9ucy5zZXROb2RlSWQgfHwgbm9vcDtcblxuICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgZm9yICh2YXIgaSA9ICh0aGlzLmxlbmd0aCA+PiAxKTsgaSA+PSAwOyBpLS0pIHRoaXMuX2Rvd24oaSk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5zZXROb2RlSWQpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHRoaXMuc2V0Tm9kZUlkKHRoaXMuZGF0YVtpXSwgaSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5mdW5jdGlvbiBkZWZhdWx0Q29tcGFyZShhLCBiKSB7XG4gIHJldHVybiBhIC0gYjtcbn1cblxuTm9kZUhlYXAucHJvdG90eXBlID0ge1xuXG4gIHB1c2g6IGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgdGhpcy5kYXRhLnB1c2goaXRlbSk7XG4gICAgdGhpcy5zZXROb2RlSWQoaXRlbSwgdGhpcy5sZW5ndGgpO1xuICAgIHRoaXMubGVuZ3RoKys7XG4gICAgdGhpcy5fdXAodGhpcy5sZW5ndGggLSAxKTtcbiAgfSxcblxuICBwb3A6IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHJldHVybiB1bmRlZmluZWQ7XG5cbiAgICB2YXIgdG9wID0gdGhpcy5kYXRhWzBdO1xuICAgIHRoaXMubGVuZ3RoLS07XG5cbiAgICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLmRhdGFbMF0gPSB0aGlzLmRhdGFbdGhpcy5sZW5ndGhdO1xuICAgICAgdGhpcy5zZXROb2RlSWQodGhpcy5kYXRhWzBdLCAwKTtcbiAgICAgIHRoaXMuX2Rvd24oMCk7XG4gICAgfVxuICAgIHRoaXMuZGF0YS5wb3AoKTtcblxuICAgIHJldHVybiB0b3A7XG4gIH0sXG5cbiAgcGVlazogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLmRhdGFbMF07XG4gIH0sXG5cbiAgdXBkYXRlSXRlbTogZnVuY3Rpb24gKHBvcykge1xuICAgIHRoaXMuX2Rvd24ocG9zKTtcbiAgICB0aGlzLl91cChwb3MpO1xuICB9LFxuXG4gIF91cDogZnVuY3Rpb24gKHBvcykge1xuICAgIHZhciBkYXRhID0gdGhpcy5kYXRhO1xuICAgIHZhciBjb21wYXJlID0gdGhpcy5jb21wYXJlO1xuICAgIHZhciBzZXROb2RlSWQgPSB0aGlzLnNldE5vZGVJZDtcbiAgICB2YXIgaXRlbSA9IGRhdGFbcG9zXTtcblxuICAgIHdoaWxlIChwb3MgPiAwKSB7XG4gICAgICB2YXIgcGFyZW50ID0gKHBvcyAtIDEpID4+IDE7XG4gICAgICB2YXIgY3VycmVudCA9IGRhdGFbcGFyZW50XTtcbiAgICAgIGlmIChjb21wYXJlKGl0ZW0sIGN1cnJlbnQpID49IDApIGJyZWFrO1xuICAgICAgICBkYXRhW3Bvc10gPSBjdXJyZW50O1xuXG4gICAgICAgc2V0Tm9kZUlkKGN1cnJlbnQsIHBvcyk7XG4gICAgICAgcG9zID0gcGFyZW50O1xuICAgIH1cblxuICAgIGRhdGFbcG9zXSA9IGl0ZW07XG4gICAgc2V0Tm9kZUlkKGl0ZW0sIHBvcyk7XG4gIH0sXG5cbiAgX2Rvd246IGZ1bmN0aW9uIChwb3MpIHtcbiAgICB2YXIgZGF0YSA9IHRoaXMuZGF0YTtcbiAgICB2YXIgY29tcGFyZSA9IHRoaXMuY29tcGFyZTtcbiAgICB2YXIgaGFsZkxlbmd0aCA9IHRoaXMubGVuZ3RoID4+IDE7XG4gICAgdmFyIGl0ZW0gPSBkYXRhW3Bvc107XG4gICAgdmFyIHNldE5vZGVJZCA9IHRoaXMuc2V0Tm9kZUlkO1xuXG4gICAgd2hpbGUgKHBvcyA8IGhhbGZMZW5ndGgpIHtcbiAgICAgIHZhciBsZWZ0ID0gKHBvcyA8PCAxKSArIDE7XG4gICAgICB2YXIgcmlnaHQgPSBsZWZ0ICsgMTtcbiAgICAgIHZhciBiZXN0ID0gZGF0YVtsZWZ0XTtcblxuICAgICAgaWYgKHJpZ2h0IDwgdGhpcy5sZW5ndGggJiYgY29tcGFyZShkYXRhW3JpZ2h0XSwgYmVzdCkgPCAwKSB7XG4gICAgICAgIGxlZnQgPSByaWdodDtcbiAgICAgICAgYmVzdCA9IGRhdGFbcmlnaHRdO1xuICAgICAgfVxuICAgICAgaWYgKGNvbXBhcmUoYmVzdCwgaXRlbSkgPj0gMCkgYnJlYWs7XG5cbiAgICAgIGRhdGFbcG9zXSA9IGJlc3Q7XG4gICAgICBzZXROb2RlSWQoYmVzdCwgcG9zKTtcbiAgICAgIHBvcyA9IGxlZnQ7XG4gICAgfVxuXG4gICAgZGF0YVtwb3NdID0gaXRlbTtcbiAgICBzZXROb2RlSWQoaXRlbSwgcG9zKTtcbiAgfVxufTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/ngraph.path/a-star/NodeHeap.js\n");

/***/ }),

/***/ "../node_modules/ngraph.path/a-star/a-greedy-star.js":
/*!***********************************************************!*\
  !*** ../node_modules/ngraph.path/a-star/a-greedy-star.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Performs suboptimal, greed A Star path finding.\n * This finder does not necessary finds the shortest path. The path\n * that it finds is very close to the shortest one. It is very fast though.\n */\nmodule.exports = aStarBi;\n\nvar NodeHeap = __webpack_require__(/*! ./NodeHeap */ \"../node_modules/ngraph.path/a-star/NodeHeap.js\");\nvar makeSearchStatePool = __webpack_require__(/*! ./makeSearchStatePool */ \"../node_modules/ngraph.path/a-star/makeSearchStatePool.js\");\nvar heuristics = __webpack_require__(/*! ./heuristics */ \"../node_modules/ngraph.path/a-star/heuristics.js\");\nvar defaultSettings = __webpack_require__(/*! ./defaultSettings */ \"../node_modules/ngraph.path/a-star/defaultSettings.js\");\n\nvar BY_FROM = 1;\nvar BY_TO = 2;\nvar NO_PATH = defaultSettings.NO_PATH;\n\nmodule.exports.l2 = heuristics.l2;\nmodule.exports.l1 = heuristics.l1;\n\n/**\n * Creates a new instance of pathfinder. A pathfinder has just one method:\n * `find(fromId, toId)`, it may be extended in future.\n * \n * NOTE: Algorithm implemented in this code DOES NOT find optimal path.\n * Yet the path that it finds is always near optimal, and it finds it very fast.\n * \n * @param {ngraph.graph} graph instance. See https://github.com/anvaka/ngraph.graph\n * \n * @param {Object} options that configures search\n * @param {Function(a, b)} options.heuristic - a function that returns estimated distance between\n * nodes `a` and `b`.  Defaults function returns 0, which makes this search equivalent to Dijkstra search.\n * @param {Function(a, b)} options.distance - a function that returns actual distance between two\n * nodes `a` and `b`. By default this is set to return graph-theoretical distance (always 1);\n * @param {Boolean} options.oriented - whether graph should be considered oriented or not.\n * \n * @returns {Object} A pathfinder with single method `find()`.\n */\nfunction aStarBi(graph, options) {\n  options = options || {};\n  // whether traversal should be considered over oriented graph.\n  var oriented = options.oriented;\n\n  var heuristic = options.heuristic;\n  if (!heuristic) heuristic = defaultSettings.heuristic;\n\n  var distance = options.distance;\n  if (!distance) distance = defaultSettings.distance;\n  var pool = makeSearchStatePool();\n\n  return {\n    find: find\n  };\n\n  function find(fromId, toId) {\n    // Not sure if we should return NO_PATH or throw. Throw seem to be more\n    // helpful to debug errors. So, throwing.\n    var from = graph.getNode(fromId);\n    if (!from) throw new Error('fromId is not defined in this graph: ' + fromId);\n    var to = graph.getNode(toId);\n    if (!to) throw new Error('toId is not defined in this graph: ' + toId);\n\n    if (from === to) return [from]; // trivial case.\n\n    pool.reset();\n\n    var callVisitor = oriented ? orientedVisitor : nonOrientedVisitor;\n\n    // Maps nodeId to NodeSearchState.\n    var nodeState = new Map();\n\n    var openSetFrom = new NodeHeap({\n      compare: defaultSettings.compareFScore,\n      setNodeId: defaultSettings.setHeapIndex\n    });\n\n    var openSetTo = new NodeHeap({\n      compare: defaultSettings.compareFScore,\n      setNodeId: defaultSettings.setHeapIndex\n    });\n\n\n    var startNode = pool.createNewState(from);\n    nodeState.set(fromId, startNode);\n\n    // For the first node, fScore is completely heuristic.\n    startNode.fScore = heuristic(from, to);\n    // The cost of going from start to start is zero.\n    startNode.distanceToSource = 0;\n    openSetFrom.push(startNode);\n    startNode.open = BY_FROM;\n\n    var endNode = pool.createNewState(to);\n    endNode.fScore = heuristic(to, from);\n    endNode.distanceToSource = 0;\n    openSetTo.push(endNode);\n    endNode.open = BY_TO;\n\n    // Cost of the best solution found so far. Used for accurate termination\n    var lMin = Number.POSITIVE_INFINITY;\n    var minFrom;\n    var minTo;\n\n    var currentSet = openSetFrom;\n    var currentOpener = BY_FROM;\n\n    while (openSetFrom.length > 0 && openSetTo.length > 0) {\n      if (openSetFrom.length < openSetTo.length) {\n        // we pick a set with less elements\n        currentOpener = BY_FROM;\n        currentSet = openSetFrom;\n      } else {\n        currentOpener = BY_TO;\n        currentSet = openSetTo;\n      }\n\n      var current = currentSet.pop();\n\n      // no need to visit this node anymore\n      current.closed = true;\n\n      if (current.distanceToSource > lMin) continue;\n\n      graph.forEachLinkedNode(current.node.id, callVisitor);\n\n      if (minFrom && minTo) {\n        // This is not necessary the best path, but we are so greedy that we\n        // can't resist:\n        return reconstructBiDirectionalPath(minFrom, minTo);\n      }\n    }\n\n    return NO_PATH; // No path.\n\n    function nonOrientedVisitor(otherNode, link) {\n      return visitNode(otherNode, link, current);\n    }\n\n    function orientedVisitor(otherNode, link) {\n      // For oritned graphs we need to reverse graph, when traveling\n      // backwards. So, we use non-oriented ngraph's traversal, and \n      // filter link orientation here.\n      if (currentOpener === BY_FROM) {\n        if (link.fromId === current.node.id) return visitNode(otherNode, link, current)\n      } else if (currentOpener === BY_TO) {\n        if (link.toId === current.node.id) return visitNode(otherNode, link, current);\n      }\n    }\n\n    function canExit(currentNode) {\n      var opener = currentNode.open\n      if (opener && opener !== currentOpener) {\n        return true;\n      }\n\n      return false;\n    }\n\n    function reconstructBiDirectionalPath(a, b) {\n      var pathOfNodes = [];\n      var aParent = a;\n      while(aParent) {\n        pathOfNodes.push(aParent.node);\n        aParent = aParent.parent;\n      }\n      var bParent = b;\n      while (bParent) {\n        pathOfNodes.unshift(bParent.node);\n        bParent = bParent.parent\n      }\n      return pathOfNodes;\n    }\n\n    function visitNode(otherNode, link, cameFrom) {\n      var otherSearchState = nodeState.get(otherNode.id);\n      if (!otherSearchState) {\n        otherSearchState = pool.createNewState(otherNode);\n        nodeState.set(otherNode.id, otherSearchState);\n      }\n\n      if (otherSearchState.closed) {\n        // Already processed this node.\n        return;\n      }\n\n      if (canExit(otherSearchState, cameFrom)) {\n        // this node was opened by alternative opener. The sets intersect now,\n        // we found an optimal path, that goes through *this* node. However, there\n        // is no guarantee that this is the global optimal solution path.\n\n        var potentialLMin = otherSearchState.distanceToSource + cameFrom.distanceToSource;\n        if (potentialLMin < lMin) {\n          minFrom = otherSearchState;\n          minTo = cameFrom\n          lMin = potentialLMin;\n        }\n        // we are done with this node.\n        return;\n      }\n\n      var tentativeDistance = cameFrom.distanceToSource + distance(otherSearchState.node, cameFrom.node, link);\n\n      if (tentativeDistance >= otherSearchState.distanceToSource) {\n        // This would only make our path longer. Ignore this route.\n        return;\n      }\n\n      // Choose target based on current working set:\n      var target = (currentOpener === BY_FROM) ? to : from;\n      var newFScore = tentativeDistance + heuristic(otherSearchState.node, target);\n      if (newFScore >= lMin) {\n        // this can't be optimal path, as we have already found a shorter path.\n        return;\n      }\n      otherSearchState.fScore = newFScore;\n\n      if (otherSearchState.open === 0) {\n        // Remember this node in the current set\n        currentSet.push(otherSearchState);\n        currentSet.updateItem(otherSearchState.heapIndex);\n\n        otherSearchState.open = currentOpener;\n      }\n\n      // bingo! we found shorter path:\n      otherSearchState.parent = cameFrom;\n      otherSearchState.distanceToSource = tentativeDistance;\n    }\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/ngraph.path/a-star/a-greedy-star.js\n");

/***/ }),

/***/ "../node_modules/ngraph.path/a-star/a-star.js":
/*!****************************************************!*\
  !*** ../node_modules/ngraph.path/a-star/a-star.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Performs a uni-directional A Star search on graph.\n * \n * We will try to minimize f(n) = g(n) + h(n), where\n * g(n) is actual distance from source node to `n`, and\n * h(n) is heuristic distance from `n` to target node.\n */\nmodule.exports = aStarPathSearch;\n\nvar NodeHeap = __webpack_require__(/*! ./NodeHeap */ \"../node_modules/ngraph.path/a-star/NodeHeap.js\");\nvar makeSearchStatePool = __webpack_require__(/*! ./makeSearchStatePool */ \"../node_modules/ngraph.path/a-star/makeSearchStatePool.js\");\nvar heuristics = __webpack_require__(/*! ./heuristics */ \"../node_modules/ngraph.path/a-star/heuristics.js\");\nvar defaultSettings = __webpack_require__(/*! ./defaultSettings.js */ \"../node_modules/ngraph.path/a-star/defaultSettings.js\");\n\nvar NO_PATH = defaultSettings.NO_PATH;\n\nmodule.exports.l2 = heuristics.l2;\nmodule.exports.l1 = heuristics.l1;\n\n/**\n * Creates a new instance of pathfinder. A pathfinder has just one method:\n * `find(fromId, toId)`, it may be extended in future.\n * \n * @param {ngraph.graph} graph instance. See https://github.com/anvaka/ngraph.graph\n * @param {Object} options that configures search\n * @param {Function(a, b)} options.heuristic - a function that returns estimated distance between\n * nodes `a` and `b`. This function should never overestimate actual distance between two\n * nodes (otherwise the found path will not be the shortest). Defaults function returns 0,\n * which makes this search equivalent to Dijkstra search.\n * @param {Function(a, b)} options.distance - a function that returns actual distance between two\n * nodes `a` and `b`. By default this is set to return graph-theoretical distance (always 1);\n * @param {Boolean} options.oriented - whether graph should be considered oriented or not.\n * \n * @returns {Object} A pathfinder with single method `find()`.\n */\nfunction aStarPathSearch(graph, options) {\n  options = options || {};\n  // whether traversal should be considered over oriented graph.\n  var oriented = options.oriented;\n\n  var heuristic = options.heuristic;\n  if (!heuristic) heuristic = defaultSettings.heuristic;\n\n  var distance = options.distance;\n  if (!distance) distance = defaultSettings.distance;\n  var pool = makeSearchStatePool();\n\n  return {\n    /**\n     * Finds a path between node `fromId` and `toId`.\n     * @returns {Array} of nodes between `toId` and `fromId`. Empty array is returned\n     * if no path is found.\n     */\n    find: find\n  };\n\n  function find(fromId, toId) {\n    var from = graph.getNode(fromId);\n    if (!from) throw new Error('fromId is not defined in this graph: ' + fromId);\n    var to = graph.getNode(toId);\n    if (!to) throw new Error('toId is not defined in this graph: ' + toId);\n    pool.reset();\n\n    // Maps nodeId to NodeSearchState.\n    var nodeState = new Map();\n\n    // the nodes that we still need to evaluate\n    var openSet = new NodeHeap({\n      compare: defaultSettings.compareFScore,\n      setNodeId: defaultSettings.setHeapIndex\n    });\n\n    var startNode = pool.createNewState(from);\n    nodeState.set(fromId, startNode);\n\n    // For the first node, fScore is completely heuristic.\n    startNode.fScore = heuristic(from, to);\n\n    // The cost of going from start to start is zero.\n    startNode.distanceToSource = 0;\n    openSet.push(startNode);\n    startNode.open = 1;\n\n    var cameFrom;\n\n    while (openSet.length > 0) {\n      cameFrom = openSet.pop();\n      if (goalReached(cameFrom, to)) return reconstructPath(cameFrom);\n\n      // no need to visit this node anymore\n      cameFrom.closed = true;\n      graph.forEachLinkedNode(cameFrom.node.id, visitNeighbour, oriented);\n    }\n\n    // If we got here, then there is no path.\n    return NO_PATH;\n\n    function visitNeighbour(otherNode, link) {\n      var otherSearchState = nodeState.get(otherNode.id);\n      if (!otherSearchState) {\n        otherSearchState = pool.createNewState(otherNode);\n        nodeState.set(otherNode.id, otherSearchState);\n      }\n\n      if (otherSearchState.closed) {\n        // Already processed this node.\n        return;\n      }\n      if (otherSearchState.open === 0) {\n        // Remember this node.\n        openSet.push(otherSearchState);\n        otherSearchState.open = 1;\n      }\n\n      var tentativeDistance = cameFrom.distanceToSource + distance(otherNode, cameFrom.node, link);\n      if (tentativeDistance >= otherSearchState.distanceToSource) {\n        // This would only make our path longer. Ignore this route.\n        return;\n      }\n\n      // bingo! we found shorter path:\n      otherSearchState.parent = cameFrom;\n      otherSearchState.distanceToSource = tentativeDistance;\n      otherSearchState.fScore = tentativeDistance + heuristic(otherSearchState.node, to);\n\n      openSet.updateItem(otherSearchState.heapIndex);\n    }\n  }\n}\n\nfunction goalReached(searchState, targetNode) {\n  return searchState.node === targetNode;\n}\n\nfunction reconstructPath(searchState) {\n  var path = [searchState.node];\n  var parent = searchState.parent;\n\n  while (parent) {\n    path.push(parent.node);\n    parent = parent.parent;\n  }\n\n  return path;\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL25ncmFwaC5wYXRoL2Etc3Rhci9hLXN0YXIuanM/NWNlOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGVBQWUsbUJBQU8sQ0FBQyxrRUFBWTtBQUNuQywwQkFBMEIsbUJBQU8sQ0FBQyx3RkFBdUI7QUFDekQsaUJBQWlCLG1CQUFPLENBQUMsc0VBQWM7QUFDdkMsc0JBQXNCLG1CQUFPLENBQUMsbUZBQXNCOztBQUVwRDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxhQUFhO0FBQ3hCLFdBQVcsT0FBTztBQUNsQixXQUFXLGVBQWU7QUFDMUI7QUFDQTtBQUNBO0FBQ0EsV0FBVyxlQUFlO0FBQzFCO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLE1BQU07QUFDdkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9uZ3JhcGgucGF0aC9hLXN0YXIvYS1zdGFyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQZXJmb3JtcyBhIHVuaS1kaXJlY3Rpb25hbCBBIFN0YXIgc2VhcmNoIG9uIGdyYXBoLlxuICogXG4gKiBXZSB3aWxsIHRyeSB0byBtaW5pbWl6ZSBmKG4pID0gZyhuKSArIGgobiksIHdoZXJlXG4gKiBnKG4pIGlzIGFjdHVhbCBkaXN0YW5jZSBmcm9tIHNvdXJjZSBub2RlIHRvIGBuYCwgYW5kXG4gKiBoKG4pIGlzIGhldXJpc3RpYyBkaXN0YW5jZSBmcm9tIGBuYCB0byB0YXJnZXQgbm9kZS5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBhU3RhclBhdGhTZWFyY2g7XG5cbnZhciBOb2RlSGVhcCA9IHJlcXVpcmUoJy4vTm9kZUhlYXAnKTtcbnZhciBtYWtlU2VhcmNoU3RhdGVQb29sID0gcmVxdWlyZSgnLi9tYWtlU2VhcmNoU3RhdGVQb29sJyk7XG52YXIgaGV1cmlzdGljcyA9IHJlcXVpcmUoJy4vaGV1cmlzdGljcycpO1xudmFyIGRlZmF1bHRTZXR0aW5ncyA9IHJlcXVpcmUoJy4vZGVmYXVsdFNldHRpbmdzLmpzJyk7XG5cbnZhciBOT19QQVRIID0gZGVmYXVsdFNldHRpbmdzLk5PX1BBVEg7XG5cbm1vZHVsZS5leHBvcnRzLmwyID0gaGV1cmlzdGljcy5sMjtcbm1vZHVsZS5leHBvcnRzLmwxID0gaGV1cmlzdGljcy5sMTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IGluc3RhbmNlIG9mIHBhdGhmaW5kZXIuIEEgcGF0aGZpbmRlciBoYXMganVzdCBvbmUgbWV0aG9kOlxuICogYGZpbmQoZnJvbUlkLCB0b0lkKWAsIGl0IG1heSBiZSBleHRlbmRlZCBpbiBmdXR1cmUuXG4gKiBcbiAqIEBwYXJhbSB7bmdyYXBoLmdyYXBofSBncmFwaCBpbnN0YW5jZS4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9hbnZha2EvbmdyYXBoLmdyYXBoXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucyB0aGF0IGNvbmZpZ3VyZXMgc2VhcmNoXG4gKiBAcGFyYW0ge0Z1bmN0aW9uKGEsIGIpfSBvcHRpb25zLmhldXJpc3RpYyAtIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGVzdGltYXRlZCBkaXN0YW5jZSBiZXR3ZWVuXG4gKiBub2RlcyBgYWAgYW5kIGBiYC4gVGhpcyBmdW5jdGlvbiBzaG91bGQgbmV2ZXIgb3ZlcmVzdGltYXRlIGFjdHVhbCBkaXN0YW5jZSBiZXR3ZWVuIHR3b1xuICogbm9kZXMgKG90aGVyd2lzZSB0aGUgZm91bmQgcGF0aCB3aWxsIG5vdCBiZSB0aGUgc2hvcnRlc3QpLiBEZWZhdWx0cyBmdW5jdGlvbiByZXR1cm5zIDAsXG4gKiB3aGljaCBtYWtlcyB0aGlzIHNlYXJjaCBlcXVpdmFsZW50IHRvIERpamtzdHJhIHNlYXJjaC5cbiAqIEBwYXJhbSB7RnVuY3Rpb24oYSwgYil9IG9wdGlvbnMuZGlzdGFuY2UgLSBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhY3R1YWwgZGlzdGFuY2UgYmV0d2VlbiB0d29cbiAqIG5vZGVzIGBhYCBhbmQgYGJgLiBCeSBkZWZhdWx0IHRoaXMgaXMgc2V0IHRvIHJldHVybiBncmFwaC10aGVvcmV0aWNhbCBkaXN0YW5jZSAoYWx3YXlzIDEpO1xuICogQHBhcmFtIHtCb29sZWFufSBvcHRpb25zLm9yaWVudGVkIC0gd2hldGhlciBncmFwaCBzaG91bGQgYmUgY29uc2lkZXJlZCBvcmllbnRlZCBvciBub3QuXG4gKiBcbiAqIEByZXR1cm5zIHtPYmplY3R9IEEgcGF0aGZpbmRlciB3aXRoIHNpbmdsZSBtZXRob2QgYGZpbmQoKWAuXG4gKi9cbmZ1bmN0aW9uIGFTdGFyUGF0aFNlYXJjaChncmFwaCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgLy8gd2hldGhlciB0cmF2ZXJzYWwgc2hvdWxkIGJlIGNvbnNpZGVyZWQgb3ZlciBvcmllbnRlZCBncmFwaC5cbiAgdmFyIG9yaWVudGVkID0gb3B0aW9ucy5vcmllbnRlZDtcblxuICB2YXIgaGV1cmlzdGljID0gb3B0aW9ucy5oZXVyaXN0aWM7XG4gIGlmICghaGV1cmlzdGljKSBoZXVyaXN0aWMgPSBkZWZhdWx0U2V0dGluZ3MuaGV1cmlzdGljO1xuXG4gIHZhciBkaXN0YW5jZSA9IG9wdGlvbnMuZGlzdGFuY2U7XG4gIGlmICghZGlzdGFuY2UpIGRpc3RhbmNlID0gZGVmYXVsdFNldHRpbmdzLmRpc3RhbmNlO1xuICB2YXIgcG9vbCA9IG1ha2VTZWFyY2hTdGF0ZVBvb2woKTtcblxuICByZXR1cm4ge1xuICAgIC8qKlxuICAgICAqIEZpbmRzIGEgcGF0aCBiZXR3ZWVuIG5vZGUgYGZyb21JZGAgYW5kIGB0b0lkYC5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IG9mIG5vZGVzIGJldHdlZW4gYHRvSWRgIGFuZCBgZnJvbUlkYC4gRW1wdHkgYXJyYXkgaXMgcmV0dXJuZWRcbiAgICAgKiBpZiBubyBwYXRoIGlzIGZvdW5kLlxuICAgICAqL1xuICAgIGZpbmQ6IGZpbmRcbiAgfTtcblxuICBmdW5jdGlvbiBmaW5kKGZyb21JZCwgdG9JZCkge1xuICAgIHZhciBmcm9tID0gZ3JhcGguZ2V0Tm9kZShmcm9tSWQpO1xuICAgIGlmICghZnJvbSkgdGhyb3cgbmV3IEVycm9yKCdmcm9tSWQgaXMgbm90IGRlZmluZWQgaW4gdGhpcyBncmFwaDogJyArIGZyb21JZCk7XG4gICAgdmFyIHRvID0gZ3JhcGguZ2V0Tm9kZSh0b0lkKTtcbiAgICBpZiAoIXRvKSB0aHJvdyBuZXcgRXJyb3IoJ3RvSWQgaXMgbm90IGRlZmluZWQgaW4gdGhpcyBncmFwaDogJyArIHRvSWQpO1xuICAgIHBvb2wucmVzZXQoKTtcblxuICAgIC8vIE1hcHMgbm9kZUlkIHRvIE5vZGVTZWFyY2hTdGF0ZS5cbiAgICB2YXIgbm9kZVN0YXRlID0gbmV3IE1hcCgpO1xuXG4gICAgLy8gdGhlIG5vZGVzIHRoYXQgd2Ugc3RpbGwgbmVlZCB0byBldmFsdWF0ZVxuICAgIHZhciBvcGVuU2V0ID0gbmV3IE5vZGVIZWFwKHtcbiAgICAgIGNvbXBhcmU6IGRlZmF1bHRTZXR0aW5ncy5jb21wYXJlRlNjb3JlLFxuICAgICAgc2V0Tm9kZUlkOiBkZWZhdWx0U2V0dGluZ3Muc2V0SGVhcEluZGV4XG4gICAgfSk7XG5cbiAgICB2YXIgc3RhcnROb2RlID0gcG9vbC5jcmVhdGVOZXdTdGF0ZShmcm9tKTtcbiAgICBub2RlU3RhdGUuc2V0KGZyb21JZCwgc3RhcnROb2RlKTtcblxuICAgIC8vIEZvciB0aGUgZmlyc3Qgbm9kZSwgZlNjb3JlIGlzIGNvbXBsZXRlbHkgaGV1cmlzdGljLlxuICAgIHN0YXJ0Tm9kZS5mU2NvcmUgPSBoZXVyaXN0aWMoZnJvbSwgdG8pO1xuXG4gICAgLy8gVGhlIGNvc3Qgb2YgZ29pbmcgZnJvbSBzdGFydCB0byBzdGFydCBpcyB6ZXJvLlxuICAgIHN0YXJ0Tm9kZS5kaXN0YW5jZVRvU291cmNlID0gMDtcbiAgICBvcGVuU2V0LnB1c2goc3RhcnROb2RlKTtcbiAgICBzdGFydE5vZGUub3BlbiA9IDE7XG5cbiAgICB2YXIgY2FtZUZyb207XG5cbiAgICB3aGlsZSAob3BlblNldC5sZW5ndGggPiAwKSB7XG4gICAgICBjYW1lRnJvbSA9IG9wZW5TZXQucG9wKCk7XG4gICAgICBpZiAoZ29hbFJlYWNoZWQoY2FtZUZyb20sIHRvKSkgcmV0dXJuIHJlY29uc3RydWN0UGF0aChjYW1lRnJvbSk7XG5cbiAgICAgIC8vIG5vIG5lZWQgdG8gdmlzaXQgdGhpcyBub2RlIGFueW1vcmVcbiAgICAgIGNhbWVGcm9tLmNsb3NlZCA9IHRydWU7XG4gICAgICBncmFwaC5mb3JFYWNoTGlua2VkTm9kZShjYW1lRnJvbS5ub2RlLmlkLCB2aXNpdE5laWdoYm91ciwgb3JpZW50ZWQpO1xuICAgIH1cblxuICAgIC8vIElmIHdlIGdvdCBoZXJlLCB0aGVuIHRoZXJlIGlzIG5vIHBhdGguXG4gICAgcmV0dXJuIE5PX1BBVEg7XG5cbiAgICBmdW5jdGlvbiB2aXNpdE5laWdoYm91cihvdGhlck5vZGUsIGxpbmspIHtcbiAgICAgIHZhciBvdGhlclNlYXJjaFN0YXRlID0gbm9kZVN0YXRlLmdldChvdGhlck5vZGUuaWQpO1xuICAgICAgaWYgKCFvdGhlclNlYXJjaFN0YXRlKSB7XG4gICAgICAgIG90aGVyU2VhcmNoU3RhdGUgPSBwb29sLmNyZWF0ZU5ld1N0YXRlKG90aGVyTm9kZSk7XG4gICAgICAgIG5vZGVTdGF0ZS5zZXQob3RoZXJOb2RlLmlkLCBvdGhlclNlYXJjaFN0YXRlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG90aGVyU2VhcmNoU3RhdGUuY2xvc2VkKSB7XG4gICAgICAgIC8vIEFscmVhZHkgcHJvY2Vzc2VkIHRoaXMgbm9kZS5cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKG90aGVyU2VhcmNoU3RhdGUub3BlbiA9PT0gMCkge1xuICAgICAgICAvLyBSZW1lbWJlciB0aGlzIG5vZGUuXG4gICAgICAgIG9wZW5TZXQucHVzaChvdGhlclNlYXJjaFN0YXRlKTtcbiAgICAgICAgb3RoZXJTZWFyY2hTdGF0ZS5vcGVuID0gMTtcbiAgICAgIH1cblxuICAgICAgdmFyIHRlbnRhdGl2ZURpc3RhbmNlID0gY2FtZUZyb20uZGlzdGFuY2VUb1NvdXJjZSArIGRpc3RhbmNlKG90aGVyTm9kZSwgY2FtZUZyb20ubm9kZSwgbGluayk7XG4gICAgICBpZiAodGVudGF0aXZlRGlzdGFuY2UgPj0gb3RoZXJTZWFyY2hTdGF0ZS5kaXN0YW5jZVRvU291cmNlKSB7XG4gICAgICAgIC8vIFRoaXMgd291bGQgb25seSBtYWtlIG91ciBwYXRoIGxvbmdlci4gSWdub3JlIHRoaXMgcm91dGUuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gYmluZ28hIHdlIGZvdW5kIHNob3J0ZXIgcGF0aDpcbiAgICAgIG90aGVyU2VhcmNoU3RhdGUucGFyZW50ID0gY2FtZUZyb207XG4gICAgICBvdGhlclNlYXJjaFN0YXRlLmRpc3RhbmNlVG9Tb3VyY2UgPSB0ZW50YXRpdmVEaXN0YW5jZTtcbiAgICAgIG90aGVyU2VhcmNoU3RhdGUuZlNjb3JlID0gdGVudGF0aXZlRGlzdGFuY2UgKyBoZXVyaXN0aWMob3RoZXJTZWFyY2hTdGF0ZS5ub2RlLCB0byk7XG5cbiAgICAgIG9wZW5TZXQudXBkYXRlSXRlbShvdGhlclNlYXJjaFN0YXRlLmhlYXBJbmRleCk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGdvYWxSZWFjaGVkKHNlYXJjaFN0YXRlLCB0YXJnZXROb2RlKSB7XG4gIHJldHVybiBzZWFyY2hTdGF0ZS5ub2RlID09PSB0YXJnZXROb2RlO1xufVxuXG5mdW5jdGlvbiByZWNvbnN0cnVjdFBhdGgoc2VhcmNoU3RhdGUpIHtcbiAgdmFyIHBhdGggPSBbc2VhcmNoU3RhdGUubm9kZV07XG4gIHZhciBwYXJlbnQgPSBzZWFyY2hTdGF0ZS5wYXJlbnQ7XG5cbiAgd2hpbGUgKHBhcmVudCkge1xuICAgIHBhdGgucHVzaChwYXJlbnQubm9kZSk7XG4gICAgcGFyZW50ID0gcGFyZW50LnBhcmVudDtcbiAgfVxuXG4gIHJldHVybiBwYXRoO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/ngraph.path/a-star/a-star.js\n");

/***/ }),

/***/ "../node_modules/ngraph.path/a-star/defaultSettings.js":
/*!*************************************************************!*\
  !*** ../node_modules/ngraph.path/a-star/defaultSettings.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// We reuse instance of array, but we trie to freeze it as well,\n// so that consumers don't modify it. Maybe it's a bad idea.\nvar NO_PATH = [];\nif (typeof Object.freeze === 'function') Object.freeze(NO_PATH);\n\nmodule.exports = {\n  // Path search settings\n  heuristic: blindHeuristic,\n  distance: constantDistance,\n  compareFScore: compareFScore,\n  NO_PATH: NO_PATH,\n\n  // heap settings\n  setHeapIndex: setHeapIndex,\n\n  // nba:\n  setH1: setH1,\n  setH2: setH2,\n  compareF1Score: compareF1Score,\n  compareF2Score: compareF2Score,\n}\n\nfunction blindHeuristic(/* a, b */) {\n  // blind heuristic makes this search equal to plain Dijkstra path search.\n  return 0;\n}\n\nfunction constantDistance(/* a, b */) {\n  return 1;\n}\n\nfunction compareFScore(a, b) {\n  var result = a.fScore - b.fScore;\n  // TODO: Can I improve speed with smarter ties-breaking?\n  // I tried distanceToSource, but it didn't seem to have much effect\n  return result;\n}\n\nfunction setHeapIndex(nodeSearchState, heapIndex) {\n  nodeSearchState.heapIndex = heapIndex;\n}\n\nfunction compareF1Score(a, b) {\n  return a.f1 - b.f1;\n}\n\nfunction compareF2Score(a, b) {\n  return a.f2 - b.f2;\n}\n\nfunction setH1(node, heapIndex) {\n  node.h1 = heapIndex;\n}\n\nfunction setH2(node, heapIndex) {\n  node.h2 = heapIndex;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL25ncmFwaC5wYXRoL2Etc3Rhci9kZWZhdWx0U2V0dGluZ3MuanM/OTg5MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9uZ3JhcGgucGF0aC9hLXN0YXIvZGVmYXVsdFNldHRpbmdzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gV2UgcmV1c2UgaW5zdGFuY2Ugb2YgYXJyYXksIGJ1dCB3ZSB0cmllIHRvIGZyZWV6ZSBpdCBhcyB3ZWxsLFxuLy8gc28gdGhhdCBjb25zdW1lcnMgZG9uJ3QgbW9kaWZ5IGl0LiBNYXliZSBpdCdzIGEgYmFkIGlkZWEuXG52YXIgTk9fUEFUSCA9IFtdO1xuaWYgKHR5cGVvZiBPYmplY3QuZnJlZXplID09PSAnZnVuY3Rpb24nKSBPYmplY3QuZnJlZXplKE5PX1BBVEgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy8gUGF0aCBzZWFyY2ggc2V0dGluZ3NcbiAgaGV1cmlzdGljOiBibGluZEhldXJpc3RpYyxcbiAgZGlzdGFuY2U6IGNvbnN0YW50RGlzdGFuY2UsXG4gIGNvbXBhcmVGU2NvcmU6IGNvbXBhcmVGU2NvcmUsXG4gIE5PX1BBVEg6IE5PX1BBVEgsXG5cbiAgLy8gaGVhcCBzZXR0aW5nc1xuICBzZXRIZWFwSW5kZXg6IHNldEhlYXBJbmRleCxcblxuICAvLyBuYmE6XG4gIHNldEgxOiBzZXRIMSxcbiAgc2V0SDI6IHNldEgyLFxuICBjb21wYXJlRjFTY29yZTogY29tcGFyZUYxU2NvcmUsXG4gIGNvbXBhcmVGMlNjb3JlOiBjb21wYXJlRjJTY29yZSxcbn1cblxuZnVuY3Rpb24gYmxpbmRIZXVyaXN0aWMoLyogYSwgYiAqLykge1xuICAvLyBibGluZCBoZXVyaXN0aWMgbWFrZXMgdGhpcyBzZWFyY2ggZXF1YWwgdG8gcGxhaW4gRGlqa3N0cmEgcGF0aCBzZWFyY2guXG4gIHJldHVybiAwO1xufVxuXG5mdW5jdGlvbiBjb25zdGFudERpc3RhbmNlKC8qIGEsIGIgKi8pIHtcbiAgcmV0dXJuIDE7XG59XG5cbmZ1bmN0aW9uIGNvbXBhcmVGU2NvcmUoYSwgYikge1xuICB2YXIgcmVzdWx0ID0gYS5mU2NvcmUgLSBiLmZTY29yZTtcbiAgLy8gVE9ETzogQ2FuIEkgaW1wcm92ZSBzcGVlZCB3aXRoIHNtYXJ0ZXIgdGllcy1icmVha2luZz9cbiAgLy8gSSB0cmllZCBkaXN0YW5jZVRvU291cmNlLCBidXQgaXQgZGlkbid0IHNlZW0gdG8gaGF2ZSBtdWNoIGVmZmVjdFxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBzZXRIZWFwSW5kZXgobm9kZVNlYXJjaFN0YXRlLCBoZWFwSW5kZXgpIHtcbiAgbm9kZVNlYXJjaFN0YXRlLmhlYXBJbmRleCA9IGhlYXBJbmRleDtcbn1cblxuZnVuY3Rpb24gY29tcGFyZUYxU2NvcmUoYSwgYikge1xuICByZXR1cm4gYS5mMSAtIGIuZjE7XG59XG5cbmZ1bmN0aW9uIGNvbXBhcmVGMlNjb3JlKGEsIGIpIHtcbiAgcmV0dXJuIGEuZjIgLSBiLmYyO1xufVxuXG5mdW5jdGlvbiBzZXRIMShub2RlLCBoZWFwSW5kZXgpIHtcbiAgbm9kZS5oMSA9IGhlYXBJbmRleDtcbn1cblxuZnVuY3Rpb24gc2V0SDIobm9kZSwgaGVhcEluZGV4KSB7XG4gIG5vZGUuaDIgPSBoZWFwSW5kZXg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../node_modules/ngraph.path/a-star/defaultSettings.js\n");

/***/ }),

/***/ "../node_modules/ngraph.path/a-star/heuristics.js":
/*!********************************************************!*\
  !*** ../node_modules/ngraph.path/a-star/heuristics.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  l2: l2,\n  l1: l1\n};\n\n/**\n * Euclid distance (l2 norm);\n * \n * @param {*} a \n * @param {*} b \n */\nfunction l2(a, b) {\n  var dx = a.x - b.x;\n  var dy = a.y - b.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\n/**\n * Manhattan distance (l1 norm);\n * @param {*} a \n * @param {*} b \n */\nfunction l1(a, b) {\n  var dx = a.x - b.x;\n  var dy = a.y - b.y;\n  return Math.abs(dx) + Math.abs(dy);\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL25ncmFwaC5wYXRoL2Etc3Rhci9oZXVyaXN0aWNzLmpzP2U5YTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsV0FBVyxFQUFFO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLEVBQUU7QUFDYixXQUFXLEVBQUU7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vbm9kZV9tb2R1bGVzL25ncmFwaC5wYXRoL2Etc3Rhci9oZXVyaXN0aWNzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XG4gIGwyOiBsMixcbiAgbDE6IGwxXG59O1xuXG4vKipcbiAqIEV1Y2xpZCBkaXN0YW5jZSAobDIgbm9ybSk7XG4gKiBcbiAqIEBwYXJhbSB7Kn0gYSBcbiAqIEBwYXJhbSB7Kn0gYiBcbiAqL1xuZnVuY3Rpb24gbDIoYSwgYikge1xuICB2YXIgZHggPSBhLnggLSBiLng7XG4gIHZhciBkeSA9IGEueSAtIGIueTtcbiAgcmV0dXJuIE1hdGguc3FydChkeCAqIGR4ICsgZHkgKiBkeSk7XG59XG5cbi8qKlxuICogTWFuaGF0dGFuIGRpc3RhbmNlIChsMSBub3JtKTtcbiAqIEBwYXJhbSB7Kn0gYSBcbiAqIEBwYXJhbSB7Kn0gYiBcbiAqL1xuZnVuY3Rpb24gbDEoYSwgYikge1xuICB2YXIgZHggPSBhLnggLSBiLng7XG4gIHZhciBkeSA9IGEueSAtIGIueTtcbiAgcmV0dXJuIE1hdGguYWJzKGR4KSArIE1hdGguYWJzKGR5KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/ngraph.path/a-star/heuristics.js\n");

/***/ }),

/***/ "../node_modules/ngraph.path/a-star/makeSearchStatePool.js":
/*!*****************************************************************!*\
  !*** ../node_modules/ngraph.path/a-star/makeSearchStatePool.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * This class represents a single search node in the exploration tree for\n * A* algorithm.\n * \n * @param {Object} node  original node in the graph\n */\nfunction NodeSearchState(node) {\n  this.node = node;\n\n  // How we came to this node?\n  this.parent = null;\n\n  this.closed = false;\n  this.open = 0;\n\n  this.distanceToSource = Number.POSITIVE_INFINITY;\n  // the f(n) = g(n) + h(n) value\n  this.fScore = Number.POSITIVE_INFINITY;\n\n  // used to reconstruct heap when fScore is updated.\n  this.heapIndex = -1;\n};\n\nfunction makeSearchStatePool() {\n  var currentInCache = 0;\n  var nodeCache = [];\n\n  return {\n    createNewState: createNewState,\n    reset: reset\n  };\n\n  function reset() {\n    currentInCache = 0;\n  }\n\n  function createNewState(node) {\n    var cached = nodeCache[currentInCache];\n    if (cached) {\n      // TODO: This almost duplicates constructor code. Not sure if\n      // it would impact performance if I move this code into a function\n      cached.node = node;\n      // How we came to this node?\n      cached.parent = null;\n\n      cached.closed = false;\n      cached.open = 0;\n\n      cached.distanceToSource = Number.POSITIVE_INFINITY;\n      // the f(n) = g(n) + h(n) value\n      cached.fScore = Number.POSITIVE_INFINITY;\n\n      // used to reconstruct heap when fScore is updated.\n      cached.heapIndex = -1;\n\n    } else {\n      cached = new NodeSearchState(node);\n      nodeCache[currentInCache] = cached;\n    }\n    currentInCache++;\n    return cached;\n  }\n}\nmodule.exports = makeSearchStatePool;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL25ncmFwaC5wYXRoL2Etc3Rhci9tYWtlU2VhcmNoU3RhdGVQb29sLmpzP2YzZGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL25vZGVfbW9kdWxlcy9uZ3JhcGgucGF0aC9hLXN0YXIvbWFrZVNlYXJjaFN0YXRlUG9vbC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBjbGFzcyByZXByZXNlbnRzIGEgc2luZ2xlIHNlYXJjaCBub2RlIGluIHRoZSBleHBsb3JhdGlvbiB0cmVlIGZvclxuICogQSogYWxnb3JpdGhtLlxuICogXG4gKiBAcGFyYW0ge09iamVjdH0gbm9kZSAgb3JpZ2luYWwgbm9kZSBpbiB0aGUgZ3JhcGhcbiAqL1xuZnVuY3Rpb24gTm9kZVNlYXJjaFN0YXRlKG5vZGUpIHtcbiAgdGhpcy5ub2RlID0gbm9kZTtcblxuICAvLyBIb3cgd2UgY2FtZSB0byB0aGlzIG5vZGU/XG4gIHRoaXMucGFyZW50ID0gbnVsbDtcblxuICB0aGlzLmNsb3NlZCA9IGZhbHNlO1xuICB0aGlzLm9wZW4gPSAwO1xuXG4gIHRoaXMuZGlzdGFuY2VUb1NvdXJjZSA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcbiAgLy8gdGhlIGYobikgPSBnKG4pICsgaChuKSB2YWx1ZVxuICB0aGlzLmZTY29yZSA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcblxuICAvLyB1c2VkIHRvIHJlY29uc3RydWN0IGhlYXAgd2hlbiBmU2NvcmUgaXMgdXBkYXRlZC5cbiAgdGhpcy5oZWFwSW5kZXggPSAtMTtcbn07XG5cbmZ1bmN0aW9uIG1ha2VTZWFyY2hTdGF0ZVBvb2woKSB7XG4gIHZhciBjdXJyZW50SW5DYWNoZSA9IDA7XG4gIHZhciBub2RlQ2FjaGUgPSBbXTtcblxuICByZXR1cm4ge1xuICAgIGNyZWF0ZU5ld1N0YXRlOiBjcmVhdGVOZXdTdGF0ZSxcbiAgICByZXNldDogcmVzZXRcbiAgfTtcblxuICBmdW5jdGlvbiByZXNldCgpIHtcbiAgICBjdXJyZW50SW5DYWNoZSA9IDA7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVOZXdTdGF0ZShub2RlKSB7XG4gICAgdmFyIGNhY2hlZCA9IG5vZGVDYWNoZVtjdXJyZW50SW5DYWNoZV07XG4gICAgaWYgKGNhY2hlZCkge1xuICAgICAgLy8gVE9ETzogVGhpcyBhbG1vc3QgZHVwbGljYXRlcyBjb25zdHJ1Y3RvciBjb2RlLiBOb3Qgc3VyZSBpZlxuICAgICAgLy8gaXQgd291bGQgaW1wYWN0IHBlcmZvcm1hbmNlIGlmIEkgbW92ZSB0aGlzIGNvZGUgaW50byBhIGZ1bmN0aW9uXG4gICAgICBjYWNoZWQubm9kZSA9IG5vZGU7XG4gICAgICAvLyBIb3cgd2UgY2FtZSB0byB0aGlzIG5vZGU/XG4gICAgICBjYWNoZWQucGFyZW50ID0gbnVsbDtcblxuICAgICAgY2FjaGVkLmNsb3NlZCA9IGZhbHNlO1xuICAgICAgY2FjaGVkLm9wZW4gPSAwO1xuXG4gICAgICBjYWNoZWQuZGlzdGFuY2VUb1NvdXJjZSA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcbiAgICAgIC8vIHRoZSBmKG4pID0gZyhuKSArIGgobikgdmFsdWVcbiAgICAgIGNhY2hlZC5mU2NvcmUgPSBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFk7XG5cbiAgICAgIC8vIHVzZWQgdG8gcmVjb25zdHJ1Y3QgaGVhcCB3aGVuIGZTY29yZSBpcyB1cGRhdGVkLlxuICAgICAgY2FjaGVkLmhlYXBJbmRleCA9IC0xO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgIGNhY2hlZCA9IG5ldyBOb2RlU2VhcmNoU3RhdGUobm9kZSk7XG4gICAgICBub2RlQ2FjaGVbY3VycmVudEluQ2FjaGVdID0gY2FjaGVkO1xuICAgIH1cbiAgICBjdXJyZW50SW5DYWNoZSsrO1xuICAgIHJldHVybiBjYWNoZWQ7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gbWFrZVNlYXJjaFN0YXRlUG9vbDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/ngraph.path/a-star/makeSearchStatePool.js\n");

/***/ }),

/***/ "../node_modules/ngraph.path/a-star/nba/index.js":
/*!*******************************************************!*\
  !*** ../node_modules/ngraph.path/a-star/nba/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = nba;\n\nvar NodeHeap = __webpack_require__(/*! ../NodeHeap */ \"../node_modules/ngraph.path/a-star/NodeHeap.js\");\nvar heuristics = __webpack_require__(/*! ../heuristics */ \"../node_modules/ngraph.path/a-star/heuristics.js\");\nvar defaultSettings = __webpack_require__(/*! ../defaultSettings.js */ \"../node_modules/ngraph.path/a-star/defaultSettings.js\");\nvar makeNBASearchStatePool = __webpack_require__(/*! ./makeNBASearchStatePool.js */ \"../node_modules/ngraph.path/a-star/nba/makeNBASearchStatePool.js\");\n\nvar NO_PATH = defaultSettings.NO_PATH;\n\nmodule.exports.l2 = heuristics.l2;\nmodule.exports.l1 = heuristics.l1;\n\n/**\n * Creates a new instance of pathfinder. A pathfinder has just one method:\n * `find(fromId, toId)`.\n * \n * This is implementation of the NBA* algorithm described in \n * \n *  \"Yet another bidirectional algorithm for shortest paths\" paper by Wim Pijls and Henk Post\n * \n * The paper is available here: https://repub.eur.nl/pub/16100/ei2009-10.pdf\n * \n * @param {ngraph.graph} graph instance. See https://github.com/anvaka/ngraph.graph\n * @param {Object} options that configures search\n * @param {Function(a, b)} options.heuristic - a function that returns estimated distance between\n * nodes `a` and `b`. This function should never overestimate actual distance between two\n * nodes (otherwise the found path will not be the shortest). Defaults function returns 0,\n * which makes this search equivalent to Dijkstra search.\n * @param {Function(a, b)} options.distance - a function that returns actual distance between two\n * nodes `a` and `b`. By default this is set to return graph-theoretical distance (always 1);\n * \n * @returns {Object} A pathfinder with single method `find()`.\n */\nfunction nba(graph, options) {\n  options = options || {};\n  // whether traversal should be considered over oriented graph.\n  var oriented = options.oriented;\n  var quitFast = options.quitFast;\n\n  var heuristic = options.heuristic;\n  if (!heuristic) heuristic = defaultSettings.heuristic;\n\n  var distance = options.distance;\n  if (!distance) distance = defaultSettings.distance;\n\n  // During stress tests I noticed that garbage collection was one of the heaviest\n  // contributors to the algorithm's speed. So I'm using an object pool to recycle nodes.\n  var pool = makeNBASearchStatePool();\n\n  return {\n    /**\n     * Finds a path between node `fromId` and `toId`.\n     * @returns {Array} of nodes between `toId` and `fromId`. Empty array is returned\n     * if no path is found.\n     */\n    find: find\n  };\n\n  function find(fromId, toId) {\n    // I must apologize for the code duplication. This was the easiest way for me to\n    // implement the algorithm fast.\n    var from = graph.getNode(fromId);\n    if (!from) throw new Error('fromId is not defined in this graph: ' + fromId);\n    var to = graph.getNode(toId);\n    if (!to) throw new Error('toId is not defined in this graph: ' + toId);\n\n    pool.reset();\n\n    // I must also apologize for somewhat cryptic names. The NBA* is bi-directional\n    // search algorithm, which means it runs two searches in parallel. One is called\n    // forward search and it runs from source node to target, while the other one\n    // (backward search) runs from target to source.\n\n    // Everywhere where you see `1` it means it's for the forward search. `2` is for \n    // backward search.\n\n    // For oriented graph path finding, we need to reverse the graph, so that\n    // backward search visits correct link. Obviously we don't want to duplicate\n    // the graph, instead we always traverse the graph as non-oriented, and filter\n    // edges in `visitN1Oriented/visitN2Oritented`\n    var forwardVisitor = oriented ? visitN1Oriented : visitN1;\n    var reverseVisitor = oriented ? visitN2Oriented : visitN2;\n\n    // Maps nodeId to NBASearchState.\n    var nodeState = new Map();\n\n    // These two heaps store nodes by their underestimated values.\n    var open1Set = new NodeHeap({\n      compare: defaultSettings.compareF1Score,\n      setNodeId: defaultSettings.setH1\n    });\n    var open2Set = new NodeHeap({\n      compare: defaultSettings.compareF2Score,\n      setNodeId: defaultSettings.setH2\n    });\n\n    // This is where both searches will meet.\n    var minNode;\n\n    // The smallest path length seen so far is stored here:\n    var lMin = Number.POSITIVE_INFINITY;\n\n    // We start by putting start/end nodes to the corresponding heaps\n    // If variable names like `f1`, `g1` are too confusing, please refer\n    // to makeNBASearchStatePool.js file, which has detailed description.\n    var startNode = pool.createNewState(from);\n    nodeState.set(fromId, startNode); \n    startNode.g1 = 0;\n    var f1 = heuristic(from, to);\n    startNode.f1 = f1;\n    open1Set.push(startNode);\n\n    var endNode = pool.createNewState(to);\n    nodeState.set(toId, endNode);\n    endNode.g2 = 0;\n    var f2 = f1; // they should agree originally\n    endNode.f2 = f2;\n    open2Set.push(endNode)\n\n    // the `cameFrom` variable is accessed by both searches, so that we can store parents.\n    var cameFrom;\n\n    // this is the main algorithm loop:\n    while (open2Set.length && open1Set.length) {\n      if (open1Set.length < open2Set.length) {\n        forwardSearch();\n      } else {\n        reverseSearch();\n      }\n\n      if (quitFast && minNode) break;\n    }\n\n    var path = reconstructPath(minNode);\n    return path; // the public API is over\n\n    function forwardSearch() {\n      cameFrom = open1Set.pop();\n      if (cameFrom.closed) {\n        return;\n      }\n\n      cameFrom.closed = true;\n\n      if (cameFrom.f1 < lMin && (cameFrom.g1 + f2 - heuristic(from, cameFrom.node)) < lMin) {\n        graph.forEachLinkedNode(cameFrom.node.id, forwardVisitor);\n      }\n\n      if (open1Set.length > 0) {\n        // this will be used in reverse search\n        f1 = open1Set.peek().f1;\n      } \n    }\n\n    function reverseSearch() {\n      cameFrom = open2Set.pop();\n      if (cameFrom.closed) {\n        return;\n      }\n      cameFrom.closed = true;\n\n      if (cameFrom.f2 < lMin && (cameFrom.g2 + f1 - heuristic(cameFrom.node, to)) < lMin) {\n        graph.forEachLinkedNode(cameFrom.node.id, reverseVisitor);\n      }\n\n      if (open2Set.length > 0) {\n        // this will be used in forward search\n        f2 = open2Set.peek().f2;\n      }\n    }\n\n    function visitN1(otherNode, link) {\n      var otherSearchState = nodeState.get(otherNode.id);\n      if (!otherSearchState) {\n        otherSearchState = pool.createNewState(otherNode);\n        nodeState.set(otherNode.id, otherSearchState);\n      }\n\n      if (otherSearchState.closed) return;\n\n      var tentativeDistance = cameFrom.g1 + distance(cameFrom.node, otherNode, link);\n\n      if (tentativeDistance < otherSearchState.g1) {\n        otherSearchState.g1 = tentativeDistance;\n        otherSearchState.f1 = tentativeDistance + heuristic(otherSearchState.node, to);\n        otherSearchState.p1 = cameFrom;\n        if (otherSearchState.h1 < 0) {\n          open1Set.push(otherSearchState);\n        } else {\n          open1Set.updateItem(otherSearchState.h1);\n        }\n      }\n      var potentialMin = otherSearchState.g1 + otherSearchState.g2;\n      if (potentialMin < lMin) { \n        lMin = potentialMin;\n        minNode = otherSearchState;\n      }\n    }\n\n    function visitN2(otherNode, link) {\n      var otherSearchState = nodeState.get(otherNode.id);\n      if (!otherSearchState) {\n        otherSearchState = pool.createNewState(otherNode);\n        nodeState.set(otherNode.id, otherSearchState);\n      }\n\n      if (otherSearchState.closed) return;\n\n      var tentativeDistance = cameFrom.g2 + distance(cameFrom.node, otherNode, link);\n\n      if (tentativeDistance < otherSearchState.g2) {\n        otherSearchState.g2 = tentativeDistance;\n        otherSearchState.f2 = tentativeDistance + heuristic(from, otherSearchState.node);\n        otherSearchState.p2 = cameFrom;\n        if (otherSearchState.h2 < 0) {\n          open2Set.push(otherSearchState);\n        } else {\n          open2Set.updateItem(otherSearchState.h2);\n        }\n      }\n      var potentialMin = otherSearchState.g1 + otherSearchState.g2;\n      if (potentialMin < lMin) {\n        lMin = potentialMin;\n        minNode = otherSearchState;\n      }\n    }\n\n    function visitN2Oriented(otherNode, link) {\n      // we are going backwards, graph needs to be reversed. \n      if (link.toId === cameFrom.node.id) return visitN2(otherNode, link);\n    }\n    function visitN1Oriented(otherNode, link) {\n      // this is forward direction, so we should be coming FROM:\n      if (link.fromId === cameFrom.node.id) return visitN1(otherNode, link);\n    }\n  }\n}\n\nfunction reconstructPath(searchState) {\n  if (!searchState) return NO_PATH;\n\n  var path = [searchState.node];\n  var parent = searchState.p1;\n\n  while (parent) {\n    path.push(parent.node);\n    parent = parent.p1;\n  }\n\n  var child = searchState.p2;\n\n  while (child) {\n    path.unshift(child.node);\n    child = child.p2;\n  }\n  return path;\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../node_modules/ngraph.path/a-star/nba/index.js\n");

/***/ }),

/***/ "../node_modules/ngraph.path/a-star/nba/makeNBASearchStatePool.js":
/*!************************************************************************!*\
  !*** ../node_modules/ngraph.path/a-star/nba/makeNBASearchStatePool.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = makeNBASearchStatePool;\n\n/**\n * Creates new instance of NBASearchState. The instance stores information\n * about search state, and is used by NBA* algorithm.\n *\n * @param {Object} node - original graph node\n */\nfunction NBASearchState(node) {\n  /**\n   * Original graph node.\n   */\n  this.node = node;\n\n  /**\n   * Parent of this node in forward search\n   */\n  this.p1 = null;\n\n  /**\n   * Parent of this node in reverse search\n   */\n  this.p2 = null;\n\n  /**\n   * If this is set to true, then the node was already processed\n   * and we should not touch it anymore.\n   */\n  this.closed = false;\n\n  /**\n   * Actual distance from this node to its parent in forward search\n   */\n  this.g1 = Number.POSITIVE_INFINITY;\n\n  /**\n   * Actual distance from this node to its parent in reverse search\n   */\n  this.g2 = Number.POSITIVE_INFINITY;\n\n\n  /**\n   * Underestimated distance from this node to the path-finding source.\n   */\n  this.f1 = Number.POSITIVE_INFINITY;\n\n  /**\n   * Underestimated distance from this node to the path-finding target.\n   */\n  this.f2 = Number.POSITIVE_INFINITY;\n\n  // used to reconstruct heap when fScore is updated. TODO: do I need them both?\n\n  /**\n   * Index of this node in the forward heap.\n   */\n  this.h1 = -1;\n\n  /**\n   * Index of this node in the reverse heap.\n   */\n  this.h2 = -1;\n}\n\n/**\n * As path-finding is memory-intensive process, we want to reduce pressure on\n * garbage collector. This class helps us to recycle path-finding nodes and significantly\n * reduces the search time (~20% faster than without it).\n */\nfunction makeNBASearchStatePool() {\n  var currentInCache = 0;\n  var nodeCache = [];\n\n  return {\n    /**\n     * Creates a new NBASearchState instance\n     */\n    createNewState: createNewState,\n\n    /**\n     * Marks all created instances available for recycling.\n     */\n    reset: reset\n  };\n\n  function reset() {\n    currentInCache = 0;\n  }\n\n  function createNewState(node) {\n    var cached = nodeCache[currentInCache];\n    if (cached) {\n      // TODO: This almost duplicates constructor code. Not sure if\n      // it would impact performance if I move this code into a function\n      cached.node = node;\n\n      // How we came to this node?\n      cached.p1 = null;\n      cached.p2 = null;\n\n      cached.closed = false;\n\n      cached.g1 = Number.POSITIVE_INFINITY;\n      cached.g2 = Number.POSITIVE_INFINITY;\n      cached.f1 = Number.POSITIVE_INFINITY;\n      cached.f2 = Number.POSITIVE_INFINITY;\n\n      // used to reconstruct heap when fScore is updated.\n      cached.h1 = -1;\n      cached.h2 = -1;\n    } else {\n      cached = new NBASearchState(node);\n      nodeCache[currentInCache] = cached;\n    }\n    currentInCache++;\n    return cached;\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL25ncmFwaC5wYXRoL2Etc3Rhci9uYmEvbWFrZU5CQVNlYXJjaFN0YXRlUG9vbC5qcz9lYjJiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvbmdyYXBoLnBhdGgvYS1zdGFyL25iYS9tYWtlTkJBU2VhcmNoU3RhdGVQb29sLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBtYWtlTkJBU2VhcmNoU3RhdGVQb29sO1xuXG4vKipcbiAqIENyZWF0ZXMgbmV3IGluc3RhbmNlIG9mIE5CQVNlYXJjaFN0YXRlLiBUaGUgaW5zdGFuY2Ugc3RvcmVzIGluZm9ybWF0aW9uXG4gKiBhYm91dCBzZWFyY2ggc3RhdGUsIGFuZCBpcyB1c2VkIGJ5IE5CQSogYWxnb3JpdGhtLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBub2RlIC0gb3JpZ2luYWwgZ3JhcGggbm9kZVxuICovXG5mdW5jdGlvbiBOQkFTZWFyY2hTdGF0ZShub2RlKSB7XG4gIC8qKlxuICAgKiBPcmlnaW5hbCBncmFwaCBub2RlLlxuICAgKi9cbiAgdGhpcy5ub2RlID0gbm9kZTtcblxuICAvKipcbiAgICogUGFyZW50IG9mIHRoaXMgbm9kZSBpbiBmb3J3YXJkIHNlYXJjaFxuICAgKi9cbiAgdGhpcy5wMSA9IG51bGw7XG5cbiAgLyoqXG4gICAqIFBhcmVudCBvZiB0aGlzIG5vZGUgaW4gcmV2ZXJzZSBzZWFyY2hcbiAgICovXG4gIHRoaXMucDIgPSBudWxsO1xuXG4gIC8qKlxuICAgKiBJZiB0aGlzIGlzIHNldCB0byB0cnVlLCB0aGVuIHRoZSBub2RlIHdhcyBhbHJlYWR5IHByb2Nlc3NlZFxuICAgKiBhbmQgd2Ugc2hvdWxkIG5vdCB0b3VjaCBpdCBhbnltb3JlLlxuICAgKi9cbiAgdGhpcy5jbG9zZWQgPSBmYWxzZTtcblxuICAvKipcbiAgICogQWN0dWFsIGRpc3RhbmNlIGZyb20gdGhpcyBub2RlIHRvIGl0cyBwYXJlbnQgaW4gZm9yd2FyZCBzZWFyY2hcbiAgICovXG4gIHRoaXMuZzEgPSBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFk7XG5cbiAgLyoqXG4gICAqIEFjdHVhbCBkaXN0YW5jZSBmcm9tIHRoaXMgbm9kZSB0byBpdHMgcGFyZW50IGluIHJldmVyc2Ugc2VhcmNoXG4gICAqL1xuICB0aGlzLmcyID0gTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZO1xuXG5cbiAgLyoqXG4gICAqIFVuZGVyZXN0aW1hdGVkIGRpc3RhbmNlIGZyb20gdGhpcyBub2RlIHRvIHRoZSBwYXRoLWZpbmRpbmcgc291cmNlLlxuICAgKi9cbiAgdGhpcy5mMSA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcblxuICAvKipcbiAgICogVW5kZXJlc3RpbWF0ZWQgZGlzdGFuY2UgZnJvbSB0aGlzIG5vZGUgdG8gdGhlIHBhdGgtZmluZGluZyB0YXJnZXQuXG4gICAqL1xuICB0aGlzLmYyID0gTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZO1xuXG4gIC8vIHVzZWQgdG8gcmVjb25zdHJ1Y3QgaGVhcCB3aGVuIGZTY29yZSBpcyB1cGRhdGVkLiBUT0RPOiBkbyBJIG5lZWQgdGhlbSBib3RoP1xuXG4gIC8qKlxuICAgKiBJbmRleCBvZiB0aGlzIG5vZGUgaW4gdGhlIGZvcndhcmQgaGVhcC5cbiAgICovXG4gIHRoaXMuaDEgPSAtMTtcblxuICAvKipcbiAgICogSW5kZXggb2YgdGhpcyBub2RlIGluIHRoZSByZXZlcnNlIGhlYXAuXG4gICAqL1xuICB0aGlzLmgyID0gLTE7XG59XG5cbi8qKlxuICogQXMgcGF0aC1maW5kaW5nIGlzIG1lbW9yeS1pbnRlbnNpdmUgcHJvY2Vzcywgd2Ugd2FudCB0byByZWR1Y2UgcHJlc3N1cmUgb25cbiAqIGdhcmJhZ2UgY29sbGVjdG9yLiBUaGlzIGNsYXNzIGhlbHBzIHVzIHRvIHJlY3ljbGUgcGF0aC1maW5kaW5nIG5vZGVzIGFuZCBzaWduaWZpY2FudGx5XG4gKiByZWR1Y2VzIHRoZSBzZWFyY2ggdGltZSAofjIwJSBmYXN0ZXIgdGhhbiB3aXRob3V0IGl0KS5cbiAqL1xuZnVuY3Rpb24gbWFrZU5CQVNlYXJjaFN0YXRlUG9vbCgpIHtcbiAgdmFyIGN1cnJlbnRJbkNhY2hlID0gMDtcbiAgdmFyIG5vZGVDYWNoZSA9IFtdO1xuXG4gIHJldHVybiB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBOQkFTZWFyY2hTdGF0ZSBpbnN0YW5jZVxuICAgICAqL1xuICAgIGNyZWF0ZU5ld1N0YXRlOiBjcmVhdGVOZXdTdGF0ZSxcblxuICAgIC8qKlxuICAgICAqIE1hcmtzIGFsbCBjcmVhdGVkIGluc3RhbmNlcyBhdmFpbGFibGUgZm9yIHJlY3ljbGluZy5cbiAgICAgKi9cbiAgICByZXNldDogcmVzZXRcbiAgfTtcblxuICBmdW5jdGlvbiByZXNldCgpIHtcbiAgICBjdXJyZW50SW5DYWNoZSA9IDA7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVOZXdTdGF0ZShub2RlKSB7XG4gICAgdmFyIGNhY2hlZCA9IG5vZGVDYWNoZVtjdXJyZW50SW5DYWNoZV07XG4gICAgaWYgKGNhY2hlZCkge1xuICAgICAgLy8gVE9ETzogVGhpcyBhbG1vc3QgZHVwbGljYXRlcyBjb25zdHJ1Y3RvciBjb2RlLiBOb3Qgc3VyZSBpZlxuICAgICAgLy8gaXQgd291bGQgaW1wYWN0IHBlcmZvcm1hbmNlIGlmIEkgbW92ZSB0aGlzIGNvZGUgaW50byBhIGZ1bmN0aW9uXG4gICAgICBjYWNoZWQubm9kZSA9IG5vZGU7XG5cbiAgICAgIC8vIEhvdyB3ZSBjYW1lIHRvIHRoaXMgbm9kZT9cbiAgICAgIGNhY2hlZC5wMSA9IG51bGw7XG4gICAgICBjYWNoZWQucDIgPSBudWxsO1xuXG4gICAgICBjYWNoZWQuY2xvc2VkID0gZmFsc2U7XG5cbiAgICAgIGNhY2hlZC5nMSA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcbiAgICAgIGNhY2hlZC5nMiA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcbiAgICAgIGNhY2hlZC5mMSA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcbiAgICAgIGNhY2hlZC5mMiA9IE51bWJlci5QT1NJVElWRV9JTkZJTklUWTtcblxuICAgICAgLy8gdXNlZCB0byByZWNvbnN0cnVjdCBoZWFwIHdoZW4gZlNjb3JlIGlzIHVwZGF0ZWQuXG4gICAgICBjYWNoZWQuaDEgPSAtMTtcbiAgICAgIGNhY2hlZC5oMiA9IC0xO1xuICAgIH0gZWxzZSB7XG4gICAgICBjYWNoZWQgPSBuZXcgTkJBU2VhcmNoU3RhdGUobm9kZSk7XG4gICAgICBub2RlQ2FjaGVbY3VycmVudEluQ2FjaGVdID0gY2FjaGVkO1xuICAgIH1cbiAgICBjdXJyZW50SW5DYWNoZSsrO1xuICAgIHJldHVybiBjYWNoZWQ7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../node_modules/ngraph.path/a-star/nba/makeNBASearchStatePool.js\n");

/***/ }),

/***/ "../node_modules/ngraph.path/index.js":
/*!********************************************!*\
  !*** ../node_modules/ngraph.path/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  aStar: __webpack_require__(/*! ./a-star/a-star.js */ \"../node_modules/ngraph.path/a-star/a-star.js\"),\n  aGreedy: __webpack_require__(/*! ./a-star/a-greedy-star */ \"../node_modules/ngraph.path/a-star/a-greedy-star.js\"),\n  nba: __webpack_require__(/*! ./a-star/nba/index.js */ \"../node_modules/ngraph.path/a-star/nba/index.js\"),\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL25ncmFwaC5wYXRoL2luZGV4LmpzPzI2YmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxTQUFTLG1CQUFPLENBQUMsd0VBQW9CO0FBQ3JDLFdBQVcsbUJBQU8sQ0FBQyxtRkFBd0I7QUFDM0MsT0FBTyxtQkFBTyxDQUFDLDhFQUF1QjtBQUN0QyIsImZpbGUiOiIuLi9ub2RlX21vZHVsZXMvbmdyYXBoLnBhdGgvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgYVN0YXI6IHJlcXVpcmUoJy4vYS1zdGFyL2Etc3Rhci5qcycpLFxuICBhR3JlZWR5OiByZXF1aXJlKCcuL2Etc3Rhci9hLWdyZWVkeS1zdGFyJyksXG4gIG5iYTogcmVxdWlyZSgnLi9hLXN0YXIvbmJhL2luZGV4LmpzJyksXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../node_modules/ngraph.path/index.js\n");

/***/ }),

/***/ "../src/Edge.js":
/*!**********************!*\
  !*** ../src/Edge.js ***!
  \**********************/
/*! exports provided: Edge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Edge\", function() { return Edge; });\nclass Edge {\n  constructor (p1, p2) {\n    this.p1 = p1\n    this.p2 = p2\n\n    p1.edges.push(this)\n    p2.edges.push(this)\n  }\n\n  getOtherPointInEdge (point) {\n    return this.p1.isPointEqual(point) ? this.p2 : this.p1\n  }\n\n  areEdgesEqual (otherEdge) {\n    if (this.p1.isPointEqual(otherEdge.p1) && this.p2.isPointEqual(otherEdge.p2)) return true\n    if (this.p1.isPointEqual(otherEdge.p2) && this.p2.isPointEqual(otherEdge.p1)) return true\n    return false\n  }\n\n  containsPoint (point) {\n    if (this.p1.isPointEqual(point) || this.p2.isPointEqual(point)) return true\n    return false\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL0VkZ2UuanM/ZDE1ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi4vc3JjL0VkZ2UuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRWRnZSB7XG4gIGNvbnN0cnVjdG9yIChwMSwgcDIpIHtcbiAgICB0aGlzLnAxID0gcDFcbiAgICB0aGlzLnAyID0gcDJcblxuICAgIHAxLmVkZ2VzLnB1c2godGhpcylcbiAgICBwMi5lZGdlcy5wdXNoKHRoaXMpXG4gIH1cblxuICBnZXRPdGhlclBvaW50SW5FZGdlIChwb2ludCkge1xuICAgIHJldHVybiB0aGlzLnAxLmlzUG9pbnRFcXVhbChwb2ludCkgPyB0aGlzLnAyIDogdGhpcy5wMVxuICB9XG5cbiAgYXJlRWRnZXNFcXVhbCAob3RoZXJFZGdlKSB7XG4gICAgaWYgKHRoaXMucDEuaXNQb2ludEVxdWFsKG90aGVyRWRnZS5wMSkgJiYgdGhpcy5wMi5pc1BvaW50RXF1YWwob3RoZXJFZGdlLnAyKSkgcmV0dXJuIHRydWVcbiAgICBpZiAodGhpcy5wMS5pc1BvaW50RXF1YWwob3RoZXJFZGdlLnAyKSAmJiB0aGlzLnAyLmlzUG9pbnRFcXVhbChvdGhlckVkZ2UucDEpKSByZXR1cm4gdHJ1ZVxuICAgIHJldHVybiBmYWxzZVxuICB9XG5cbiAgY29udGFpbnNQb2ludCAocG9pbnQpIHtcbiAgICBpZiAodGhpcy5wMS5pc1BvaW50RXF1YWwocG9pbnQpIHx8IHRoaXMucDIuaXNQb2ludEVxdWFsKHBvaW50KSkgcmV0dXJuIHRydWVcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/Edge.js\n");

/***/ }),

/***/ "../src/EdgeKey.js":
/*!*************************!*\
  !*** ../src/EdgeKey.js ***!
  \*************************/
/*! exports provided: EdgeKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EdgeKey\", function() { return EdgeKey; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"../src/utils.js\");\n\n\nclass EdgeKey {\n\n  constructor (p1, p2, edge) {\n    this.p1 = p1\n    this.p2 = p2\n    this.edge = edge\n  }\n\n  isLessThanOtherEdgeKey (otherEdgeKey) {\n    if (this.matchesOtherKey(otherEdgeKey)) return false\n    if (!Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"edgeIntersect\"])(this.p1, this.p2, otherEdgeKey.edge)) return true\n    const selfDistance = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"pointEdgeDistance\"])(this.p1, this.p2, this.edge)\n    const otherDistance = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"pointEdgeDistance\"])(this.p1, this.p2, otherEdgeKey.edge)\n    if (selfDistance > otherDistance) return false\n    if (selfDistance < otherDistance) return true\n    if (selfDistance === otherDistance) {\n      let samePoint = null\n      if (otherEdgeKey.edge.containsPoint(this.edge.p1)) samePoint = this.edge.p1\n      // else if (otherEdgeKey.edge.containsPoint(this.edge.p2)) samePoint = this.edge.p2\n      else samePoint = this.edge.p2\n      const aslf = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"angle2\"])(this.p1, this.p2, this.edge.getOtherPointInEdge(samePoint))\n      const aot = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\"angle2\"])(this.p1, this.p2, otherEdgeKey.edge.getOtherPointInEdge(samePoint))\n      if (aslf < aot) return true\n      return false\n    }\n  }\n\n  matchesOtherKey (otherKey) {\n    return this.edge.areEdgesEqual(otherKey.edge)\n  }\n\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL0VkZ2VLZXkuanM/MjQzYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBa0U7O0FBRTNEOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVMsNERBQWE7QUFDdEIseUJBQXlCLGdFQUFpQjtBQUMxQywwQkFBMEIsZ0VBQWlCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHFEQUFNO0FBQ3pCLGtCQUFrQixxREFBTTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiLi4vc3JjL0VkZ2VLZXkuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlZGdlSW50ZXJzZWN0LCBwb2ludEVkZ2VEaXN0YW5jZSwgYW5nbGUyIH0gZnJvbSAnLi91dGlscydcblxuZXhwb3J0IGNsYXNzIEVkZ2VLZXkge1xuXG4gIGNvbnN0cnVjdG9yIChwMSwgcDIsIGVkZ2UpIHtcbiAgICB0aGlzLnAxID0gcDFcbiAgICB0aGlzLnAyID0gcDJcbiAgICB0aGlzLmVkZ2UgPSBlZGdlXG4gIH1cblxuICBpc0xlc3NUaGFuT3RoZXJFZGdlS2V5IChvdGhlckVkZ2VLZXkpIHtcbiAgICBpZiAodGhpcy5tYXRjaGVzT3RoZXJLZXkob3RoZXJFZGdlS2V5KSkgcmV0dXJuIGZhbHNlXG4gICAgaWYgKCFlZGdlSW50ZXJzZWN0KHRoaXMucDEsIHRoaXMucDIsIG90aGVyRWRnZUtleS5lZGdlKSkgcmV0dXJuIHRydWVcbiAgICBjb25zdCBzZWxmRGlzdGFuY2UgPSBwb2ludEVkZ2VEaXN0YW5jZSh0aGlzLnAxLCB0aGlzLnAyLCB0aGlzLmVkZ2UpXG4gICAgY29uc3Qgb3RoZXJEaXN0YW5jZSA9IHBvaW50RWRnZURpc3RhbmNlKHRoaXMucDEsIHRoaXMucDIsIG90aGVyRWRnZUtleS5lZGdlKVxuICAgIGlmIChzZWxmRGlzdGFuY2UgPiBvdGhlckRpc3RhbmNlKSByZXR1cm4gZmFsc2VcbiAgICBpZiAoc2VsZkRpc3RhbmNlIDwgb3RoZXJEaXN0YW5jZSkgcmV0dXJuIHRydWVcbiAgICBpZiAoc2VsZkRpc3RhbmNlID09PSBvdGhlckRpc3RhbmNlKSB7XG4gICAgICBsZXQgc2FtZVBvaW50ID0gbnVsbFxuICAgICAgaWYgKG90aGVyRWRnZUtleS5lZGdlLmNvbnRhaW5zUG9pbnQodGhpcy5lZGdlLnAxKSkgc2FtZVBvaW50ID0gdGhpcy5lZGdlLnAxXG4gICAgICAvLyBlbHNlIGlmIChvdGhlckVkZ2VLZXkuZWRnZS5jb250YWluc1BvaW50KHRoaXMuZWRnZS5wMikpIHNhbWVQb2ludCA9IHRoaXMuZWRnZS5wMlxuICAgICAgZWxzZSBzYW1lUG9pbnQgPSB0aGlzLmVkZ2UucDJcbiAgICAgIGNvbnN0IGFzbGYgPSBhbmdsZTIodGhpcy5wMSwgdGhpcy5wMiwgdGhpcy5lZGdlLmdldE90aGVyUG9pbnRJbkVkZ2Uoc2FtZVBvaW50KSlcbiAgICAgIGNvbnN0IGFvdCA9IGFuZ2xlMih0aGlzLnAxLCB0aGlzLnAyLCBvdGhlckVkZ2VLZXkuZWRnZS5nZXRPdGhlclBvaW50SW5FZGdlKHNhbWVQb2ludCkpXG4gICAgICBpZiAoYXNsZiA8IGFvdCkgcmV0dXJuIHRydWVcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgfVxuXG4gIG1hdGNoZXNPdGhlcktleSAob3RoZXJLZXkpIHtcbiAgICByZXR1cm4gdGhpcy5lZGdlLmFyZUVkZ2VzRXF1YWwob3RoZXJLZXkuZWRnZSlcbiAgfVxuXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../src/EdgeKey.js\n");

/***/ }),

/***/ "../src/EdgeKeys.js":
/*!**************************!*\
  !*** ../src/EdgeKeys.js ***!
  \**************************/
/*! exports provided: EdgeKeys */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EdgeKeys\", function() { return EdgeKeys; });\nclass EdgeKeys {\n\n  constructor () {\n    this.keys = []\n  }\n\n  findKeyPosition (edgekey, p) {\n    let lo = 0\n    let hi = this.keys.length\n    while (lo < hi) {\n      const mid = Math.floor((lo + hi) / 2)\n      if (edgekey.isLessThanOtherEdgeKey(this.keys[mid])) hi = mid\n      else lo = mid + 1\n    }\n    return lo\n  }\n\n  addKey (edgekey, p) {\n    const lo = this.findKeyPosition(edgekey)\n    this.keys.splice(lo, 0, edgekey)\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL0VkZ2VLZXlzLmpzPzA3NmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFPOztBQUVQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL3NyYy9FZGdlS2V5cy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBFZGdlS2V5cyB7XG5cbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHRoaXMua2V5cyA9IFtdXG4gIH1cblxuICBmaW5kS2V5UG9zaXRpb24gKGVkZ2VrZXksIHApIHtcbiAgICBsZXQgbG8gPSAwXG4gICAgbGV0IGhpID0gdGhpcy5rZXlzLmxlbmd0aFxuICAgIHdoaWxlIChsbyA8IGhpKSB7XG4gICAgICBjb25zdCBtaWQgPSBNYXRoLmZsb29yKChsbyArIGhpKSAvIDIpXG4gICAgICBpZiAoZWRnZWtleS5pc0xlc3NUaGFuT3RoZXJFZGdlS2V5KHRoaXMua2V5c1ttaWRdKSkgaGkgPSBtaWRcbiAgICAgIGVsc2UgbG8gPSBtaWQgKyAxXG4gICAgfVxuICAgIHJldHVybiBsb1xuICB9XG5cbiAgYWRkS2V5IChlZGdla2V5LCBwKSB7XG4gICAgY29uc3QgbG8gPSB0aGlzLmZpbmRLZXlQb3NpdGlvbihlZGdla2V5KVxuICAgIHRoaXMua2V5cy5zcGxpY2UobG8sIDAsIGVkZ2VrZXkpXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/EdgeKeys.js\n");

/***/ }),

/***/ "../src/Point.js":
/*!***********************!*\
  !*** ../src/Point.js ***!
  \***********************/
/*! exports provided: Point */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Point\", function() { return Point; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"../src/utils.js\");\n\n\nclass Point {\n\n  constructor (coords, polygonID) {\n    if (polygonID === null) polygonID = -1\n    this.x = coords[0]\n    this.y = coords[1]\n    this.polygonID = polygonID\n    this.edges = []\n    this.prevPoint = null\n    this.nextPoint = null\n  }\n\n  isPointEqual (otherPoint) {\n    return this.x === otherPoint.x && this.y === otherPoint.y\n  }\n\n  angleToPoint (otherPoint) {\n    if (this.isPointEqual(otherPoint)) return 0\n    const dx = otherPoint.x - this.x\n    const dy = otherPoint.y - this.y\n    if (dx === 0) dy < 1 ? _utils__WEBPACK_IMPORTED_MODULE_0__[\"pi1\"] : _utils__WEBPACK_IMPORTED_MODULE_0__[\"pi2\"]\n    if (dy === 0) dx < 0 ? Math.PI : 0\n    if (dx < 0) return Math.PI + Math.atan(dy / dx)\n    if (dy < 0) return 2 * Math.PI + Math.atan(dy / dx)\n    return Math.atan(dy / dx)\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL1BvaW50LmpzP2JlNzIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQWtDOztBQUUzQjs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDBDQUFHLEdBQUcsMENBQUc7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL3NyYy9Qb2ludC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBpMSwgcGkyIH0gZnJvbSAnLi91dGlscydcblxuZXhwb3J0IGNsYXNzIFBvaW50IHtcblxuICBjb25zdHJ1Y3RvciAoY29vcmRzLCBwb2x5Z29uSUQpIHtcbiAgICBpZiAocG9seWdvbklEID09PSBudWxsKSBwb2x5Z29uSUQgPSAtMVxuICAgIHRoaXMueCA9IGNvb3Jkc1swXVxuICAgIHRoaXMueSA9IGNvb3Jkc1sxXVxuICAgIHRoaXMucG9seWdvbklEID0gcG9seWdvbklEXG4gICAgdGhpcy5lZGdlcyA9IFtdXG4gICAgdGhpcy5wcmV2UG9pbnQgPSBudWxsXG4gICAgdGhpcy5uZXh0UG9pbnQgPSBudWxsXG4gIH1cblxuICBpc1BvaW50RXF1YWwgKG90aGVyUG9pbnQpIHtcbiAgICByZXR1cm4gdGhpcy54ID09PSBvdGhlclBvaW50LnggJiYgdGhpcy55ID09PSBvdGhlclBvaW50LnlcbiAgfVxuXG4gIGFuZ2xlVG9Qb2ludCAob3RoZXJQb2ludCkge1xuICAgIGlmICh0aGlzLmlzUG9pbnRFcXVhbChvdGhlclBvaW50KSkgcmV0dXJuIDBcbiAgICBjb25zdCBkeCA9IG90aGVyUG9pbnQueCAtIHRoaXMueFxuICAgIGNvbnN0IGR5ID0gb3RoZXJQb2ludC55IC0gdGhpcy55XG4gICAgaWYgKGR4ID09PSAwKSBkeSA8IDEgPyBwaTEgOiBwaTJcbiAgICBpZiAoZHkgPT09IDApIGR4IDwgMCA/IE1hdGguUEkgOiAwXG4gICAgaWYgKGR4IDwgMCkgcmV0dXJuIE1hdGguUEkgKyBNYXRoLmF0YW4oZHkgLyBkeClcbiAgICBpZiAoZHkgPCAwKSByZXR1cm4gMiAqIE1hdGguUEkgKyBNYXRoLmF0YW4oZHkgLyBkeClcbiAgICByZXR1cm4gTWF0aC5hdGFuKGR5IC8gZHgpXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/Point.js\n");

/***/ }),

/***/ "../src/createGraphFromGeoJson.js":
/*!****************************************!*\
  !*** ../src/createGraphFromGeoJson.js ***!
  \****************************************/
/*! exports provided: loadPoints, restoreOriginalPointsAndEdges, getVisibleNodes, addStartingAndEndingNodes, getObstructingEdge, isVisible, createGraphFromGeoJson */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadPoints\", function() { return loadPoints; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"restoreOriginalPointsAndEdges\", function() { return restoreOriginalPointsAndEdges; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getVisibleNodes\", function() { return getVisibleNodes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addStartingAndEndingNodes\", function() { return addStartingAndEndingNodes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getObstructingEdge\", function() { return getObstructingEdge; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isVisible\", function() { return isVisible; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createGraphFromGeoJson\", function() { return createGraphFromGeoJson; });\n/* harmony import */ var ngraph_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngraph.graph */ \"../node_modules/ngraph.graph/index.js\");\n/* harmony import */ var ngraph_graph__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ngraph_graph__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _EdgeKeys__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EdgeKeys */ \"../src/EdgeKeys.js\");\n/* harmony import */ var _EdgeKey__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EdgeKey */ \"../src/EdgeKey.js\");\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Point */ \"../src/Point.js\");\n/* harmony import */ var _setupStructure__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./setupStructure */ \"../src/setupStructure.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \"../src/utils.js\");\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./debug */ \"../src/debug.js\");\n/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Edge */ \"../src/Edge.js\");\n\n\n\n\n\n\n //eslint-disable-line\n\n\n\nconst points = []\nconst edges = []\nconst polygons = []\nvar originalPointsLength = 0\nvar originalEdgesLength = 0\n\nfunction loadPoints (geojson) {\n  Object(_setupStructure__WEBPACK_IMPORTED_MODULE_4__[\"setupStructure\"])(geojson, edges, points, polygons)\n  originalPointsLength = points.length\n  originalEdgesLength = edges.length\n}\n\nfunction restoreOriginalPointsAndEdges() {\n  while(points.length > originalPointsLength) {\n    points.pop()\n  }\n\n  while(edges.length > originalEdgesLength) {\n    edges.pop()\n  }\n}\n\n// add start and end to nodes and check for visibility\nfunction getVisibleNodes (pt1, start, end) {\n  if(start != null && end != null){\n    // edges.push(new Edge(points[points.length-1], start))\n    edges.push(new _Edge__WEBPACK_IMPORTED_MODULE_7__[\"Edge\"](start, end))\n    // edges.push(new Edge(end, points[0]))\n\n    // start.prevPoint = points[points.length-1]\n    // start.nextPoint = end\n    start.polygonID = -1\n\n    // end.prevPoint = start\n    // end.nextPoint = points[0]\n    end.polygonID = -1\n\n    points.push(start)\n    points.push(end)\n  }\n\n  const g = ngraph_graph__WEBPACK_IMPORTED_MODULE_0___default()()\n  const pointsLen = points.length\n  const clonedPoints = clonePoints()\n\n  for (var i = 0; i < pointsLen; i++) {\n    const p = points[i]\n    if (!p.isPointEqual(pt1)) continue\n\n    const prevPoint = p.prevPoint\n    const nextPoint = p.nextPoint\n\n    sortPoints(p, clonedPoints)\n    // _renderSortedPoints(p, clonedPoints)\n\n    const openEdges = new _EdgeKeys__WEBPACK_IMPORTED_MODULE_1__[\"EdgeKeys\"]()\n    const pointInf = new _Point__WEBPACK_IMPORTED_MODULE_3__[\"Point\"]([_utils__WEBPACK_IMPORTED_MODULE_5__[\"INF\"], p.y], null)\n    for (let ii = 0; ii < pointsLen; ii++) {\n      const e = edges[ii]\n      if (typeof e != 'undefined' && e.containsPoint(p)) continue\n      if (typeof e != 'undefined' && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p, pointInf, e)) {\n        if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, e.p1, pointInf) || Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, e.p2, pointInf)) continue\n        openEdges.addKey(new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, pointInf, e))\n      }\n    }\n    // // _renderOpenEdges(p, openEdges.keys)\n\n    const visible = []\n    if(prevPoint) visible.push(prevPoint)\n    if(nextPoint) visible.push(nextPoint)\n    let prev = null\n    let prevVisible = null\n\n    for (let ii = 0; ii < pointsLen; ii++) {\n      const p2 = clonedPoints[ii]\n      // if (!p2.isPointEqual(pt2)) continue\n      if (p2.isPointEqual(p)) continue\n      if (p.angleToPoint(p2) > Math.pi) break\n\n      if (openEdges.keys.length > 0) {\n        for (let iii = 0; iii < p2.edges.length; iii++) {\n          const e = p2.edges[iii]\n          if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, p2, e.getOtherPointInEdge(p2)) === -1) {\n            const k = new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, p2, e)\n            const index = openEdges.findKeyPosition(k) - 1\n            if (index !== -1 && openEdges.keys[index].matchesOtherKey(k)) {\n              openEdges.keys.splice(index, 1)\n            }\n          }\n        }\n      }\n\n      let isVisible = false\n      if (prev === null || Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, prev, p2) !== 0 || !Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, prev, p2)) {\n        if (openEdges.keys.length === 0) {\n          isVisible = true\n        } else if (!Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p, p2, openEdges.keys[0].edge)) {\n          isVisible = true\n        }\n      } else if (!prevVisible) {\n        isVisible = false\n      } else {\n        isVisible = true\n        for (let iii = 0; iii < openEdges.keys.length; iii++) {\n          const e = openEdges.keys[iii]\n          if (!e.edge.containsPoint(prev) && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(prev, p2, e.edge)) {\n            isVisible = false\n            break\n          }\n        }\n        if (isVisible && edgeInPolygon(prev, p2)) isVisible = false\n      }\n\n      const isInAdjacentPoints = (prevPoint != null && p2.isPointEqual(prevPoint)) || (nextPoint != null && p2.isPointEqual(nextPoint))\n      if (isVisible && !isInAdjacentPoints) isVisible = !edgeInPolygon(p, p2)\n\n      if (isVisible) visible.push(p2)\n      \n\n      for (let iii = 0; iii < p2.edges.length; iii++) {\n        const e = p2.edges[iii]\n        if (!e.containsPoint(p) && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, p2, e.getOtherPointInEdge(p2)) === 1) {\n          const k = new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, p2, e)\n          openEdges.addKey(k)\n        }\n      }\n\n      prev = p2\n      prevVisible = isVisible\n    }\n\n    return visible;\n\n    // const nodeId = createNodeId(p)\n    // g.addNode(nodeId, { x: p.x, y: p.y })\n\n    // for (var ii = 0; ii < visible.length; ii++) {\n    //   const otherNodeId = createNodeId(visible[ii])\n    //   g.addNode(otherNodeId, { x: visible[ii].x, y: visible[ii].y })\n    //   g.addLink(nodeId, otherNodeId)\n    // }\n  }\n  // return g\n}\n\nfunction addStartingAndEndingNodes (start, end) {\n  // edges.push(new Edge(points[points.length-1], start))\n  edges.push(new _Edge__WEBPACK_IMPORTED_MODULE_7__[\"Edge\"](start, end))\n  // edges.push(new Edge(end, points[0]))\n\n  // start.prevPoint = points[points.length-1]\n  // start.nextPoint = end\n  start.polygonID = -1\n\n  // end.prevPoint = start\n  // end.nextPoint = points[0]\n  end.polygonID = -1\n\n  points.push(start)\n  points.push(end)\n}\n\n\n\nfunction getObstructingEdge (pt1, pt2, polygonPoints) {\n  const g = ngraph_graph__WEBPACK_IMPORTED_MODULE_0___default()()\n  var points = polygonPoints.slice(0)\n  points.push(pt1)\n  points.push(pt2)\n  const pointsLen = points.length\n  const clonedPoints = points.slice(0)\n\n\n  for (var i = 0; i < pointsLen; i++) {\n    const p = points[i]\n    if (!p.isPointEqual(pt1)) continue\n\n    const prevPoint = p.prevPoint\n    const nextPoint = p.nextPoint\n\n    sortPoints(p, clonedPoints)\n    // _renderSortedPoints(p, clonedPoints)\n\n    const openEdges = new _EdgeKeys__WEBPACK_IMPORTED_MODULE_1__[\"EdgeKeys\"]()\n    const pointInf = new _Point__WEBPACK_IMPORTED_MODULE_3__[\"Point\"]([_utils__WEBPACK_IMPORTED_MODULE_5__[\"INF\"], p.y], null)\n    for (let ii = 0; ii < pointsLen; ii++) {\n      const e = edges[ii]\n      if (typeof e != 'undefined' && e.containsPoint(p)) continue\n      if (typeof e != 'undefined' && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p, pointInf, e)) {\n        if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, e.p1, pointInf) || Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, e.p2, pointInf)) continue\n        openEdges.addKey(new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, pointInf, e))\n      }\n    }\n    // // _renderOpenEdges(p, openEdges.keys)\n\n    const visible = []\n    visible.push(prevPoint)\n    visible.push(nextPoint)\n    let prev = null\n    let prevVisible = null\n\n    for (let ii = 0; ii < pointsLen; ii++) {\n      const p2 = clonedPoints[ii]\n      // if (!p2.isPointEqual(pt2)) continue\n\n      if (p2.isPointEqual(p)) continue\n      if (p.angleToPoint(p2) > Math.pi) break\n\n      if (openEdges.keys.length > 0) {\n        for (let iii = 0; iii < p2.edges.length; iii++) {\n          const e = p2.edges[iii]\n          if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, p2, e.getOtherPointInEdge(p2)) === -1) {\n            const k = new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, p2, e)\n            const index = openEdges.findKeyPosition(k) - 1\n            if (index !== -1 && openEdges.keys[index].matchesOtherKey(k)) {\n              openEdges.keys.splice(index, 1)\n            }\n          }\n        }\n      }\n\n      if (p2.isPointEqual(pt2))\n        pt2 = pt2\n      let isVisible = false\n      if (prev === null || Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, prev, p2) !== 0 || !Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, prev, p2)) {\n        if (openEdges.keys.length === 0) {\n          isVisible = true\n        } else if (!Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p, p2, openEdges.keys[0].edge)) {\n          isVisible = true\n        }\n      } else if (!prevVisible) {\n        isVisible = false\n      } else {\n        isVisible = true\n        for (let iii = 0; iii < openEdges.keys.length; iii++) {\n          const e = openEdges.keys[iii]\n          if (!e.edge.containsPoint(prev) && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(prev, p2, e.edge)) {\n            isVisible = false\n            break\n          }\n        }\n        if (isVisible && edgeInPolygon(prev, p2)) isVisible = false\n      }\n\n      const isInAdjacentPoints = (prevPoint != null && p2.isPointEqual(prevPoint)) || (nextPoint != null && p2.isPointEqual(nextPoint))\n      if (isVisible && !isInAdjacentPoints) isVisible = !edgeInPolygon(p, p2)\n\n      // if same polygon visisble\n      if (p.polygonID == p2.polygonID && p.polygonID != -1)\n        isVisible = true\n\n      // if (isVisible) visible.push(p2)\n      if (p2.isPointEqual(pt2))\n       return isVisible ? null : openEdges.keys[0].edge;\n      \n\n      for (let iii = 0; iii < p2.edges.length; iii++) {\n        const e = p2.edges[iii]\n        if (!e.containsPoint(p) && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, p2, e.getOtherPointInEdge(p2)) === 1) {\n          const k = new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, p2, e)\n          openEdges.addKey(k)\n        }\n      }\n\n      prev = p2\n      prevVisible = isVisible\n    }\n\n    // const nodeId = createNodeId(p)\n    // g.addNode(nodeId, { x: p.x, y: p.y })\n\n    // for (var ii = 0; ii < visible.length; ii++) {\n    //   const otherNodeId = createNodeId(visible[ii])\n    //   g.addNode(otherNodeId, { x: visible[ii].x, y: visible[ii].y })\n    //   g.addLink(nodeId, otherNodeId)\n    // }\n  }\n  // return g\n}\n\n// export function getObstructingEdge (pt1, pt2) {\n//   const g = createGraph()\n//   const pointsLen = points.length\n//   const clonedPoints = clonePoints()\n\n//   for (var i = 0; i < pointsLen; i++) {\n//     const p = points[i]\n//     if (!p.isPointEqual(pt1)) continue\n\n//     const prevPoint = p.prevPoint\n//     const nextPoint = p.nextPoint\n\n//     sortPoints(p, clonedPoints)\n//     // _renderSortedPoints(p, clonedPoints)\n\n//     const openEdges = new EdgeKeys()\n//     const pointInf = new Point([INF, p.y], null)\n//     for (let ii = 0; ii < pointsLen; ii++) {\n//       const e = edges[ii]\n//       if (typeof e != 'undefined' && e.containsPoint(p)) continue\n//       if (typeof e != 'undefined' && edgeIntersect(p, pointInf, e)) {\n//         if (onSegment(p, e.p1, pointInf) || onSegment(p, e.p2, pointInf)) continue\n//         openEdges.addKey(new EdgeKey(p, pointInf, e))\n//       }\n//     }\n//     // // _renderOpenEdges(p, openEdges.keys)\n\n//     const visible = []\n//     visible.push(prevPoint)\n//     visible.push(nextPoint)\n//     let prev = null\n//     let prevVisible = null\n\n//     for (let ii = 0; ii < pointsLen; ii++) {\n//       const p2 = clonedPoints[ii]\n//       // if (!p2.isPointEqual(pt2)) continue\n\n//       if (p2.isPointEqual(p)) continue\n//       if (p.angleToPoint(p2) > Math.pi) break\n\n//       if (openEdges.keys.length > 0) {\n//         for (let iii = 0; iii < p2.edges.length; iii++) {\n//           const e = p2.edges[iii]\n//           if (ccw(p, p2, e.getOtherPointInEdge(p2)) === -1) {\n//             const k = new EdgeKey(p, p2, e)\n//             const index = openEdges.findKeyPosition(k) - 1\n//             if (index !== -1 && openEdges.keys[index].matchesOtherKey(k)) {\n//               openEdges.keys.splice(index, 1)\n//             }\n//           }\n//         }\n//       }\n\n//       if (p2.isPointEqual(pt2))\n//         pt2 = pt2\n//       let isVisible = false\n//       if (prev === null || ccw(p, prev, p2) !== 0 || !onSegment(p, prev, p2)) {\n//         if (openEdges.keys.length === 0) {\n//           isVisible = true\n//         } else if (!edgeIntersect(p, p2, openEdges.keys[0].edge)) {\n//           isVisible = true\n//         }\n//       } else if (!prevVisible) {\n//         isVisible = false\n//       } else {\n//         isVisible = true\n//         for (let iii = 0; iii < openEdges.keys.length; iii++) {\n//           const e = openEdges.keys[iii]\n//           if (!e.edge.containsPoint(prev) && edgeIntersect(prev, p2, e.edge)) {\n//             isVisible = false\n//             break\n//           }\n//         }\n//         if (isVisible && edgeInPolygon(prev, p2)) isVisible = false\n//       }\n\n//       const isInAdjacentPoints = (prevPoint != null && p2.isPointEqual(prevPoint)) || (nextPoint != null && p2.isPointEqual(nextPoint))\n//       if (isVisible && !isInAdjacentPoints) isVisible = !edgeInPolygon(p, p2)\n\n//       // if same polygon visisble\n//       if (p.polygonID == p2.polygonID && p.polygonID != -1)\n//         isVisible = true\n\n//       // if (isVisible) visible.push(p2)\n//       if (p2.isPointEqual(pt2))\n//        return isVisible ? null : openEdges.keys[0].edge;\n      \n\n//       for (let iii = 0; iii < p2.edges.length; iii++) {\n//         const e = p2.edges[iii]\n//         if (!e.containsPoint(p) && ccw(p, p2, e.getOtherPointInEdge(p2)) === 1) {\n//           const k = new EdgeKey(p, p2, e)\n//           openEdges.addKey(k)\n//         }\n//       }\n\n//       prev = p2\n//       prevVisible = isVisible\n//     }\n\n//     // const nodeId = createNodeId(p)\n//     // g.addNode(nodeId, { x: p.x, y: p.y })\n\n//     // for (var ii = 0; ii < visible.length; ii++) {\n//     //   const otherNodeId = createNodeId(visible[ii])\n//     //   g.addNode(otherNodeId, { x: visible[ii].x, y: visible[ii].y })\n//     //   g.addLink(nodeId, otherNodeId)\n//     // }\n//   }\n//   // return g\n// }\n\nfunction isVisible (pt1, pt2) {\n  const g = ngraph_graph__WEBPACK_IMPORTED_MODULE_0___default()()\n  const pointsLen = points.length\n  const clonedPoints = clonePoints()\n\n  for (var i = 0; i < pointsLen; i++) {\n    const p = points[i]\n    if (!p.isPointEqual(pt1)) continue\n\n    const prevPoint = p.prevPoint\n    const nextPoint = p.nextPoint\n\n    sortPoints(p, clonedPoints)\n    // _renderSortedPoints(p, clonedPoints)\n\n    const openEdges = new _EdgeKeys__WEBPACK_IMPORTED_MODULE_1__[\"EdgeKeys\"]()\n    const pointInf = new _Point__WEBPACK_IMPORTED_MODULE_3__[\"Point\"]([_utils__WEBPACK_IMPORTED_MODULE_5__[\"INF\"], p.y], null)\n    for (let ii = 0; ii < pointsLen; ii++) {\n      const e = edges[ii]\n      if (typeof e != 'undefined' && e.containsPoint(p)) continue\n      if (typeof e != 'undefined' && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p, pointInf, e)) {\n        if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, e.p1, pointInf) || Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, e.p2, pointInf)) continue\n        openEdges.addKey(new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, pointInf, e))\n      }\n    }\n    // // _renderOpenEdges(p, openEdges.keys)\n\n    const visible = []\n    visible.push(prevPoint)\n    visible.push(nextPoint)\n    let prev = null\n    let prevVisible = null\n\n    for (let ii = 0; ii < pointsLen; ii++) {\n      const p2 = clonedPoints[ii]\n      // if (!p2.isPointEqual(pt2)) continue\n\n      if (p2.isPointEqual(p)) continue\n      if (p.angleToPoint(p2) > Math.pi) break\n\n      if (openEdges.keys.length > 0) {\n        for (let iii = 0; iii < p2.edges.length; iii++) {\n          const e = p2.edges[iii]\n          if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, p2, e.getOtherPointInEdge(p2)) === -1) {\n            const k = new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, p2, e)\n            const index = openEdges.findKeyPosition(k) - 1\n            if (index !== -1 && openEdges.keys[index].matchesOtherKey(k)) {\n              openEdges.keys.splice(index, 1)\n            }\n          }\n        }\n      }\n\n      if (p2.isPointEqual(pt2))\n        pt2 = pt2\n      let isVisible = false\n      if (prev === null || Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, prev, p2) !== 0 || !Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"onSegment\"])(p, prev, p2)) {\n        if (openEdges.keys.length === 0) {\n          isVisible = true\n        } else if (!Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p, p2, openEdges.keys[0].edge)) {\n          isVisible = true\n        }\n      } else if (!prevVisible) {\n        isVisible = false\n      } else {\n        isVisible = true\n        for (let iii = 0; iii < openEdges.keys.length; iii++) {\n          const e = openEdges.keys[iii]\n          if (!e.edge.containsPoint(prev) && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(prev, p2, e.edge)) {\n            isVisible = false\n            break\n          }\n        }\n        if (isVisible && edgeInPolygon(prev, p2)) isVisible = false\n      }\n\n      const isInAdjacentPoints = (prevPoint != null && p2.isPointEqual(prevPoint)) || (nextPoint != null && p2.isPointEqual(nextPoint))\n      if (isVisible && !isInAdjacentPoints) isVisible = !edgeInPolygon(p, p2)\n\n      // if (isVisible) visible.push(p2)\n      if (p2.isPointEqual(pt2)) return isVisible;\n      \n\n      for (let iii = 0; iii < p2.edges.length; iii++) {\n        const e = p2.edges[iii]\n        if (!e.containsPoint(p) && Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p, p2, e.getOtherPointInEdge(p2)) === 1) {\n          const k = new _EdgeKey__WEBPACK_IMPORTED_MODULE_2__[\"EdgeKey\"](p, p2, e)\n          openEdges.addKey(k)\n        }\n      }\n\n      prev = p2\n      prevVisible = isVisible\n    }\n\n    // const nodeId = createNodeId(p)\n    // g.addNode(nodeId, { x: p.x, y: p.y })\n\n    // for (var ii = 0; ii < visible.length; ii++) {\n    //   const otherNodeId = createNodeId(visible[ii])\n    //   g.addNode(otherNodeId, { x: visible[ii].x, y: visible[ii].y })\n    //   g.addLink(nodeId, otherNodeId)\n    // }\n  }\n  // return g\n}\n\nfunction createGraphFromGeoJson (geojson) {\n\n  Object(_setupStructure__WEBPACK_IMPORTED_MODULE_4__[\"setupStructure\"])(geojson, edges, points, polygons)\n\n  return processGraph()\n}\n\n  function processGraph () {\n    const g = ngraph_graph__WEBPACK_IMPORTED_MODULE_0___default()()\n    const pointsLen = points.length\n    const clonedPoints = clonePoints()\n\n    for (var i = 0; i < pointsLen; i++) {\n      const p = points[i]\n      const prevPoint = p.prevPoint\n      const nextPoint = p.nextPoint\n\n      // sortPoints(p, clonedPoints)\n      // _renderSortedPoints(p, clonedPoints)\n\n      // const openEdges = new EdgeKeys()\n      // const pointInf = new Point([INF, p.y], null)\n      // for (let ii = 0; ii < pointsLen; ii++) {\n      //   const e = edges[ii]\n      //   if (e.containsPoint(p)) continue\n      //   if (edgeIntersect(p, pointInf, e)) {\n      //     if (onSegment(p, e.p1, pointInf) || onSegment(p, e.p2, pointInf)) continue\n      //     openEdges.addKey(new EdgeKey(p, pointInf, e))\n      //   }\n      // }\n      // // _renderOpenEdges(p, openEdges.keys)\n\n      const visible = []\n      if(i == 0)\n        visible.push(prevPoint)\n\n      visible.push(nextPoint)\n      let prev = null\n      let prevVisible = null\n\n      // for (let ii = 0; ii < pointsLen; ii++) {\n      //   const p2 = clonedPoints[ii]\n      //   if (p2.isPointEqual(p)) continue\n      //   if (p.angleToPoint(p2) > Math.pi) break\n\n      //   if (openEdges.keys.length > 0) {\n      //     for (let iii = 0; iii < p2.edges.length; iii++) {\n      //       const e = p2.edges[iii]\n      //       if (ccw(p, p2, e.getOtherPointInEdge(p2)) === -1) {\n      //         const k = new EdgeKey(p, p2, e)\n      //         const index = openEdges.findKeyPosition(k) - 1\n      //         if (index !== -1 && openEdges.keys[index].matchesOtherKey(k)) {\n      //           openEdges.keys.splice(index, 1)\n      //         }\n      //       }\n      //     }\n      //   }\n\n      //   let isVisible = false\n      //   if (prev === null || ccw(p, prev, p2) !== 0 || !onSegment(p, prev, p2)) {\n      //     if (openEdges.keys.length === 0) {\n      //       isVisible = true\n      //     } else if (!edgeIntersect(p, p2, openEdges.keys[0].edge)) {\n      //       isVisible = true\n      //     }\n      //   } else if (!prevVisible) {\n      //     isVisible = false\n      //   } else {\n      //     isVisible = true\n      //     for (let iii = 0; iii < openEdges.keys.length; iii++) {\n      //       const e = openEdges.keys[iii]\n      //       if (!e.edge.containsPoint(prev) && edgeIntersect(prev, p2, e.edge)) {\n      //         isVisible = false\n      //         break\n      //       }\n      //     }\n      //     if (isVisible && edgeInPolygon(prev, p2)) isVisible = false\n      //   }\n\n      //   const isInAdjacentPoints = p2.isPointEqual(prevPoint) || p2.isPointEqual(nextPoint)\n      //   if (isVisible && !isInAdjacentPoints) isVisible = !edgeInPolygon(p, p2)\n\n      //   if (isVisible) visible.push(p2)\n\n      //   for (let iii = 0; iii < p2.edges.length; iii++) {\n      //     const e = p2.edges[iii]\n      //     if (!e.containsPoint(p) && ccw(p, p2, e.getOtherPointInEdge(p2)) === 1) {\n      //       const k = new EdgeKey(p, p2, e)\n      //       openEdges.addKey(k)\n      //     }\n      //   }\n\n      //   prev = p2\n      //   prevVisible = isVisible\n      // }\n\n      const nodeId = createNodeId(p)\n      g.addNode(nodeId, { x: p.x, y: p.y })\n\n      for (var ii = 0; ii < visible.length; ii++) {\n        const otherNodeId = createNodeId(visible[ii])\n        g.addNode(otherNodeId, { x: visible[ii].x, y: visible[ii].y })\n        g.addLink(nodeId, otherNodeId)\n      }\n    }\n    return g\n  }\n\n  function createNodeId (p) {\n    return p.x + ',' + p.y\n  }\n\n  function clonePoints () {\n    return points.slice(0)\n  }\n\n  function sortPoints (point, clonedPoints) {\n    clonedPoints.sort((a, b) => {\n      const angle1 = point.angleToPoint(a)\n      const angle2 = point.angleToPoint(b)\n      if (angle1 < angle2) return -1\n      if (angle1 > angle2) return 1\n      const dist1 = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"calcEdgeDistance\"])(point, a)\n      const dist2 = Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"calcEdgeDistance\"])(point, b)\n      if (dist1 < dist2) return -1\n      if (dist1 > dist2) return 1\n      return 0\n    })\n  }\n\n  function edgeInPolygon (p1, p2) {\n    if (p1.polygonID !== p2.polygonID) return false\n    if (p1.polygonID === -1 || p2.polygonID === -1) return false\n    const midPoint = new _Point__WEBPACK_IMPORTED_MODULE_3__[\"Point\"]([(p1.x + p2.x) / 2, (p1.y + p2.y) / 2], null)\n    return polygonCrossing(midPoint, polygons[p1.polygonID])\n  }\n\n  function polygonCrossing (p1, polyEdges) {\n    const p2 = new _Point__WEBPACK_IMPORTED_MODULE_3__[\"Point\"]([_utils__WEBPACK_IMPORTED_MODULE_5__[\"INF\"], p1.y], null)\n    let intersectCount = 0\n    let coFlag = false\n    let coDir = 0\n\n    for (let i = 0; i < polyEdges.length; i++) {\n      const e = polyEdges[i]\n      if (p1.y < e.p1.y && p1.y < e.p2.y) continue\n      if (p1.y > e.p1.y && p1.y > e.p2.y) continue\n      const co0 = (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p1, e.p1, p2) === 0) && (e.p1.x > p1.x)\n      const co1 = (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"ccw\"])(p1, e.p2, p2) === 0) && (e.p2.x > p1.x)\n      const coPoint = co0 ? e.p1 : e.p2\n      if (co0 || co1) {\n        coDir = e.getOtherPointInEdge(coPoint).y > p1.y ? coDir++ : coDir--\n        if (coFlag) {\n          if (coDir === 0) intersectCount++\n          coFlag = false\n          coDir = 0\n        } else {\n          coFlag = true\n        }\n      } else if (Object(_utils__WEBPACK_IMPORTED_MODULE_5__[\"edgeIntersect\"])(p1, p2, e)) {\n        intersectCount++\n      }\n    }\n    if (intersectCount % 2 === 0) return false\n    return true\n  }\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/createGraphFromGeoJson.js\n");

/***/ }),

/***/ "../src/debug.js":
/*!***********************!*\
  !*** ../src/debug.js ***!
  \***********************/
/*! exports provided: _renderSortedPoints, _renderOpenEdges */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_renderSortedPoints\", function() { return _renderSortedPoints; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_renderOpenEdges\", function() { return _renderOpenEdges; });\n\nfunction _renderSortedPoints (point, sortedPoints) {\n  const map = window.map\n  var sortedPointsLg = null\n\n  L.NumberedDivIcon = createNumberDiv()\n\n  setCurrentPoint(point)\n\n  if (sortedPointsLg === null) sortedPointsLg = L.layerGroup([]).addTo(map)\n  else sortedPointsLg.clearLayers()\n  sortedPoints.forEach((p, index) => {\n    return L.marker([p.y, p.x], {\n      color: 'black',\n      icon: new L.NumberedDivIcon({ number: index.toString() })\n    }).addTo(sortedPointsLg)\n  })\n\n  // debugger\n}\n\nfunction _renderOpenEdges (point, edges) {\n  const map = window.map\n  const currentPoint = L.circleMarker([point.y, point.x], {\n    radius: 20,\n    color: 'green'\n  }).addTo(map)\n  var openEdges = L.layerGroup([]).addTo(map)\n\n  edges.forEach((e, index) => {\n    L.polyline([[e.edge.p1.y, e.edge.p1.x], [e.edge.p2.y, e.edge.p2.x]], {\n      color: 'red'\n    }).addTo(openEdges)\n  })\n\n  // debugger\n  openEdges.clearLayers()\n  map.removeLayer(currentPoint)\n}\n\nfunction setCurrentPoint (point) {\n  const map = window.map\n  let currentPoint = null\n\n  if (currentPoint !== null) map.removeLayer(currentPoint)\n\n  currentPoint = L.circleMarker([point.y, point.x], {\n    radius: 20,\n    color: 'green'\n  }).addTo(map)\n\n}\n\nfunction createNumberDiv () {\n  return L.Icon.extend({\n    options: {\n      number: '',\n      iconSize: new L.Point(25, 25),\n      className: 'leaflet-div-icon'\n    },\n    createIcon: function () {\n      var div = document.createElement('div')\n      var numdiv = document.createElement('div')\n      numdiv.setAttribute('class', 'number')\n      numdiv.innerHTML = this.options['number'] || ''\n      div.appendChild(numdiv)\n      this._setIconStyles(div, 'icon')\n      return div\n    }\n  })\n}\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2RlYnVnLmpzP2M5MWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNPO0FBQ1A7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDJCQUEyQjtBQUM5RCxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsImZpbGUiOiIuLi9zcmMvZGVidWcuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCBmdW5jdGlvbiBfcmVuZGVyU29ydGVkUG9pbnRzIChwb2ludCwgc29ydGVkUG9pbnRzKSB7XG4gIGNvbnN0IG1hcCA9IHdpbmRvdy5tYXBcbiAgdmFyIHNvcnRlZFBvaW50c0xnID0gbnVsbFxuXG4gIEwuTnVtYmVyZWREaXZJY29uID0gY3JlYXRlTnVtYmVyRGl2KClcblxuICBzZXRDdXJyZW50UG9pbnQocG9pbnQpXG5cbiAgaWYgKHNvcnRlZFBvaW50c0xnID09PSBudWxsKSBzb3J0ZWRQb2ludHNMZyA9IEwubGF5ZXJHcm91cChbXSkuYWRkVG8obWFwKVxuICBlbHNlIHNvcnRlZFBvaW50c0xnLmNsZWFyTGF5ZXJzKClcbiAgc29ydGVkUG9pbnRzLmZvckVhY2goKHAsIGluZGV4KSA9PiB7XG4gICAgcmV0dXJuIEwubWFya2VyKFtwLnksIHAueF0sIHtcbiAgICAgIGNvbG9yOiAnYmxhY2snLFxuICAgICAgaWNvbjogbmV3IEwuTnVtYmVyZWREaXZJY29uKHsgbnVtYmVyOiBpbmRleC50b1N0cmluZygpIH0pXG4gICAgfSkuYWRkVG8oc29ydGVkUG9pbnRzTGcpXG4gIH0pXG5cbiAgLy8gZGVidWdnZXJcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIF9yZW5kZXJPcGVuRWRnZXMgKHBvaW50LCBlZGdlcykge1xuICBjb25zdCBtYXAgPSB3aW5kb3cubWFwXG4gIGNvbnN0IGN1cnJlbnRQb2ludCA9IEwuY2lyY2xlTWFya2VyKFtwb2ludC55LCBwb2ludC54XSwge1xuICAgIHJhZGl1czogMjAsXG4gICAgY29sb3I6ICdncmVlbidcbiAgfSkuYWRkVG8obWFwKVxuICB2YXIgb3BlbkVkZ2VzID0gTC5sYXllckdyb3VwKFtdKS5hZGRUbyhtYXApXG5cbiAgZWRnZXMuZm9yRWFjaCgoZSwgaW5kZXgpID0+IHtcbiAgICBMLnBvbHlsaW5lKFtbZS5lZGdlLnAxLnksIGUuZWRnZS5wMS54XSwgW2UuZWRnZS5wMi55LCBlLmVkZ2UucDIueF1dLCB7XG4gICAgICBjb2xvcjogJ3JlZCdcbiAgICB9KS5hZGRUbyhvcGVuRWRnZXMpXG4gIH0pXG5cbiAgLy8gZGVidWdnZXJcbiAgb3BlbkVkZ2VzLmNsZWFyTGF5ZXJzKClcbiAgbWFwLnJlbW92ZUxheWVyKGN1cnJlbnRQb2ludClcbn1cblxuZnVuY3Rpb24gc2V0Q3VycmVudFBvaW50IChwb2ludCkge1xuICBjb25zdCBtYXAgPSB3aW5kb3cubWFwXG4gIGxldCBjdXJyZW50UG9pbnQgPSBudWxsXG5cbiAgaWYgKGN1cnJlbnRQb2ludCAhPT0gbnVsbCkgbWFwLnJlbW92ZUxheWVyKGN1cnJlbnRQb2ludClcblxuICBjdXJyZW50UG9pbnQgPSBMLmNpcmNsZU1hcmtlcihbcG9pbnQueSwgcG9pbnQueF0sIHtcbiAgICByYWRpdXM6IDIwLFxuICAgIGNvbG9yOiAnZ3JlZW4nXG4gIH0pLmFkZFRvKG1hcClcblxufVxuXG5mdW5jdGlvbiBjcmVhdGVOdW1iZXJEaXYgKCkge1xuICByZXR1cm4gTC5JY29uLmV4dGVuZCh7XG4gICAgb3B0aW9uczoge1xuICAgICAgbnVtYmVyOiAnJyxcbiAgICAgIGljb25TaXplOiBuZXcgTC5Qb2ludCgyNSwgMjUpLFxuICAgICAgY2xhc3NOYW1lOiAnbGVhZmxldC1kaXYtaWNvbidcbiAgICB9LFxuICAgIGNyZWF0ZUljb246IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgdmFyIG51bWRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICBudW1kaXYuc2V0QXR0cmlidXRlKCdjbGFzcycsICdudW1iZXInKVxuICAgICAgbnVtZGl2LmlubmVySFRNTCA9IHRoaXMub3B0aW9uc1snbnVtYmVyJ10gfHwgJydcbiAgICAgIGRpdi5hcHBlbmRDaGlsZChudW1kaXYpXG4gICAgICB0aGlzLl9zZXRJY29uU3R5bGVzKGRpdiwgJ2ljb24nKVxuICAgICAgcmV0dXJuIGRpdlxuICAgIH1cbiAgfSlcbn1cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/debug.js\n");

/***/ }),

/***/ "../src/main.js":
/*!**********************!*\
  !*** ../src/main.js ***!
  \**********************/
/*! exports provided: createGraphFromGeoJson, getVisibleNodes, isVisible, loadPoints, restoreOriginalPointsAndEdges, getObstructingEdge, addStartingAndEndingNodes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createGraphFromGeoJson */ \"../src/createGraphFromGeoJson.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"createGraphFromGeoJson\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"createGraphFromGeoJson\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getVisibleNodes\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"getVisibleNodes\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"isVisible\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"isVisible\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"loadPoints\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"loadPoints\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"restoreOriginalPointsAndEdges\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"restoreOriginalPointsAndEdges\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"getObstructingEdge\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"getObstructingEdge\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"addStartingAndEndingNodes\", function() { return _createGraphFromGeoJson__WEBPACK_IMPORTED_MODULE_0__[\"addStartingAndEndingNodes\"]; });\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL21haW4uanM/ZDNmZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF1TCIsImZpbGUiOiIuLi9zcmMvbWFpbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGNyZWF0ZUdyYXBoRnJvbUdlb0pzb24sIGdldFZpc2libGVOb2RlcywgaXNWaXNpYmxlLCBsb2FkUG9pbnRzLCByZXN0b3JlT3JpZ2luYWxQb2ludHNBbmRFZGdlcywgZ2V0T2JzdHJ1Y3RpbmdFZGdlLCBhZGRTdGFydGluZ0FuZEVuZGluZ05vZGVzIH0gZnJvbSAnLi9jcmVhdGVHcmFwaEZyb21HZW9Kc29uJ1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/main.js\n");

/***/ }),

/***/ "../src/setupStructure.js":
/*!********************************!*\
  !*** ../src/setupStructure.js ***!
  \********************************/
/*! exports provided: setupStructure */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupStructure\", function() { return setupStructure; });\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Point */ \"../src/Point.js\");\n/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Edge */ \"../src/Edge.js\");\n\n\n\nfunction setupStructure (geojson, edges, points, polygons) {\n  const geom = geojson.type === 'Feature' ? geojson.geometry : geojson\n\n  let coords = geom.features\n\n  // standardise the input\n  if (geom.type === 'Polygon') coords = [coords]\n\n  for (let i = 0; i < coords.length; i++) {\n    const contour = []\n    polygons.push(contour)\n\n    for (let ii = 0; ii < coords[i].geometry.coordinates.length; ii++) {\n      let prevPoint = new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"](coords[i].geometry.coordinates[ii][0], i)\n      let currentPoint = new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"](coords[i].geometry.coordinates[ii][1], i)\n      prevPoint.nextPoint = currentPoint\n      let nextPoint = new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"](coords[i].geometry.coordinates[ii][2], i)\n      linkPoints(prevPoint, currentPoint, nextPoint)\n\n      points.push(prevPoint)\n\n      let prevEdge = new _Edge__WEBPACK_IMPORTED_MODULE_1__[\"Edge\"](prevPoint, currentPoint) // eslint-disable-line\n      edges.push(prevEdge)\n      contour.push(prevEdge)\n\n      // Save me for later\n      const firstPoint = prevPoint\n\n      prevPoint = currentPoint\n      currentPoint = nextPoint\n\n      for (let iii = 2; iii < coords[i].geometry.coordinates[ii].length - 2; iii++) {\n        points.push(prevPoint)\n\n        nextPoint = new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"](coords[i].geometry.coordinates[ii][iii + 1], i)\n\n        linkPoints(prevPoint, currentPoint, nextPoint)\n\n        const e = new _Edge__WEBPACK_IMPORTED_MODULE_1__[\"Edge\"](prevPoint, currentPoint) // eslint-disable-line\n\n        edges.push(e)\n        contour.push(e)\n\n        prevPoint = currentPoint\n        currentPoint = nextPoint\n        prevEdge = e\n      }\n\n      linkPoints(prevPoint, currentPoint, firstPoint)\n\n      const secondLastEdge = new _Edge__WEBPACK_IMPORTED_MODULE_1__[\"Edge\"](prevEdge.p2, currentPoint)\n\n      edges.push(secondLastEdge)\n      contour.push(secondLastEdge)\n\n      const lastEdge = new _Edge__WEBPACK_IMPORTED_MODULE_1__[\"Edge\"](currentPoint, firstPoint) // eslint-disable-line\n      linkPoints(currentPoint, firstPoint, firstPoint.nextPoint)\n\n      edges.push(lastEdge)\n      contour.push(lastEdge)\n\n      points.push(prevPoint)\n      points.push(nextPoint)\n    }\n  }\n}\n\n// export function setupStructure (geojson, edges, points, polygons) {\n//   const geom = geojson.type === 'Feature' ? geojson.geometry : geojson\n\n//   let coords = geom.coordinates\n\n//   // standardise the input\n//   if (geom.type === 'Polygon') coords = [coords]\n\n//   for (let i = 0; i < coords.length; i++) {\n//     const contour = []\n//     polygons.push(contour)\n\n//     for (let ii = 0; ii < coords[i].length; ii++) {\n//       let prevPoint = new Point(coords[i][ii][0], i)\n//       let currentPoint = new Point(coords[i][ii][1], i)\n//       prevPoint.nextPoint = currentPoint\n//       let nextPoint = new Point(coords[i][ii][2], i)\n//       linkPoints(prevPoint, currentPoint, nextPoint)\n\n//       points.push(prevPoint)\n\n//       let prevEdge = new Edge(prevPoint, currentPoint) // eslint-disable-line\n//       edges.push(prevEdge)\n//       contour.push(prevEdge)\n\n//       // Save me for later\n//       const firstPoint = prevPoint\n\n//       prevPoint = currentPoint\n//       currentPoint = nextPoint\n\n//       for (let iii = 2; iii < coords[i][ii].length - 2; iii++) {\n//         points.push(prevPoint)\n\n//         nextPoint = new Point(coords[i][ii][iii + 1], i)\n\n//         linkPoints(prevPoint, currentPoint, nextPoint)\n\n//         const e = new Edge(prevPoint, currentPoint) // eslint-disable-line\n\n//         edges.push(e)\n//         contour.push(e)\n\n//         prevPoint = currentPoint\n//         currentPoint = nextPoint\n//         prevEdge = e\n//       }\n\n//       linkPoints(prevPoint, currentPoint, firstPoint)\n\n//       const secondLastEdge = new Edge(prevEdge.p2, currentPoint)\n\n//       edges.push(secondLastEdge)\n//       contour.push(secondLastEdge)\n\n//       const lastEdge = new Edge(currentPoint, firstPoint) // eslint-disable-line\n//       linkPoints(currentPoint, firstPoint, firstPoint.nextPoint)\n\n//       edges.push(lastEdge)\n//       contour.push(lastEdge)\n\n//       points.push(prevPoint)\n//       points.push(nextPoint)\n//     }\n//   }\n// }\n\nfunction linkPoints (prevPoint, currentPoint, nextPoint) {\n  currentPoint.prevPoint = prevPoint\n  currentPoint.nextPoint = nextPoint\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3NldHVwU3RydWN0dXJlLmpzPzI2ZmEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBK0I7QUFDRjs7QUFFdEI7QUFDUDs7QUFFQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQixtQkFBbUI7QUFDcEM7QUFDQTs7QUFFQSxvQkFBb0IsNENBQTRDO0FBQ2hFLDBCQUEwQiw0Q0FBSztBQUMvQiw2QkFBNkIsNENBQUs7QUFDbEM7QUFDQSwwQkFBMEIsNENBQUs7QUFDL0I7O0FBRUE7O0FBRUEseUJBQXlCLDBDQUFJO0FBQzdCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHVCQUF1QixxREFBcUQ7QUFDNUU7O0FBRUEsd0JBQXdCLDRDQUFLOztBQUU3Qjs7QUFFQSxzQkFBc0IsMENBQUk7O0FBRTFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsaUNBQWlDLDBDQUFJOztBQUVyQztBQUNBOztBQUVBLDJCQUEyQiwwQ0FBSTtBQUMvQjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTs7QUFFQSx1QkFBdUIsdUJBQXVCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSwwQkFBMEIsZ0NBQWdDO0FBQzFEOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuLi9zcmMvc2V0dXBTdHJ1Y3R1cmUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb2ludCB9IGZyb20gJy4vUG9pbnQnXG5pbXBvcnQgeyBFZGdlIH0gZnJvbSAnLi9FZGdlJ1xuXG5leHBvcnQgZnVuY3Rpb24gc2V0dXBTdHJ1Y3R1cmUgKGdlb2pzb24sIGVkZ2VzLCBwb2ludHMsIHBvbHlnb25zKSB7XG4gIGNvbnN0IGdlb20gPSBnZW9qc29uLnR5cGUgPT09ICdGZWF0dXJlJyA/IGdlb2pzb24uZ2VvbWV0cnkgOiBnZW9qc29uXG5cbiAgbGV0IGNvb3JkcyA9IGdlb20uZmVhdHVyZXNcblxuICAvLyBzdGFuZGFyZGlzZSB0aGUgaW5wdXRcbiAgaWYgKGdlb20udHlwZSA9PT0gJ1BvbHlnb24nKSBjb29yZHMgPSBbY29vcmRzXVxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgY29vcmRzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgY29udG91ciA9IFtdXG4gICAgcG9seWdvbnMucHVzaChjb250b3VyKVxuXG4gICAgZm9yIChsZXQgaWkgPSAwOyBpaSA8IGNvb3Jkc1tpXS5nZW9tZXRyeS5jb29yZGluYXRlcy5sZW5ndGg7IGlpKyspIHtcbiAgICAgIGxldCBwcmV2UG9pbnQgPSBuZXcgUG9pbnQoY29vcmRzW2ldLmdlb21ldHJ5LmNvb3JkaW5hdGVzW2lpXVswXSwgaSlcbiAgICAgIGxldCBjdXJyZW50UG9pbnQgPSBuZXcgUG9pbnQoY29vcmRzW2ldLmdlb21ldHJ5LmNvb3JkaW5hdGVzW2lpXVsxXSwgaSlcbiAgICAgIHByZXZQb2ludC5uZXh0UG9pbnQgPSBjdXJyZW50UG9pbnRcbiAgICAgIGxldCBuZXh0UG9pbnQgPSBuZXcgUG9pbnQoY29vcmRzW2ldLmdlb21ldHJ5LmNvb3JkaW5hdGVzW2lpXVsyXSwgaSlcbiAgICAgIGxpbmtQb2ludHMocHJldlBvaW50LCBjdXJyZW50UG9pbnQsIG5leHRQb2ludClcblxuICAgICAgcG9pbnRzLnB1c2gocHJldlBvaW50KVxuXG4gICAgICBsZXQgcHJldkVkZ2UgPSBuZXcgRWRnZShwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCkgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgICAgZWRnZXMucHVzaChwcmV2RWRnZSlcbiAgICAgIGNvbnRvdXIucHVzaChwcmV2RWRnZSlcblxuICAgICAgLy8gU2F2ZSBtZSBmb3IgbGF0ZXJcbiAgICAgIGNvbnN0IGZpcnN0UG9pbnQgPSBwcmV2UG9pbnRcblxuICAgICAgcHJldlBvaW50ID0gY3VycmVudFBvaW50XG4gICAgICBjdXJyZW50UG9pbnQgPSBuZXh0UG9pbnRcblxuICAgICAgZm9yIChsZXQgaWlpID0gMjsgaWlpIDwgY29vcmRzW2ldLmdlb21ldHJ5LmNvb3JkaW5hdGVzW2lpXS5sZW5ndGggLSAyOyBpaWkrKykge1xuICAgICAgICBwb2ludHMucHVzaChwcmV2UG9pbnQpXG5cbiAgICAgICAgbmV4dFBvaW50ID0gbmV3IFBvaW50KGNvb3Jkc1tpXS5nZW9tZXRyeS5jb29yZGluYXRlc1tpaV1baWlpICsgMV0sIGkpXG5cbiAgICAgICAgbGlua1BvaW50cyhwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCwgbmV4dFBvaW50KVxuXG4gICAgICAgIGNvbnN0IGUgPSBuZXcgRWRnZShwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCkgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgICAgIGVkZ2VzLnB1c2goZSlcbiAgICAgICAgY29udG91ci5wdXNoKGUpXG5cbiAgICAgICAgcHJldlBvaW50ID0gY3VycmVudFBvaW50XG4gICAgICAgIGN1cnJlbnRQb2ludCA9IG5leHRQb2ludFxuICAgICAgICBwcmV2RWRnZSA9IGVcbiAgICAgIH1cblxuICAgICAgbGlua1BvaW50cyhwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCwgZmlyc3RQb2ludClcblxuICAgICAgY29uc3Qgc2Vjb25kTGFzdEVkZ2UgPSBuZXcgRWRnZShwcmV2RWRnZS5wMiwgY3VycmVudFBvaW50KVxuXG4gICAgICBlZGdlcy5wdXNoKHNlY29uZExhc3RFZGdlKVxuICAgICAgY29udG91ci5wdXNoKHNlY29uZExhc3RFZGdlKVxuXG4gICAgICBjb25zdCBsYXN0RWRnZSA9IG5ldyBFZGdlKGN1cnJlbnRQb2ludCwgZmlyc3RQb2ludCkgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgICAgbGlua1BvaW50cyhjdXJyZW50UG9pbnQsIGZpcnN0UG9pbnQsIGZpcnN0UG9pbnQubmV4dFBvaW50KVxuXG4gICAgICBlZGdlcy5wdXNoKGxhc3RFZGdlKVxuICAgICAgY29udG91ci5wdXNoKGxhc3RFZGdlKVxuXG4gICAgICBwb2ludHMucHVzaChwcmV2UG9pbnQpXG4gICAgICBwb2ludHMucHVzaChuZXh0UG9pbnQpXG4gICAgfVxuICB9XG59XG5cbi8vIGV4cG9ydCBmdW5jdGlvbiBzZXR1cFN0cnVjdHVyZSAoZ2VvanNvbiwgZWRnZXMsIHBvaW50cywgcG9seWdvbnMpIHtcbi8vICAgY29uc3QgZ2VvbSA9IGdlb2pzb24udHlwZSA9PT0gJ0ZlYXR1cmUnID8gZ2VvanNvbi5nZW9tZXRyeSA6IGdlb2pzb25cblxuLy8gICBsZXQgY29vcmRzID0gZ2VvbS5jb29yZGluYXRlc1xuXG4vLyAgIC8vIHN0YW5kYXJkaXNlIHRoZSBpbnB1dFxuLy8gICBpZiAoZ2VvbS50eXBlID09PSAnUG9seWdvbicpIGNvb3JkcyA9IFtjb29yZHNdXG5cbi8vICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb29yZHMubGVuZ3RoOyBpKyspIHtcbi8vICAgICBjb25zdCBjb250b3VyID0gW11cbi8vICAgICBwb2x5Z29ucy5wdXNoKGNvbnRvdXIpXG5cbi8vICAgICBmb3IgKGxldCBpaSA9IDA7IGlpIDwgY29vcmRzW2ldLmxlbmd0aDsgaWkrKykge1xuLy8gICAgICAgbGV0IHByZXZQb2ludCA9IG5ldyBQb2ludChjb29yZHNbaV1baWldWzBdLCBpKVxuLy8gICAgICAgbGV0IGN1cnJlbnRQb2ludCA9IG5ldyBQb2ludChjb29yZHNbaV1baWldWzFdLCBpKVxuLy8gICAgICAgcHJldlBvaW50Lm5leHRQb2ludCA9IGN1cnJlbnRQb2ludFxuLy8gICAgICAgbGV0IG5leHRQb2ludCA9IG5ldyBQb2ludChjb29yZHNbaV1baWldWzJdLCBpKVxuLy8gICAgICAgbGlua1BvaW50cyhwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCwgbmV4dFBvaW50KVxuXG4vLyAgICAgICBwb2ludHMucHVzaChwcmV2UG9pbnQpXG5cbi8vICAgICAgIGxldCBwcmV2RWRnZSA9IG5ldyBFZGdlKHByZXZQb2ludCwgY3VycmVudFBvaW50KSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4vLyAgICAgICBlZGdlcy5wdXNoKHByZXZFZGdlKVxuLy8gICAgICAgY29udG91ci5wdXNoKHByZXZFZGdlKVxuXG4vLyAgICAgICAvLyBTYXZlIG1lIGZvciBsYXRlclxuLy8gICAgICAgY29uc3QgZmlyc3RQb2ludCA9IHByZXZQb2ludFxuXG4vLyAgICAgICBwcmV2UG9pbnQgPSBjdXJyZW50UG9pbnRcbi8vICAgICAgIGN1cnJlbnRQb2ludCA9IG5leHRQb2ludFxuXG4vLyAgICAgICBmb3IgKGxldCBpaWkgPSAyOyBpaWkgPCBjb29yZHNbaV1baWldLmxlbmd0aCAtIDI7IGlpaSsrKSB7XG4vLyAgICAgICAgIHBvaW50cy5wdXNoKHByZXZQb2ludClcblxuLy8gICAgICAgICBuZXh0UG9pbnQgPSBuZXcgUG9pbnQoY29vcmRzW2ldW2lpXVtpaWkgKyAxXSwgaSlcblxuLy8gICAgICAgICBsaW5rUG9pbnRzKHByZXZQb2ludCwgY3VycmVudFBvaW50LCBuZXh0UG9pbnQpXG5cbi8vICAgICAgICAgY29uc3QgZSA9IG5ldyBFZGdlKHByZXZQb2ludCwgY3VycmVudFBvaW50KSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG5cbi8vICAgICAgICAgZWRnZXMucHVzaChlKVxuLy8gICAgICAgICBjb250b3VyLnB1c2goZSlcblxuLy8gICAgICAgICBwcmV2UG9pbnQgPSBjdXJyZW50UG9pbnRcbi8vICAgICAgICAgY3VycmVudFBvaW50ID0gbmV4dFBvaW50XG4vLyAgICAgICAgIHByZXZFZGdlID0gZVxuLy8gICAgICAgfVxuXG4vLyAgICAgICBsaW5rUG9pbnRzKHByZXZQb2ludCwgY3VycmVudFBvaW50LCBmaXJzdFBvaW50KVxuXG4vLyAgICAgICBjb25zdCBzZWNvbmRMYXN0RWRnZSA9IG5ldyBFZGdlKHByZXZFZGdlLnAyLCBjdXJyZW50UG9pbnQpXG5cbi8vICAgICAgIGVkZ2VzLnB1c2goc2Vjb25kTGFzdEVkZ2UpXG4vLyAgICAgICBjb250b3VyLnB1c2goc2Vjb25kTGFzdEVkZ2UpXG5cbi8vICAgICAgIGNvbnN0IGxhc3RFZGdlID0gbmV3IEVkZ2UoY3VycmVudFBvaW50LCBmaXJzdFBvaW50KSAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4vLyAgICAgICBsaW5rUG9pbnRzKGN1cnJlbnRQb2ludCwgZmlyc3RQb2ludCwgZmlyc3RQb2ludC5uZXh0UG9pbnQpXG5cbi8vICAgICAgIGVkZ2VzLnB1c2gobGFzdEVkZ2UpXG4vLyAgICAgICBjb250b3VyLnB1c2gobGFzdEVkZ2UpXG5cbi8vICAgICAgIHBvaW50cy5wdXNoKHByZXZQb2ludClcbi8vICAgICAgIHBvaW50cy5wdXNoKG5leHRQb2ludClcbi8vICAgICB9XG4vLyAgIH1cbi8vIH1cblxuZnVuY3Rpb24gbGlua1BvaW50cyAocHJldlBvaW50LCBjdXJyZW50UG9pbnQsIG5leHRQb2ludCkge1xuICBjdXJyZW50UG9pbnQucHJldlBvaW50ID0gcHJldlBvaW50XG4gIGN1cnJlbnRQb2ludC5uZXh0UG9pbnQgPSBuZXh0UG9pbnRcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/setupStructure.js\n");

/***/ }),

/***/ "../src/utils.js":
/*!***********************!*\
  !*** ../src/utils.js ***!
  \***********************/
/*! exports provided: pi1, pi2, INF, edgeIntersect, ccw, onSegment, angle2, pointEdgeDistance, intersectPoint, calcEdgeDistance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pi1\", function() { return pi1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pi2\", function() { return pi2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"INF\", function() { return INF; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"edgeIntersect\", function() { return edgeIntersect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ccw\", function() { return ccw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onSegment\", function() { return onSegment; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"angle2\", function() { return angle2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pointEdgeDistance\", function() { return pointEdgeDistance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"intersectPoint\", function() { return intersectPoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calcEdgeDistance\", function() { return calcEdgeDistance; });\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Point */ \"../src/Point.js\");\n\n\nconst pi1 = Math.PI * 3 / 2\nconst pi2 = Math.PI / 2\n\nconst INF = 10000\nconst COLIN_TOLERANCE = 13\nconst T = Math.pow(10, COLIN_TOLERANCE)\nconst T2 = Math.pow(10.0, COLIN_TOLERANCE)\n\nfunction edgeIntersect (p1, q1, edge) {\n  const p2 = edge.p1\n  const q2 = edge.p2\n  const o1 = ccw(p1, q1, p2)\n  const o2 = ccw(p1, q1, q2)\n  const o3 = ccw(p2, q2, p1)\n  const o4 = ccw(p2, q2, q1)\n  if (o1 !== o2 && o3 !== o4) return true\n  if (o1 === 0 && onSegment(p1, p2, q1)) return true\n  if (o2 === 0 && onSegment(p1, q2, q1)) return true\n  if (o3 === 0 && onSegment(p2, p1, q2)) return true\n  if (o4 === 0 && onSegment(p2, q1, q2)) return true\n  return false\n}\n\nfunction ccw (a, b, c) {\n  const area = Math.round(((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) * T) / T2\n  if (area > 0) return 1\n  if (area < 0) return -1\n  return 0\n}\n\nfunction onSegment (p, q, r) {\n  if (q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x)) {\n    if (q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y)) return true\n  }\n  return false\n}\n\nfunction angle2 (p1, p2, p3) {\n  const a = Math.pow((p3.x - p2.x), 2) + Math.pow((p3.y - p2.y), 2)\n  const b = Math.pow((p3.x - p1.x), 2) + Math.pow((p3.y - p1.y), 2)\n  const c = Math.pow((p2.x - p1.x), 2) + Math.pow((p2.y - p1.y), 2)\n  return Math.acos((a + c - b) / (2 * Math.sqrt(a) * Math.sqrt(c)))\n}\n\nfunction pointEdgeDistance (p1, p2, edge) {\n  const ip = intersectPoint(p1, p2, edge)\n  return ip !== null ? calcEdgeDistance(p1, ip) : 0\n}\n\nfunction intersectPoint (p1, p2, edge) {\n  if (edge.containsPoint(p1)) return p1\n  if (edge.containsPoint(p2)) return p2\n  if (edge.p1.x === edge.p2.x) {\n    if (p1.x === p2.x) return null\n    const pslope = (p1.y - p2.y) / (p1.x - p2.x)\n    const intersectX = edge.p1.x\n    const intersectY = pslope * (intersectX - p1.x) + p1.y\n    return new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"]([intersectX, intersectY], null)\n  }\n  if (p1.x === p2.x) {\n    const eslope = (edge.p1.y - edge.p2.y) / (edge.p1.x - edge.p2.x)\n    const intersectX = p1.x\n    const intersectY = eslope * (intersectX - edge.p1.x) + edge.p1.y\n    return new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"]([intersectX, intersectY], null)\n  }\n\n  const pslope = (p1.y - p2.y) / (p1.x - p2.x)\n  const eslope = (edge.p1.y - edge.p2.y) / (edge.p1.x - edge.p2.x)\n\n  if (pslope === eslope) return null\n  const intersectX = (eslope * edge.p1.x - pslope * p1.x + p1.y - edge.p1.y) / (eslope - pslope)\n  const intersectY = eslope * (intersectX - edge.p1.x) + edge.p1.y\n  return new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"]([intersectX, intersectY], null)\n}\n\nfunction calcEdgeDistance (p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2))\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3V0aWxzLmpzPzUwZjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQStCOztBQUV4QjtBQUNBOztBQUVBO0FBQ1A7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNENBQUs7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNENBQUs7QUFDcEI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDRDQUFLO0FBQ2xCOztBQUVPO0FBQ1A7QUFDQSIsImZpbGUiOiIuLi9zcmMvdXRpbHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb2ludCB9IGZyb20gJy4vUG9pbnQnXG5cbmV4cG9ydCBjb25zdCBwaTEgPSBNYXRoLlBJICogMyAvIDJcbmV4cG9ydCBjb25zdCBwaTIgPSBNYXRoLlBJIC8gMlxuXG5leHBvcnQgY29uc3QgSU5GID0gMTAwMDBcbmNvbnN0IENPTElOX1RPTEVSQU5DRSA9IDEzXG5jb25zdCBUID0gTWF0aC5wb3coMTAsIENPTElOX1RPTEVSQU5DRSlcbmNvbnN0IFQyID0gTWF0aC5wb3coMTAuMCwgQ09MSU5fVE9MRVJBTkNFKVxuXG5leHBvcnQgZnVuY3Rpb24gZWRnZUludGVyc2VjdCAocDEsIHExLCBlZGdlKSB7XG4gIGNvbnN0IHAyID0gZWRnZS5wMVxuICBjb25zdCBxMiA9IGVkZ2UucDJcbiAgY29uc3QgbzEgPSBjY3cocDEsIHExLCBwMilcbiAgY29uc3QgbzIgPSBjY3cocDEsIHExLCBxMilcbiAgY29uc3QgbzMgPSBjY3cocDIsIHEyLCBwMSlcbiAgY29uc3QgbzQgPSBjY3cocDIsIHEyLCBxMSlcbiAgaWYgKG8xICE9PSBvMiAmJiBvMyAhPT0gbzQpIHJldHVybiB0cnVlXG4gIGlmIChvMSA9PT0gMCAmJiBvblNlZ21lbnQocDEsIHAyLCBxMSkpIHJldHVybiB0cnVlXG4gIGlmIChvMiA9PT0gMCAmJiBvblNlZ21lbnQocDEsIHEyLCBxMSkpIHJldHVybiB0cnVlXG4gIGlmIChvMyA9PT0gMCAmJiBvblNlZ21lbnQocDIsIHAxLCBxMikpIHJldHVybiB0cnVlXG4gIGlmIChvNCA9PT0gMCAmJiBvblNlZ21lbnQocDIsIHExLCBxMikpIHJldHVybiB0cnVlXG4gIHJldHVybiBmYWxzZVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY2N3IChhLCBiLCBjKSB7XG4gIGNvbnN0IGFyZWEgPSBNYXRoLnJvdW5kKCgoYi54IC0gYS54KSAqIChjLnkgLSBhLnkpIC0gKGIueSAtIGEueSkgKiAoYy54IC0gYS54KSkgKiBUKSAvIFQyXG4gIGlmIChhcmVhID4gMCkgcmV0dXJuIDFcbiAgaWYgKGFyZWEgPCAwKSByZXR1cm4gLTFcbiAgcmV0dXJuIDBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uU2VnbWVudCAocCwgcSwgcikge1xuICBpZiAocS54IDw9IE1hdGgubWF4KHAueCwgci54KSAmJiBxLnggPj0gTWF0aC5taW4ocC54LCByLngpKSB7XG4gICAgaWYgKHEueSA8PSBNYXRoLm1heChwLnksIHIueSkgJiYgcS55ID49IE1hdGgubWluKHAueSwgci55KSkgcmV0dXJuIHRydWVcbiAgfVxuICByZXR1cm4gZmFsc2Vcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFuZ2xlMiAocDEsIHAyLCBwMykge1xuICBjb25zdCBhID0gTWF0aC5wb3coKHAzLnggLSBwMi54KSwgMikgKyBNYXRoLnBvdygocDMueSAtIHAyLnkpLCAyKVxuICBjb25zdCBiID0gTWF0aC5wb3coKHAzLnggLSBwMS54KSwgMikgKyBNYXRoLnBvdygocDMueSAtIHAxLnkpLCAyKVxuICBjb25zdCBjID0gTWF0aC5wb3coKHAyLnggLSBwMS54KSwgMikgKyBNYXRoLnBvdygocDIueSAtIHAxLnkpLCAyKVxuICByZXR1cm4gTWF0aC5hY29zKChhICsgYyAtIGIpIC8gKDIgKiBNYXRoLnNxcnQoYSkgKiBNYXRoLnNxcnQoYykpKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcG9pbnRFZGdlRGlzdGFuY2UgKHAxLCBwMiwgZWRnZSkge1xuICBjb25zdCBpcCA9IGludGVyc2VjdFBvaW50KHAxLCBwMiwgZWRnZSlcbiAgcmV0dXJuIGlwICE9PSBudWxsID8gY2FsY0VkZ2VEaXN0YW5jZShwMSwgaXApIDogMFxufVxuXG5leHBvcnQgZnVuY3Rpb24gaW50ZXJzZWN0UG9pbnQgKHAxLCBwMiwgZWRnZSkge1xuICBpZiAoZWRnZS5jb250YWluc1BvaW50KHAxKSkgcmV0dXJuIHAxXG4gIGlmIChlZGdlLmNvbnRhaW5zUG9pbnQocDIpKSByZXR1cm4gcDJcbiAgaWYgKGVkZ2UucDEueCA9PT0gZWRnZS5wMi54KSB7XG4gICAgaWYgKHAxLnggPT09IHAyLngpIHJldHVybiBudWxsXG4gICAgY29uc3QgcHNsb3BlID0gKHAxLnkgLSBwMi55KSAvIChwMS54IC0gcDIueClcbiAgICBjb25zdCBpbnRlcnNlY3RYID0gZWRnZS5wMS54XG4gICAgY29uc3QgaW50ZXJzZWN0WSA9IHBzbG9wZSAqIChpbnRlcnNlY3RYIC0gcDEueCkgKyBwMS55XG4gICAgcmV0dXJuIG5ldyBQb2ludChbaW50ZXJzZWN0WCwgaW50ZXJzZWN0WV0sIG51bGwpXG4gIH1cbiAgaWYgKHAxLnggPT09IHAyLngpIHtcbiAgICBjb25zdCBlc2xvcGUgPSAoZWRnZS5wMS55IC0gZWRnZS5wMi55KSAvIChlZGdlLnAxLnggLSBlZGdlLnAyLngpXG4gICAgY29uc3QgaW50ZXJzZWN0WCA9IHAxLnhcbiAgICBjb25zdCBpbnRlcnNlY3RZID0gZXNsb3BlICogKGludGVyc2VjdFggLSBlZGdlLnAxLngpICsgZWRnZS5wMS55XG4gICAgcmV0dXJuIG5ldyBQb2ludChbaW50ZXJzZWN0WCwgaW50ZXJzZWN0WV0sIG51bGwpXG4gIH1cblxuICBjb25zdCBwc2xvcGUgPSAocDEueSAtIHAyLnkpIC8gKHAxLnggLSBwMi54KVxuICBjb25zdCBlc2xvcGUgPSAoZWRnZS5wMS55IC0gZWRnZS5wMi55KSAvIChlZGdlLnAxLnggLSBlZGdlLnAyLngpXG5cbiAgaWYgKHBzbG9wZSA9PT0gZXNsb3BlKSByZXR1cm4gbnVsbFxuICBjb25zdCBpbnRlcnNlY3RYID0gKGVzbG9wZSAqIGVkZ2UucDEueCAtIHBzbG9wZSAqIHAxLnggKyBwMS55IC0gZWRnZS5wMS55KSAvIChlc2xvcGUgLSBwc2xvcGUpXG4gIGNvbnN0IGludGVyc2VjdFkgPSBlc2xvcGUgKiAoaW50ZXJzZWN0WCAtIGVkZ2UucDEueCkgKyBlZGdlLnAxLnlcbiAgcmV0dXJuIG5ldyBQb2ludChbaW50ZXJzZWN0WCwgaW50ZXJzZWN0WV0sIG51bGwpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYWxjRWRnZURpc3RhbmNlIChwMSwgcDIpIHtcbiAgcmV0dXJuIE1hdGguc3FydChNYXRoLnBvdyhwMi54IC0gcDEueCwgMikgKyBNYXRoLnBvdyhwMi55IC0gcDEueSwgMikpXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../src/utils.js\n");

/***/ }),

/***/ "./src/Edge.js":
/*!*********************!*\
  !*** ./src/Edge.js ***!
  \*********************/
/*! exports provided: Edge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Edge\", function() { return Edge; });\nclass Edge {\n  constructor (p1, p2) {\n    this.p1 = p1\n    this.p2 = p2\n\n    p1.edges.push(this)\n    p2.edges.push(this)\n  }\n\n  getOtherPointInEdge (point) {\n    return this.p1.isPointEqual(point) ? this.p2 : this.p1\n  }\n\n  areEdgesEqual (otherEdge) {\n    if (this.p1.isPointEqual(otherEdge.p1) && this.p2.isPointEqual(otherEdge.p2)) return true\n    if (this.p1.isPointEqual(otherEdge.p2) && this.p2.isPointEqual(otherEdge.p1)) return true\n    return false\n  }\n\n  containsPoint (point) {\n    if (this.p1.isPointEqual(point) || this.p2.isPointEqual(point)) return true\n    return false\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvRWRnZS5qcz80MDBiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL3NyYy9FZGdlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEVkZ2Uge1xuICBjb25zdHJ1Y3RvciAocDEsIHAyKSB7XG4gICAgdGhpcy5wMSA9IHAxXG4gICAgdGhpcy5wMiA9IHAyXG5cbiAgICBwMS5lZGdlcy5wdXNoKHRoaXMpXG4gICAgcDIuZWRnZXMucHVzaCh0aGlzKVxuICB9XG5cbiAgZ2V0T3RoZXJQb2ludEluRWRnZSAocG9pbnQpIHtcbiAgICByZXR1cm4gdGhpcy5wMS5pc1BvaW50RXF1YWwocG9pbnQpID8gdGhpcy5wMiA6IHRoaXMucDFcbiAgfVxuXG4gIGFyZUVkZ2VzRXF1YWwgKG90aGVyRWRnZSkge1xuICAgIGlmICh0aGlzLnAxLmlzUG9pbnRFcXVhbChvdGhlckVkZ2UucDEpICYmIHRoaXMucDIuaXNQb2ludEVxdWFsKG90aGVyRWRnZS5wMikpIHJldHVybiB0cnVlXG4gICAgaWYgKHRoaXMucDEuaXNQb2ludEVxdWFsKG90aGVyRWRnZS5wMikgJiYgdGhpcy5wMi5pc1BvaW50RXF1YWwob3RoZXJFZGdlLnAxKSkgcmV0dXJuIHRydWVcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIGNvbnRhaW5zUG9pbnQgKHBvaW50KSB7XG4gICAgaWYgKHRoaXMucDEuaXNQb2ludEVxdWFsKHBvaW50KSB8fCB0aGlzLnAyLmlzUG9pbnRFcXVhbChwb2ludCkpIHJldHVybiB0cnVlXG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/Edge.js\n");

/***/ }),

/***/ "./src/Point.js":
/*!**********************!*\
  !*** ./src/Point.js ***!
  \**********************/
/*! exports provided: Point */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Point\", function() { return Point; });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\n\nclass Point {\n\n  constructor (coords, polygonID) {\n    if (polygonID === null) polygonID = -1\n    this.x = coords[0]\n    this.y = coords[1]\n    this.polygonID = polygonID\n    this.edges = []\n    this.prevPoint = null\n    this.nextPoint = null\n  }\n\n  isPointEqual (otherPoint) {\n    return this.x === otherPoint.x && this.y === otherPoint.y\n  }\n\n  angleToPoint (otherPoint) {\n    if (this.isPointEqual(otherPoint)) return 0\n    const dx = otherPoint.x - this.x\n    const dy = otherPoint.y - this.y\n    if (dx === 0) dy < 1 ? _utils__WEBPACK_IMPORTED_MODULE_0__[\"pi1\"] : _utils__WEBPACK_IMPORTED_MODULE_0__[\"pi2\"]\n    if (dy === 0) dx < 0 ? Math.PI : 0\n    if (dx < 0) return Math.PI + Math.atan(dy / dx)\n    if (dy < 0) return 2 * Math.PI + Math.atan(dy / dx)\n    return Math.atan(dy / dx)\n  }\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvUG9pbnQuanM/YzYxYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBa0M7O0FBRTNCOztBQUVQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsMENBQUcsR0FBRywwQ0FBRztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9zcmMvUG9pbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwaTEsIHBpMiB9IGZyb20gJy4vdXRpbHMnXG5cbmV4cG9ydCBjbGFzcyBQb2ludCB7XG5cbiAgY29uc3RydWN0b3IgKGNvb3JkcywgcG9seWdvbklEKSB7XG4gICAgaWYgKHBvbHlnb25JRCA9PT0gbnVsbCkgcG9seWdvbklEID0gLTFcbiAgICB0aGlzLnggPSBjb29yZHNbMF1cbiAgICB0aGlzLnkgPSBjb29yZHNbMV1cbiAgICB0aGlzLnBvbHlnb25JRCA9IHBvbHlnb25JRFxuICAgIHRoaXMuZWRnZXMgPSBbXVxuICAgIHRoaXMucHJldlBvaW50ID0gbnVsbFxuICAgIHRoaXMubmV4dFBvaW50ID0gbnVsbFxuICB9XG5cbiAgaXNQb2ludEVxdWFsIChvdGhlclBvaW50KSB7XG4gICAgcmV0dXJuIHRoaXMueCA9PT0gb3RoZXJQb2ludC54ICYmIHRoaXMueSA9PT0gb3RoZXJQb2ludC55XG4gIH1cblxuICBhbmdsZVRvUG9pbnQgKG90aGVyUG9pbnQpIHtcbiAgICBpZiAodGhpcy5pc1BvaW50RXF1YWwob3RoZXJQb2ludCkpIHJldHVybiAwXG4gICAgY29uc3QgZHggPSBvdGhlclBvaW50LnggLSB0aGlzLnhcbiAgICBjb25zdCBkeSA9IG90aGVyUG9pbnQueSAtIHRoaXMueVxuICAgIGlmIChkeCA9PT0gMCkgZHkgPCAxID8gcGkxIDogcGkyXG4gICAgaWYgKGR5ID09PSAwKSBkeCA8IDAgPyBNYXRoLlBJIDogMFxuICAgIGlmIChkeCA8IDApIHJldHVybiBNYXRoLlBJICsgTWF0aC5hdGFuKGR5IC8gZHgpXG4gICAgaWYgKGR5IDwgMCkgcmV0dXJuIDIgKiBNYXRoLlBJICsgTWF0aC5hdGFuKGR5IC8gZHgpXG4gICAgcmV0dXJuIE1hdGguYXRhbihkeSAvIGR4KVxuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/Point.js\n");

/***/ }),

/***/ "./src/convex-hull.js":
/*!****************************!*\
  !*** ./src/convex-hull.js ***!
  \****************************/
/*! exports provided: makeConvexhull, convexhull */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"makeConvexhull\", function() { return makeConvexhull; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"convexhull\", function() { return convexhull; });\n/* \n * Convex hull algorithm - Library (JavaScript)\n * \n * Copyright (c) 2018 Project Nayuki\n * https://www.nayuki.io/page/convex-hull-algorithm\n * \n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n * \n * You should have received a copy of the GNU Lesser General Public License\n * along with this program (see COPYING.txt and COPYING.LESSER.txt).\n * If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n\n\n\t// Returns a new array of points representing the convex hull of\n\t// the given set of points. The convex hull excludes collinear points.\n\t// This algorithm runs in O(n log n) time.\nfunction makeConvexhull(points) {\n\t\tvar newPoints = points.slice();\n\t\tnewPoints.sort(POINT_COMPARATOR);\n\t\treturn makeHullPresorted(newPoints);\n\t};\n\nfunction convexhull() {\n\n};\n\n\t// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\n\tfunction makeHullPresorted(points) {\n\t\tif (points.length <= 1)\n\t\t\treturn points.slice();\n\t\t\n\t\t// Andrew's monotone chain algorithm. Positive y coordinates correspond to \"up\"\n\t\t// as per the mathematical convention, instead of \"down\" as per the computer\n\t\t// graphics convention. This doesn't affect the correctness of the result.\n\t\t\n\t\tvar upperHull = [];\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tvar p = points[i];\n\t\t\twhile (upperHull.length >= 2) {\n\t\t\t\tvar q = upperHull[upperHull.length - 1];\n\t\t\t\tvar r = upperHull[upperHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tupperHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupperHull.push(p);\n\t\t}\n\t\tupperHull.pop();\n\t\t\n\t\tvar lowerHull = [];\n\t\tfor (var i = points.length - 1; i >= 0; i--) {\n\t\t\tvar p = points[i];\n\t\t\twhile (lowerHull.length >= 2) {\n\t\t\t\tvar q = lowerHull[lowerHull.length - 1];\n\t\t\t\tvar r = lowerHull[lowerHull.length - 2];\n\t\t\t\tif ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x))\n\t\t\t\t\tlowerHull.pop();\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlowerHull.push(p);\n\t\t}\n\t\tlowerHull.pop();\n\t\t\n\t\tif (upperHull.length == 1 && lowerHull.length == 1 && upperHull[0].x == lowerHull[0].x && upperHull[0].y == lowerHull[0].y)\n\t\t\treturn upperHull;\n\t\telse\n\t\t\treturn upperHull.concat(lowerHull);\n\t};\n\t\n\t\n\tfunction POINT_COMPARATOR(a, b) {\n\t\tif (a.x < b.x)\n\t\t\treturn -1;\n\t\telse if (a.x > b.x)\n\t\t\treturn +1;\n\t\telse if (a.y < b.y)\n\t\t\treturn -1;\n\t\telse if (a.y > b.y)\n\t\t\treturn +1;\n\t\telse\n\t\t\treturn 0;\n\t};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29udmV4LWh1bGwuanM/NDRlMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7OztBQUdiO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRU87O0FBRVA7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCLG1CQUFtQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxpQ0FBaUMsUUFBUTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vc3JjL2NvbnZleC1odWxsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogXG4gKiBDb252ZXggaHVsbCBhbGdvcml0aG0gLSBMaWJyYXJ5IChKYXZhU2NyaXB0KVxuICogXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTggUHJvamVjdCBOYXl1a2lcbiAqIGh0dHBzOi8vd3d3Lm5heXVraS5pby9wYWdlL2NvbnZleC1odWxsLWFsZ29yaXRobVxuICogXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqIFxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKiBcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0gKHNlZSBDT1BZSU5HLnR4dCBhbmQgQ09QWUlORy5MRVNTRVIudHh0KS5cbiAqIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqL1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5cdC8vIFJldHVybnMgYSBuZXcgYXJyYXkgb2YgcG9pbnRzIHJlcHJlc2VudGluZyB0aGUgY29udmV4IGh1bGwgb2Zcblx0Ly8gdGhlIGdpdmVuIHNldCBvZiBwb2ludHMuIFRoZSBjb252ZXggaHVsbCBleGNsdWRlcyBjb2xsaW5lYXIgcG9pbnRzLlxuXHQvLyBUaGlzIGFsZ29yaXRobSBydW5zIGluIE8obiBsb2cgbikgdGltZS5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlQ29udmV4aHVsbChwb2ludHMpIHtcblx0XHR2YXIgbmV3UG9pbnRzID0gcG9pbnRzLnNsaWNlKCk7XG5cdFx0bmV3UG9pbnRzLnNvcnQoUE9JTlRfQ09NUEFSQVRPUik7XG5cdFx0cmV0dXJuIG1ha2VIdWxsUHJlc29ydGVkKG5ld1BvaW50cyk7XG5cdH07XG5cbmV4cG9ydCBmdW5jdGlvbiBjb252ZXhodWxsKCkge1xuXG59O1xuXG5cdC8vIFJldHVybnMgdGhlIGNvbnZleCBodWxsLCBhc3N1bWluZyB0aGF0IGVhY2ggcG9pbnRzW2ldIDw9IHBvaW50c1tpICsgMV0uIFJ1bnMgaW4gTyhuKSB0aW1lLlxuXHRmdW5jdGlvbiBtYWtlSHVsbFByZXNvcnRlZChwb2ludHMpIHtcblx0XHRpZiAocG9pbnRzLmxlbmd0aCA8PSAxKVxuXHRcdFx0cmV0dXJuIHBvaW50cy5zbGljZSgpO1xuXHRcdFxuXHRcdC8vIEFuZHJldydzIG1vbm90b25lIGNoYWluIGFsZ29yaXRobS4gUG9zaXRpdmUgeSBjb29yZGluYXRlcyBjb3JyZXNwb25kIHRvIFwidXBcIlxuXHRcdC8vIGFzIHBlciB0aGUgbWF0aGVtYXRpY2FsIGNvbnZlbnRpb24sIGluc3RlYWQgb2YgXCJkb3duXCIgYXMgcGVyIHRoZSBjb21wdXRlclxuXHRcdC8vIGdyYXBoaWNzIGNvbnZlbnRpb24uIFRoaXMgZG9lc24ndCBhZmZlY3QgdGhlIGNvcnJlY3RuZXNzIG9mIHRoZSByZXN1bHQuXG5cdFx0XG5cdFx0dmFyIHVwcGVySHVsbCA9IFtdO1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgcG9pbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgcCA9IHBvaW50c1tpXTtcblx0XHRcdHdoaWxlICh1cHBlckh1bGwubGVuZ3RoID49IDIpIHtcblx0XHRcdFx0dmFyIHEgPSB1cHBlckh1bGxbdXBwZXJIdWxsLmxlbmd0aCAtIDFdO1xuXHRcdFx0XHR2YXIgciA9IHVwcGVySHVsbFt1cHBlckh1bGwubGVuZ3RoIC0gMl07XG5cdFx0XHRcdGlmICgocS54IC0gci54KSAqIChwLnkgLSByLnkpID49IChxLnkgLSByLnkpICogKHAueCAtIHIueCkpXG5cdFx0XHRcdFx0dXBwZXJIdWxsLnBvcCgpO1xuXHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHR1cHBlckh1bGwucHVzaChwKTtcblx0XHR9XG5cdFx0dXBwZXJIdWxsLnBvcCgpO1xuXHRcdFxuXHRcdHZhciBsb3dlckh1bGwgPSBbXTtcblx0XHRmb3IgKHZhciBpID0gcG9pbnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG5cdFx0XHR2YXIgcCA9IHBvaW50c1tpXTtcblx0XHRcdHdoaWxlIChsb3dlckh1bGwubGVuZ3RoID49IDIpIHtcblx0XHRcdFx0dmFyIHEgPSBsb3dlckh1bGxbbG93ZXJIdWxsLmxlbmd0aCAtIDFdO1xuXHRcdFx0XHR2YXIgciA9IGxvd2VySHVsbFtsb3dlckh1bGwubGVuZ3RoIC0gMl07XG5cdFx0XHRcdGlmICgocS54IC0gci54KSAqIChwLnkgLSByLnkpID49IChxLnkgLSByLnkpICogKHAueCAtIHIueCkpXG5cdFx0XHRcdFx0bG93ZXJIdWxsLnBvcCgpO1xuXHRcdFx0XHRlbHNlXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRsb3dlckh1bGwucHVzaChwKTtcblx0XHR9XG5cdFx0bG93ZXJIdWxsLnBvcCgpO1xuXHRcdFxuXHRcdGlmICh1cHBlckh1bGwubGVuZ3RoID09IDEgJiYgbG93ZXJIdWxsLmxlbmd0aCA9PSAxICYmIHVwcGVySHVsbFswXS54ID09IGxvd2VySHVsbFswXS54ICYmIHVwcGVySHVsbFswXS55ID09IGxvd2VySHVsbFswXS55KVxuXHRcdFx0cmV0dXJuIHVwcGVySHVsbDtcblx0XHRlbHNlXG5cdFx0XHRyZXR1cm4gdXBwZXJIdWxsLmNvbmNhdChsb3dlckh1bGwpO1xuXHR9O1xuXHRcblx0XG5cdGZ1bmN0aW9uIFBPSU5UX0NPTVBBUkFUT1IoYSwgYikge1xuXHRcdGlmIChhLnggPCBiLngpXG5cdFx0XHRyZXR1cm4gLTE7XG5cdFx0ZWxzZSBpZiAoYS54ID4gYi54KVxuXHRcdFx0cmV0dXJuICsxO1xuXHRcdGVsc2UgaWYgKGEueSA8IGIueSlcblx0XHRcdHJldHVybiAtMTtcblx0XHRlbHNlIGlmIChhLnkgPiBiLnkpXG5cdFx0XHRyZXR1cm4gKzE7XG5cdFx0ZWxzZVxuXHRcdFx0cmV0dXJuIDA7XG5cdH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/convex-hull.js\n");

/***/ }),

/***/ "./src/graphHelper.js":
/*!****************************!*\
  !*** ./src/graphHelper.js ***!
  \****************************/
/*! exports provided: loadGraphFromFile, createGraphFromData, findRouteThroughGraph, updateGraphWithDynamicJSON */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadGraphFromFile\", function() { return loadGraphFromFile; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createGraphFromData\", function() { return createGraphFromData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"findRouteThroughGraph\", function() { return findRouteThroughGraph; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateGraphWithDynamicJSON\", function() { return updateGraphWithDynamicJSON; });\n/* harmony import */ var ngraph_fromjson__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngraph.fromjson */ \"../node_modules/ngraph.fromjson/index.js\");\n/* harmony import */ var ngraph_fromjson__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ngraph_fromjson__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ngraph_path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngraph.path */ \"../node_modules/ngraph.path/index.js\");\n/* harmony import */ var ngraph_path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ngraph_path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mapHelpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mapHelpers */ \"./src/mapHelpers.js\");\n\n\n\n// import Worker from './graphCreation.worker.js'\n\n\n\nvar dataJSON = \"\"\n\nfunction loadGraphFromFile (dataWithEdges) {\n  // function reqListener () {\n  //   const startLoad = window.performance.now()\n  //   dataJSON = this.responseText\n  //   const graph = fromjson(dataJSON)\n  //   dataJSON = dataJSON.substring(0, dataJSON.length-2)\n  //   dataJSON = dataJSON.substring(10, dataJSON.length)\n  //   console.log(graph.getNodesCount())\n  //   const endLoad = window.performance.now()\n  //   const timeTakenToLoad = parseInt(endLoad - startLoad)\n  //   console.log('Time to load: ', timeTakenToLoad)\n\n  //   setGraph(graph)\n  //   return findRouteThroughGraph(graph)\n  // }\n  Object(_mapHelpers__WEBPACK_IMPORTED_MODULE_2__[\"clearGraphRelatedData\"])()\n  // if(typeof window != \"undefined\")\n  //   const startLoad = window.performance.now()\n  dataJSON = dataWithEdges\n\n  var startCreation = new Date()\n\n  const graph = ngraph_fromjson__WEBPACK_IMPORTED_MODULE_0___default()(dataJSON)\n\n  var endCreation = new Date() - startCreation\n  console.log('Time to find path: ', endCreation)\n\n  dataJSON = dataJSON.substring(0, dataJSON.length-2)\n  dataJSON = dataJSON.substring(10, dataJSON.length)\n  console.log(graph.getNodesCount())\n  // if(typeof window != \"undefined\"){\n  //   const endLoad = window.performance.now()\n  //   const timeTakenToLoad = parseInt(endLoad - startLoad)\n  //   console.log('Time to load: ', timeTakenToLoad)\n  // }\n\n  Object(_mapHelpers__WEBPACK_IMPORTED_MODULE_2__[\"setGraph\"])(graph)\n  return findRouteThroughGraph(graph)\n\n\n\n\n\n\n\n  // var oReq = new XMLHttpRequest() //eslint-disable-line\n  // oReq.addEventListener('load', reqListener)\n  // oReq.open('GET', filename)\n  // oReq.send()\n}\n\nfunction createGraphFromData (data) {\n  Object(_mapHelpers__WEBPACK_IMPORTED_MODULE_2__[\"clearGraphRelatedData\"])()\n  const worker = new Worker() //eslint-disable-line\n\n  // if(typeof window != \"undefined\")\n  //   const startCreation = window.performance.now()\n  worker.postMessage(data)\n\n  worker.onmessage = function (e) {\n    // if(typeof window != \"undefined\"){\n    //   const endCreation = window.performance.now()\n    //   const timeTakenToCreate = parseInt(endCreation - startCreation)\n    //   console.log('Time to construct: ', timeTakenToCreate)\n    // }\n    const graph = ngraph_fromjson__WEBPACK_IMPORTED_MODULE_0___default()(e.data)\n    console.log(graph.getNodesCount())\n    Object(_mapHelpers__WEBPACK_IMPORTED_MODULE_2__[\"setGraph\"])(graph)\n    return findRouteThroughGraph(graph)\n  }\n}\n\nfunction findRouteThroughGraph (graph) {\n  const pathFinder = ngraph_path__WEBPACK_IMPORTED_MODULE_1___default.a.nba(graph, {\n    distance (fromNode, toNode) {\n      const dx = fromNode.data.x - toNode.data.x\n      const dy = fromNode.data.y - toNode.data.y\n      return Math.sqrt(dx * dx + dy * dy)\n    }\n  })\n  return Object(_mapHelpers__WEBPACK_IMPORTED_MODULE_2__[\"setPathFinder\"])(pathFinder)\n}\n\nfunction updateGraphWithDynamicJSON (dynamicNodesJSON, dynamicEdgesJSON) {\n    // if(typeof window != \"undefined\")\n    //   const startLoad = window.performance.now()\n    const graph = ngraph_fromjson__WEBPACK_IMPORTED_MODULE_0___default()('{\"nodes\":[' + dynamicNodesJSON + dataJSON + dynamicEdgesJSON + \"]}\")\n    console.log(graph.getNodesCount())\n    // if(typeof window != \"undefined\"){\n    //   const endLoad = window.performance.now()\n    //   const timeTakenToLoad = parseInt(endLoad - startLoad)\n    //   console.log('Time to load: ', timeTakenToLoad)\n    // }\n\n    Object(_mapHelpers__WEBPACK_IMPORTED_MODULE_2__[\"setGraph\"])(graph)\n    findRouteThroughGraph(graph)\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZ3JhcGhIZWxwZXIuanM/MjhkYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFzQztBQUNSOztBQUU5Qjs7QUFFNkU7O0FBRTdFOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsRUFBRSx5RUFBcUI7QUFDdkI7QUFDQTtBQUNBOztBQUVBOztBQUVBLGdCQUFnQixzREFBUTs7QUFFeEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsNERBQVE7QUFDVjs7Ozs7Ozs7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1AsRUFBRSx5RUFBcUI7QUFDdkI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixzREFBUTtBQUMxQjtBQUNBLElBQUksNERBQVE7QUFDWjtBQUNBO0FBQ0E7O0FBRU87QUFDUCxxQkFBcUIsa0RBQUk7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxTQUFTLGlFQUFhO0FBQ3RCOztBQUVPO0FBQ1A7QUFDQTtBQUNBLGtCQUFrQixzREFBUSxHQUFHLGlFQUFpRTtBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSw0REFBUTtBQUNaO0FBQ0EiLCJmaWxlIjoiLi9zcmMvZ3JhcGhIZWxwZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnJvbWpzb24gZnJvbSAnbmdyYXBoLmZyb21qc29uJ1xuaW1wb3J0IHBhdGggZnJvbSAnbmdyYXBoLnBhdGgnXG5cbi8vIGltcG9ydCBXb3JrZXIgZnJvbSAnLi9ncmFwaENyZWF0aW9uLndvcmtlci5qcydcblxuaW1wb3J0IHsgc2V0UGF0aEZpbmRlciwgc2V0R3JhcGgsIGNsZWFyR3JhcGhSZWxhdGVkRGF0YSB9IGZyb20gJy4vbWFwSGVscGVycydcblxudmFyIGRhdGFKU09OID0gXCJcIlxuXG5leHBvcnQgZnVuY3Rpb24gbG9hZEdyYXBoRnJvbUZpbGUgKGRhdGFXaXRoRWRnZXMpIHtcbiAgLy8gZnVuY3Rpb24gcmVxTGlzdGVuZXIgKCkge1xuICAvLyAgIGNvbnN0IHN0YXJ0TG9hZCA9IHdpbmRvdy5wZXJmb3JtYW5jZS5ub3coKVxuICAvLyAgIGRhdGFKU09OID0gdGhpcy5yZXNwb25zZVRleHRcbiAgLy8gICBjb25zdCBncmFwaCA9IGZyb21qc29uKGRhdGFKU09OKVxuICAvLyAgIGRhdGFKU09OID0gZGF0YUpTT04uc3Vic3RyaW5nKDAsIGRhdGFKU09OLmxlbmd0aC0yKVxuICAvLyAgIGRhdGFKU09OID0gZGF0YUpTT04uc3Vic3RyaW5nKDEwLCBkYXRhSlNPTi5sZW5ndGgpXG4gIC8vICAgY29uc29sZS5sb2coZ3JhcGguZ2V0Tm9kZXNDb3VudCgpKVxuICAvLyAgIGNvbnN0IGVuZExvYWQgPSB3aW5kb3cucGVyZm9ybWFuY2Uubm93KClcbiAgLy8gICBjb25zdCB0aW1lVGFrZW5Ub0xvYWQgPSBwYXJzZUludChlbmRMb2FkIC0gc3RhcnRMb2FkKVxuICAvLyAgIGNvbnNvbGUubG9nKCdUaW1lIHRvIGxvYWQ6ICcsIHRpbWVUYWtlblRvTG9hZClcblxuICAvLyAgIHNldEdyYXBoKGdyYXBoKVxuICAvLyAgIHJldHVybiBmaW5kUm91dGVUaHJvdWdoR3JhcGgoZ3JhcGgpXG4gIC8vIH1cbiAgY2xlYXJHcmFwaFJlbGF0ZWREYXRhKClcbiAgLy8gaWYodHlwZW9mIHdpbmRvdyAhPSBcInVuZGVmaW5lZFwiKVxuICAvLyAgIGNvbnN0IHN0YXJ0TG9hZCA9IHdpbmRvdy5wZXJmb3JtYW5jZS5ub3coKVxuICBkYXRhSlNPTiA9IGRhdGFXaXRoRWRnZXNcblxuICB2YXIgc3RhcnRDcmVhdGlvbiA9IG5ldyBEYXRlKClcblxuICBjb25zdCBncmFwaCA9IGZyb21qc29uKGRhdGFKU09OKVxuXG4gIHZhciBlbmRDcmVhdGlvbiA9IG5ldyBEYXRlKCkgLSBzdGFydENyZWF0aW9uXG4gIGNvbnNvbGUubG9nKCdUaW1lIHRvIGZpbmQgcGF0aDogJywgZW5kQ3JlYXRpb24pXG5cbiAgZGF0YUpTT04gPSBkYXRhSlNPTi5zdWJzdHJpbmcoMCwgZGF0YUpTT04ubGVuZ3RoLTIpXG4gIGRhdGFKU09OID0gZGF0YUpTT04uc3Vic3RyaW5nKDEwLCBkYXRhSlNPTi5sZW5ndGgpXG4gIGNvbnNvbGUubG9nKGdyYXBoLmdldE5vZGVzQ291bnQoKSlcbiAgLy8gaWYodHlwZW9mIHdpbmRvdyAhPSBcInVuZGVmaW5lZFwiKXtcbiAgLy8gICBjb25zdCBlbmRMb2FkID0gd2luZG93LnBlcmZvcm1hbmNlLm5vdygpXG4gIC8vICAgY29uc3QgdGltZVRha2VuVG9Mb2FkID0gcGFyc2VJbnQoZW5kTG9hZCAtIHN0YXJ0TG9hZClcbiAgLy8gICBjb25zb2xlLmxvZygnVGltZSB0byBsb2FkOiAnLCB0aW1lVGFrZW5Ub0xvYWQpXG4gIC8vIH1cblxuICBzZXRHcmFwaChncmFwaClcbiAgcmV0dXJuIGZpbmRSb3V0ZVRocm91Z2hHcmFwaChncmFwaClcblxuXG5cblxuXG5cblxuICAvLyB2YXIgb1JlcSA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpIC8vZXNsaW50LWRpc2FibGUtbGluZVxuICAvLyBvUmVxLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCByZXFMaXN0ZW5lcilcbiAgLy8gb1JlcS5vcGVuKCdHRVQnLCBmaWxlbmFtZSlcbiAgLy8gb1JlcS5zZW5kKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUdyYXBoRnJvbURhdGEgKGRhdGEpIHtcbiAgY2xlYXJHcmFwaFJlbGF0ZWREYXRhKClcbiAgY29uc3Qgd29ya2VyID0gbmV3IFdvcmtlcigpIC8vZXNsaW50LWRpc2FibGUtbGluZVxuXG4gIC8vIGlmKHR5cGVvZiB3aW5kb3cgIT0gXCJ1bmRlZmluZWRcIilcbiAgLy8gICBjb25zdCBzdGFydENyZWF0aW9uID0gd2luZG93LnBlcmZvcm1hbmNlLm5vdygpXG4gIHdvcmtlci5wb3N0TWVzc2FnZShkYXRhKVxuXG4gIHdvcmtlci5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZSkge1xuICAgIC8vIGlmKHR5cGVvZiB3aW5kb3cgIT0gXCJ1bmRlZmluZWRcIil7XG4gICAgLy8gICBjb25zdCBlbmRDcmVhdGlvbiA9IHdpbmRvdy5wZXJmb3JtYW5jZS5ub3coKVxuICAgIC8vICAgY29uc3QgdGltZVRha2VuVG9DcmVhdGUgPSBwYXJzZUludChlbmRDcmVhdGlvbiAtIHN0YXJ0Q3JlYXRpb24pXG4gICAgLy8gICBjb25zb2xlLmxvZygnVGltZSB0byBjb25zdHJ1Y3Q6ICcsIHRpbWVUYWtlblRvQ3JlYXRlKVxuICAgIC8vIH1cbiAgICBjb25zdCBncmFwaCA9IGZyb21qc29uKGUuZGF0YSlcbiAgICBjb25zb2xlLmxvZyhncmFwaC5nZXROb2Rlc0NvdW50KCkpXG4gICAgc2V0R3JhcGgoZ3JhcGgpXG4gICAgcmV0dXJuIGZpbmRSb3V0ZVRocm91Z2hHcmFwaChncmFwaClcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZmluZFJvdXRlVGhyb3VnaEdyYXBoIChncmFwaCkge1xuICBjb25zdCBwYXRoRmluZGVyID0gcGF0aC5uYmEoZ3JhcGgsIHtcbiAgICBkaXN0YW5jZSAoZnJvbU5vZGUsIHRvTm9kZSkge1xuICAgICAgY29uc3QgZHggPSBmcm9tTm9kZS5kYXRhLnggLSB0b05vZGUuZGF0YS54XG4gICAgICBjb25zdCBkeSA9IGZyb21Ob2RlLmRhdGEueSAtIHRvTm9kZS5kYXRhLnlcbiAgICAgIHJldHVybiBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpXG4gICAgfVxuICB9KVxuICByZXR1cm4gc2V0UGF0aEZpbmRlcihwYXRoRmluZGVyKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlR3JhcGhXaXRoRHluYW1pY0pTT04gKGR5bmFtaWNOb2Rlc0pTT04sIGR5bmFtaWNFZGdlc0pTT04pIHtcbiAgICAvLyBpZih0eXBlb2Ygd2luZG93ICE9IFwidW5kZWZpbmVkXCIpXG4gICAgLy8gICBjb25zdCBzdGFydExvYWQgPSB3aW5kb3cucGVyZm9ybWFuY2Uubm93KClcbiAgICBjb25zdCBncmFwaCA9IGZyb21qc29uKCd7XCJub2Rlc1wiOlsnICsgZHluYW1pY05vZGVzSlNPTiArIGRhdGFKU09OICsgZHluYW1pY0VkZ2VzSlNPTiArIFwiXX1cIilcbiAgICBjb25zb2xlLmxvZyhncmFwaC5nZXROb2Rlc0NvdW50KCkpXG4gICAgLy8gaWYodHlwZW9mIHdpbmRvdyAhPSBcInVuZGVmaW5lZFwiKXtcbiAgICAvLyAgIGNvbnN0IGVuZExvYWQgPSB3aW5kb3cucGVyZm9ybWFuY2Uubm93KClcbiAgICAvLyAgIGNvbnN0IHRpbWVUYWtlblRvTG9hZCA9IHBhcnNlSW50KGVuZExvYWQgLSBzdGFydExvYWQpXG4gICAgLy8gICBjb25zb2xlLmxvZygnVGltZSB0byBsb2FkOiAnLCB0aW1lVGFrZW5Ub0xvYWQpXG4gICAgLy8gfVxuXG4gICAgc2V0R3JhcGgoZ3JhcGgpXG4gICAgZmluZFJvdXRlVGhyb3VnaEdyYXBoKGdyYXBoKVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/graphHelper.js\n");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var ngraph_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngraph.graph */ \"../node_modules/ngraph.graph/index.js\");\n/* harmony import */ var ngraph_graph__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ngraph_graph__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _mapHelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mapHelpers */ \"./src/mapHelpers.js\");\n/* harmony import */ var _graphHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./graphHelper */ \"./src/graphHelper.js\");\n\n\n\n\n\n\n\n\n// import Vue from 'vue'\n// import App from './App.vue'\n// import VueWorker from 'vue-worker'\n\n// Vue.use(VueWorker)\n// new Vue({\n//   el: '#app',\n//   render: h => h(App)\n// })\n\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5qcz81NmQ3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBc0M7QUFDMkI7QUFDSzs7Ozs7O0FBTXRFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUkiLCJmaWxlIjoiLi9zcmMvbWFpbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVHcmFwaCBmcm9tICduZ3JhcGguZ3JhcGgnXG5pbXBvcnQgeyBzZXR1cE1hcCwgc2V0RGF0YSwgc2V0dXBSb3V0ZUxheWVyIH0gZnJvbSAnLi9tYXBIZWxwZXJzJ1xuaW1wb3J0IHsgbG9hZEdyYXBoRnJvbUZpbGUsIGNyZWF0ZUdyYXBoRnJvbURhdGEgfSBmcm9tICcuL2dyYXBoSGVscGVyJ1xuXG5cblxuXG5cbi8vIGltcG9ydCBWdWUgZnJvbSAndnVlJ1xuLy8gaW1wb3J0IEFwcCBmcm9tICcuL0FwcC52dWUnXG4vLyBpbXBvcnQgVnVlV29ya2VyIGZyb20gJ3Z1ZS13b3JrZXInXG5cbi8vIFZ1ZS51c2UoVnVlV29ya2VyKVxuLy8gbmV3IFZ1ZSh7XG4vLyAgIGVsOiAnI2FwcCcsXG4vLyAgIHJlbmRlcjogaCA9PiBoKEFwcClcbi8vIH0pXG5cblxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/main.js\n");

/***/ }),

/***/ "./src/mapHelpers.js":
/*!***************************!*\
  !*** ./src/mapHelpers.js ***!
  \***************************/
/*! exports provided: setupMap, setData, clearGraphRelatedData, setupRouteLayer, setPathFinder, setGraph */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupMap\", function() { return setupMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setData\", function() { return setData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearGraphRelatedData\", function() { return clearGraphRelatedData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupRouteLayer\", function() { return setupRouteLayer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setPathFinder\", function() { return setPathFinder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setGraph\", function() { return setGraph; });\n/* harmony import */ var ngraph_graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngraph.graph */ \"../node_modules/ngraph.graph/index.js\");\n/* harmony import */ var ngraph_graph__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ngraph_graph__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Point */ \"./src/Point.js\");\n/* harmony import */ var _setupStructure__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./setupStructure */ \"./src/setupStructure.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _src_main__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../src/main */ \"../src/main.js\");\n/* harmony import */ var _convex_hull__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./convex-hull */ \"./src/convex-hull.js\");\n/* harmony import */ var _graphHelper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./graphHelper */ \"./src/graphHelper.js\");\n\n\n\n\n\n\n\n\n\nlet map = null\nlet startMarker = null\nlet endMarker = null\nlet selectionLayer = null\nlet polyLayer = null\nlet points = null\nlet pointsLyr = null\nlet graphData = null\nlet foundPath = null\nlet pathFinder = null\nlet routeLayer = null\nlet points1 = []\nlet points2 = []\nlet pointsArr = []\nlet turfPolygons = []\nvar output = \"\"\nvar multiplier = 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000 * 1000\nvar updatingPathMarkers = false\nvar allTangents = []\nvar startPoint = null\nvar endPoint = null\n\n\nfunction setupMap (start, end, showMap) {\n  if(showMap){\n    map = L.map('map', {\n      minZoom: 1,\n      maxZoom: 20,\n      center: [0, 0],\n      zoom: 2,\n      crs: L.CRS.Simple\n    })\n\n    L.NumberedDivIcon = createNumberDiv()\n  }\n\n  if(start == null){\n    // var start = [73.19374999403954,0.6548828072845936]\n    // var end = [73.198449611664,0.691950189807585]\n\n    // var start = [73.20313720591366,0.66888427734375]\n    // var end = [73.22689209133387,0.6780517548322678]\n\n    // var start = [73.2007812410593,0.6654785238206387]\n    // var end = [73.2010742276907,0.7003906257450581]\n\n    // var start = [73.14657642738,0.6639903635426379]\n    // var end = [73.2010742276907,0.7003906257450581]\n\n\n    var start = [73.19707030057907,0.6677734404802322]\n    var end = [73.17901611328125,0.6834106449969113]\n\n\n\n\n\n    // var start = [73.18628847599,0.6605490743581441]\n    // var end = [73.169002590224,0.6689311701630487]\n\n\n\n\n    // var start = [73.234375,0.14453119039535522]\n    // var end = [73.169002590224,0.6689311701630487]\n  }\n\n\n  startPoint = new _Point__WEBPACK_IMPORTED_MODULE_1__[\"Point\"](start);\n  endPoint = new _Point__WEBPACK_IMPORTED_MODULE_1__[\"Point\"](end);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // var start = [73.196550607681,0.6745385270131692]\n  // var end = [73.195617198944,0.6747423607673824]\n\n  // var start = [73.18461914360523,0.6880859322845936]\n  // var end = [73.198449611664,0.691950189807585]\n\n  if(showMap){\n    startMarker = L.marker([start[1],start[0]], {\n      draggable: true,\n      icon: new L.NumberedDivIcon()\n    }).addTo(map)\n\n    endMarker = L.marker([end[1],end[0]], {\n      draggable: true,\n      icon: new L.NumberedDivIcon()\n    }).addTo(map)\n\n    startMarker.on('drag', updatePathMarkers)\n    endMarker.on('drag', updatePathMarkers)\n    selectionLayer = L.layerGroup([]).addTo(map)\n  }else\n    return updatePathMarkers()\n}\n\nfunction setData (data, showMap) {\n  if(showMap){\n    polyLayer = L.geoJson(data, {\n      noClip: true,\n      stroke: false,\n      fillColor: '#8B99AE'\n    }).addTo(map)\n\n    map.fitBounds(polyLayer.getBounds(), {\n      padding: [20, 20]\n    })\n\n    points = turf.featureCollection([])\n\n    pointsLyr = L.layerGroup([], {\n      pane: 'popupPane'\n    }).addTo(map)\n\n    turf.meta.coordEach(data, function (currentCoord) {\n      points.features.push(turf.point([currentCoord[0], currentCoord[1]]))\n\n      var layer = L.circleMarker([currentCoord[1], currentCoord[0]], {\n        radius: 3,\n        opacity: 0,\n        fillOpacity: 0.5,\n        origPoint: [currentCoord[0], currentCoord[1]]\n      }).addTo(pointsLyr)\n      layer.on('mouseover', highlightFeature)\n      layer.on('mouseout', unhighlightFeature)\n\n    }, true)\n  }\n\n\n\n\n\n\n\n\n  Object(_src_main__WEBPACK_IMPORTED_MODULE_4__[\"loadPoints\"])(data)\n\n  for (var i = data.features.length - 1; i >= 0; i--) {\n    const edges = []\n    const polygons = []\n    points1 = []\n    Object(_setupStructure__WEBPACK_IMPORTED_MODULE_2__[\"setupStructure\"])(data.features[i], edges, points1, polygons, i)\n    pointsArr.push(points1.slice(0))\n  }\n\n  // for (var i = data.geometry.coordinates.length - 1; i >= 0; i--) {\n  //   const edges = []\n  //   const polygons = []\n  //   points1 = []\n  //   setupStructure(data.geometry.coordinates[i], edges, points1, polygons, i)\n  //   pointsArr.push(points1.slice(0))\n  // }\n\n  // loadTurfPolygons(data)\n\n\n\n\n\n\n\n\n  // var tangents = getPolygonTangents(new Point([73.14657642738,0.6639903635426379]), pointsArr[11])\n\n  // console.log(\"\\tvar start = [\"+createNodeId2(new Point([73.14657642738,0.6639903635426379]))+\"]\\n\\tvar end = [\"+createNodeId2(tangents[1])+\"]\\n\\n\")\n\n\n\n\n\n    console.log('starting')\n\n  // for (var i = pointsArr.length - 1; i >= 0; i--) {\n  // // for (var i = 19 - 1; i >= 0; i--) {\n  //   // var i = 4;\n  //   // var j = 11;\n\n  //   // var i = 4;\n  //   // var j = 9;\n\n  //   // var i = 11;\n  //   // var j = 0;\n\n  //   for (var j = i - 1; j >= 0; j--) {\n  //   // for (var j = 5; j >= 2; j--) {\n  //   //   if(i == j) continue\n  //     // console.log('test')\n  //   // console.log('i: ' + i + ' j: ' + j)\n  //     // find4Tangents(pointsArr[i], pointsArr[j], turfPolygons[i], turfPolygons[j])\n  //     find4Tangents(pointsArr[i], pointsArr[j])\n\n  //   }\n\n\n  //   // find shortcuts to skip concave parts of polygons\n  //   var pArr = pointsArr[i]\n  //   var hull = makeConvexhull(pArr);\n  //   console.log('test')\n  //   var l = 0\n  //   for (var k = 0; k < hull.length; k++) {\n  //     var nextPoint = hull[ (k+1) % hull.length ]\n\n  //     // find the point that matches the point in the hull\n  //     while( !pArr[l].isPointEqual(hull[k])){\n  //       l = (l+1) % pArr.length\n  //     }\n      \n  //     // if the next point is different we need the line between\n  //     if( !pArr[l].nextPoint.isPointEqual(nextPoint)){\n  //       // if(isVisible(hull[k],nextPoint))\n  //         output += ',{\"fromId\":\"'+ createNodeId2(hull[k]) +'\",\"toId\":\"'+createNodeId2(nextPoint)+'\"}'\n  //     }\n  //   }\n  // }\n\n  // console.log(allTangents.length)\n  // for (var i = allTangents.length - 1; i >= 0; i--) {\n  //   console.log('test')\n  //   var p1 = allTangents[i]\n\n  //   var nodesVisible = getVisibleNodes(p1)\n\n  //   for (var k = nodesVisible.length - 1; k >= 0; k--) {\n  //     for (var j = i - 1; j >= 0; j--) {\n  //       var p2 = allTangents[j]\n\n  //       if(nodesVisible[k].x == p2.x && nodesVisible[k].y == p2.y ){\n  //         output += ',{\"fromId\":\"'+ createNodeId2(p1) +'\",\"toId\":\"'+createNodeId2(p2)+'\"}'\n  //       }\n\n  //       // if(isVisible(p1, p2))\n  //       //   output += ',{\"fromId\":\"'+ createNodeId2(p1) +'\",\"toId\":\"'+createNodeId2(p2)+'\"}'\n  //     }\n  //   }\n\n  // }\n\n\n  console.log(output)\n\n}\n\nfunction loadTurfPolygons(data){\n  for (var i = 0; i < pointsArr.length; i++) {\n    var aAsInt = []\n    var a = pointsArr[i]\n\n    for (var j = 0; j < a.length; j++) {\n      aAsInt.push([Math.round(a[j].x * multiplier), Math.round(a[j].y * multiplier)])\n    }\n    aAsInt.push([Math.round(a[0].x * multiplier), Math.round(a[0].y * multiplier)]) // just to make sure last is equal to first\n\n    turfPolygons.push(turf.polygon([aAsInt]));\n  }\n}\n\n  \n// determines the quadrant of a point \n// (used in compare()) \nfunction quad(p) \n{ \n    if (p.x >= 0 && p.y >= 0) \n        return 1; \n    if (p.x <= 0 && p.y >= 0) \n        return 2; \n    if (p.x <= 0 && p.y <= 0) \n        return 3; \n    return 4; \n} \n  \n// Checks whether the line is crossing the polygon \nfunction orientation( a, b, c) \n{ \n    var res = (b.y-a.y)*(c.x-b.x) - \n              (c.y-b.y)*(b.x-a.x); \n  \n    if (res == 0) \n        return 0; \n    if (res > 0) \n        return 1; \n    return -1; \n} \n  \nfunction clonePoints (points) {\n  return points.slice(0)\n}\n\nfunction sortPoints (point, clonedPoints) {\n  clonedPoints.sort((a, b) => {\n    var p = new _Point__WEBPACK_IMPORTED_MODULE_1__[\"Point\"]([a.x - mid.x, \n                                a.y - mid.y]); \n    var q = new _Point__WEBPACK_IMPORTED_MODULE_1__[\"Point\"]([b.x - mid.x, \n                                b.y - mid.y]); \n  \n    var one = quad(p); \n    var two = quad(q); \n  \n    if (one != two) \n        return (one < two ? -1 : 1); \n    return (p.y*q.x < q.y*p.x ? -1 : 1); \n  })\n}\n\n// function sortPoints (point, clonedPoints) {\n//   clonedPoints.sort((a, b) => {\n//     const angle1 = point.angleToPoint(a)\n//     const angle2 = point.angleToPoint(b)\n//     if (angle1 < angle2) return -1\n//     if (angle1 > angle2) return 1\n//     const dist1 = calcEdgeDistance(point, a)\n//     const dist2 = calcEdgeDistance(point, b)\n//     if (dist1 < dist2) return -1\n//     if (dist1 > dist2) return 1\n//     return 0\n//   })\n// }\n\nfunction getPolygonTangents(srcPoint, pointsArr){\n    // initialize using first point\n    var firstPoint = pointsArr[pointsArr.length - 1]\n    var angle = srcPoint.angleToPoint(firstPoint)\n    var leftMostAngle = angle\n    var rightMostAngle = angle\n    var leftMostPoint = firstPoint\n    var rightMostPoint = firstPoint\n        // routeLayer.setLatLngs([srcPoint, firstPoint])\n\n    for (var i =  pointsArr.length - 2;  i >= 0; i--) {\n        // is this point more towards left than left most point?\n        var angle = srcPoint.angleToPoint(pointsArr[i])\n        var diff1 = rightMostAngle - angle\n        diff1 = diff1 < 0 ? ((diff1 < -Math.PI) ? diff1 + Math.PI*2 : Math.PI * 3) : diff1\n        // diff1 = diff1 < 0 ? diff1 + Math.PI*2 : diff1\n\n        // is this point more towards right than right most point?\n        var angle = srcPoint.angleToPoint(pointsArr[i])\n        var diff2 = angle - leftMostAngle\n        diff2 = diff2 < 0 ? ((diff2 < -Math.PI) ? diff2 + Math.PI*2 : Math.PI * 3) : diff2\n        // diff2 = diff2 < 0 ? diff2 + Math.PI*2 : diff2\n\n        // if(i == 56)\n        //   i = i\n\n\n        /* if unchartered angle */\n        if(diff1 < Math.PI/2 || diff2 < Math.PI/2){\n          if(diff1 < diff2){\n            /* if closer to left most point */\n            rightMostAngle = angle\n            rightMostPoint = pointsArr[i]\n          }else{\n            leftMostAngle = angle\n            leftMostPoint = pointsArr[i]\n            // break\n          }\n        }\n    }\n\n    return [leftMostPoint, rightMostPoint]\n}\n\nfunction getDynamicEdgesJSON(startPoint, endPoint)\n{\n  var dynamicEdgesJSON = \"\"\n  // var startPoint = new Point([startPoint.geometry.coordinates[0], startPoint.geometry.coordinates[1]]);\n  // var endPoint = new Point([endPoint.geometry.coordinates[0], endPoint.geometry.coordinates[1]]);\n  Object(_src_main__WEBPACK_IMPORTED_MODULE_4__[\"addStartingAndEndingNodes\"])(startPoint, endPoint)\n\n\n  var pointsToConnect = []\n  var polygonIds = []\n  pointsToConnect.push([endPoint, startPoint])\n  pointsToConnect.push([startPoint, endPoint])\n  polygonIds.push(-1)\n  polygonIds.push(-1)\n  var k = 0\n\n  while(pointsToConnect.length != 0){\n    var oldPointsToConnect = pointsToConnect.slice(0)\n    var oldPolygonIds = polygonIds.slice(0)\n    pointsToConnect = []\n    polygonIds = []\n\n    for (var i = oldPointsToConnect.length - 1; i >= 0; i--) {\n      var srcPoint = oldPointsToConnect[i][0]\n      var destPoint = oldPointsToConnect[i][1]\n\n      var angle = srcPoint.angleToPoint(destPoint)\n      var noObstructingPolygons = true\n\n      for (var j = pointsArr.length - 1; j >= 0; j--) {\n        var tangents = getPolygonTangents(oldPointsToConnect[i][0], pointsArr[j])\n        var angle1 = srcPoint.angleToPoint(tangents[0])\n        var angle2 = srcPoint.angleToPoint(tangents[1])\n\n        // make all angles relative to right most angle (angle2) by making right most angle 0 (starting angle)\n        var angle0 = angle - angle2\n        angle1 -= angle2\n        angle2 -= angle2\n\n        if(angle2 < angle0 && angle0 < angle1){\n          var obstructingEdge = Object(_src_main__WEBPACK_IMPORTED_MODULE_4__[\"getObstructingEdge\"])(oldPointsToConnect[i][0], oldPointsToConnect[i][1], pointsArr[j])\n\n          if(obstructingEdge != null){\n            noObstructingPolygons = false\n            pointsToConnect.push([oldPointsToConnect[i][0], tangents[0]])\n            pointsToConnect.push([oldPointsToConnect[i][0], tangents[1]])\n            break;\n          }\n        }\n      }\n\n      if(noObstructingPolygons)\n        dynamicEdgesJSON += ',{\"fromId\":\"'+createNodeId2(oldPointsToConnect[i][0])+'\",\"toId\":\"'+createNodeId2(oldPointsToConnect[i][1])+'\"}'\n    }\n    k++\n  }\n\n  return dynamicEdgesJSON\n}\n\n// function getDynamicEdgesJSON(startPoint, endPoint)\n// {\n//   var dynamicEdgesJSON = \"\"\n//   // var nearestPoint\n//   // var start = turf.point([Math.round(startPoint.geometry.coordinates[0] * multiplier), Math.round(startPoint.geometry.coordinates[1] * multiplier)]);\n//   // var end = turf.point([Math.round(endPoint.geometry.coordinates[0] * multiplier), Math.round(endPoint.geometry.coordinates[1] * multiplier)]);\n//   var startPoint = new Point([startPoint.geometry.coordinates[0], startPoint.geometry.coordinates[1]]);\n//   var endPoint = new Point([endPoint.geometry.coordinates[0], endPoint.geometry.coordinates[1]]);\n//   addStartingAndEndingNodes(startPoint, endPoint)\n\n//   var pointsToConnect = []\n//   var polygonIds = []\n//   pointsToConnect.push([endPoint, startPoint])\n//   // pointsToConnect.push([startPoint, endPoint])\n//   polygonIds.push(-1)\n//   // polygonIds.push(-1)\n//   var k = 0\n\n//   while(pointsToConnect.length != 0){\n//     var oldPointsToConnect = pointsToConnect.slice(0)\n//     var oldPolygonIds = polygonIds.slice(0)\n//     pointsToConnect = []\n//     polygonIds = []\n//     for (var i = oldPointsToConnect.length - 1; i >= 0; i--) {\n//       // var turfPoint = turf.point([Math.round(oldPointsToConnect[i][0].x * multiplier), Math.round(oldPointsToConnect[i][0].y * multiplier)]);\n//       var obstructingEdge = getObstructingEdge(oldPointsToConnect[i][0], oldPointsToConnect[i][1])\n//       if(obstructingEdge == null){\n//         // if(isVisible(oldPointsToConnect[i][0], oldPointsToConnect[i][1]))\n//           dynamicEdgesJSON += ',{\"fromId\":\"'+createNodeId2(oldPointsToConnect[i][0])+'\",\"toId\":\"'+createNodeId2(oldPointsToConnect[i][1])+'\"}'\n//       }else{\n//         var j = turfPolygons.length - obstructingEdge.p1.polygonID - 1\n//         if(j == oldPolygonIds[i])\n//           dynamicEdgesJSON += ',{\"fromId\":\"'+createNodeId2(oldPointsToConnect[i][0])+'\",\"toId\":\"'+createNodeId2(oldPointsToConnect[i][1])+'\"}'\n//         else{\n//           var tangents = getPolygonTangents(oldPointsToConnect[i][0], pointsArr[j])\n//           pointsToConnect.push([oldPointsToConnect[i][0], tangents[0]])\n//           pointsToConnect.push([oldPointsToConnect[i][0], tangents[1]])\n//           polygonIds.push(j)\n//           polygonIds.push(j)\n\n\n\n\n\n\n\n\n\n\n\n//           // var features1 = turf.polygonTangents(turfPoint, turfPolygons[j]).features\n//           // if(features1.length > 2)\n//           //   alert('More than 2 tangents')\n\n//           // var nearestPoint = turf.nearestPoint(turf.point([features1[0].geometry.coordinates[0]/multiplier, features1[0].geometry.coordinates[1]/multiplier]), points)\n//           // var tangent1 = new Point([nearestPoint.geometry.coordinates[0], nearestPoint.geometry.coordinates[1]])\n//           // nearestPoint = turf.nearestPoint(turf.point([features1[1].geometry.coordinates[0]/multiplier, features1[1].geometry.coordinates[1]/multiplier]), points)\n//           // var tangent2 = new Point([nearestPoint.geometry.coordinates[0], nearestPoint.geometry.coordinates[1]])\n//           // pointsToConnect.push([oldPointsToConnect[i][0], tangent1])\n//           // pointsToConnect.push([oldPointsToConnect[i][0], tangent2])\n//           // polygonIds.push(j)\n//           // polygonIds.push(j)\n\n\n\n\n\n\n\n\n\n//           if(k==0){\n//             pointsToConnect.push([oldPointsToConnect[oldPointsToConnect.length-1-i][0], tangents[0]])\n//             pointsToConnect.push([oldPointsToConnect[oldPointsToConnect.length-1-i][0], tangents[1]])\n//             polygonIds.push(-1)\n//             polygonIds.push(-1)\n//           }\n\n\n//           // if(k==0){\n//           //   console.log(\"\\tvar start = [\"+createNodeId2(oldPointsToConnect[i][0])+\"]\\n\\tvar end = [\"+createNodeId2(tangents[0])+\"]\\n\\n\")\n//           //   console.log(\"\\tvar start = [\"+createNodeId2(oldPointsToConnect[i][0])+\"]\\n\\tvar end = [\"+createNodeId2(tangents[1])+\"]\\n\\n\")\n//           //   if(i==0)\n//           //     return dynamicEdgesJSON;\n//           // }\n\n//         }\n//       }\n//     }\n//     k++\n//   }\n\n//   // var nodesVisible1 = getVisibleNodes(startPoint, startPoint, endPoint)\n//   // var nodesVisible2 = getVisibleNodes(endPoint)\n//   // var startTangents = []\n//   // var endTangents = []\n\n//   // for (var i = 0; i < turfPolygons.length; i++) {\n//   //   console.log('test');\n\n//   //   var features1 = turf.polygonTangents(start, turfPolygons[i]).features\n//   //   var features2 = turf.polygonTangents(end, turfPolygons[i]).features\n\n//   //   var startTangent1 = new Point([features1[0].geometry.coordinates[0]/multiplier, features1[0].geometry.coordinates[1]/multiplier])\n//   //   var startTangent2 = new Point([features1[1].geometry.coordinates[0]/multiplier, features1[1].geometry.coordinates[1]/multiplier])\n//   //   startTangents.push(startTangent1)\n//   //   startTangents.push(startTangent2)\n\n//   //   var endTangent1 = new Point([features2[0].geometry.coordinates[0]/multiplier, features2[0].geometry.coordinates[1]/multiplier])\n//   //   var endTangent2 = new Point([features2[1].geometry.coordinates[0]/multiplier, features2[1].geometry.coordinates[1]/multiplier])\n//   //   endTangents.push(endTangent1)\n//   //   endTangents.push(endTangent2)\n\n//   //   if(i==11){\n//   //     console.log(\"\\tvar start = [\"+createNodeId2(startPoint)+\"]\\n\\tvar end = [\"+createNodeId(turf.nearestPoint(turf.point([startTangent1.x, startTangent1.y]), points))+\"]\\n\\n\")\n//   //     console.log(\"\\tvar start = [\"+createNodeId2(startPoint)+\"]\\n\\tvar end = [\"+createNodeId(turf.nearestPoint(turf.point([startTangent2.x, startTangent2.y]), points))+\"]\\n\\n\")\n//   //     console.log(\"\\tvar start = [\"+createNodeId2(endPoint)+\"]\\n\\tvar end = [\"+createNodeId(turf.nearestPoint(turf.point([endTangent1.x, endTangent1.y]), points))+\"]\\n\\n\")\n//   //     console.log(\"\\tvar start = [\"+createNodeId2(endPoint)+\"]\\n\\tvar end = [\"+createNodeId(turf.nearestPoint(turf.point([endTangent2.x, endTangent2.y]), points))+\"]\\n\\n\")\n//   //   }\n\n//   // }\n\n//   // for (var j = nodesVisible1.length - 1; j >= 0; j--) {\n//   //   for (var i = startTangents.length - 1; i >= 0; i--) {\n//   //     if(nodesVisible1[j].x == startTangents[i].x && nodesVisible1[j].y == startTangents[i].y ){\n//   //       nearestPoint = turf.nearestPoint(turf.point([startTangents[i].x, startTangents[i].y]), points)\n//   //       dynamicEdgesJSON += ',{\"fromId\":\"'+createNodeId2(startPoint)+'\",\"toId\":\"'+createNodeId(nearestPoint)+'\"}'\n//   //     }\n//   //   }\n//   //   // if(nodesVisible1[j].x == startTangent2.x && nodesVisible1[j].y == startTangent2.y ){\n//   //   //   nearestPoint = turf.nearestPoint(turf.point([startTangent2.x, startTangent2.y]), points)\n//   //   //   dynamicEdgesJSON += ',{\"fromId\":\"'+createNodeId2(startPoint)+'\",\"toId\":\"'+createNodeId(nearestPoint)+'\"}'\n//   //   // }\n//   // }\n\n//   // for (var j = nodesVisible2.length - 1; j >= 0; j--) {\n//   //   for (var i = endTangents.length - 1; i >= 0; i--) {\n//   //     if(nodesVisible2[j].x == endTangents[i].x && nodesVisible2[j].y == endTangents[i].y ){\n//   //       nearestPoint = turf.nearestPoint(turf.point([endTangents[i].x, endTangents[i].y]), points)\n//   //       dynamicEdgesJSON += ',{\"fromId\":\"'+createNodeId2(endPoint)+'\",\"toId\":\"'+createNodeId(nearestPoint)+'\"}'\n//   //     }\n//   //   }\n//   //   // if(nodesVisible2[j].x == endTangent1.x && nodesVisible2[j].y == endTangent1.y ){\n//   //   //   nearestPoint = turf.nearestPoint(turf.point([endTangent1.x, endTangent1.y]), points)\n//   //   //   dynamicEdgesJSON += ',{\"fromId\":\"'+createNodeId2(endPoint)+'\",\"toId\":\"'+createNodeId(nearestPoint)+'\"}'\n//   //   // }\n//   //   // if(nodesVisible2[j].x == endTangent2.x && nodesVisible2[j].y == endTangent2.y ){\n//   //   //   nearestPoint = turf.nearestPoint(turf.point([endTangent2.x, endTangent2.y]), points)\n//   //   //   dynamicEdgesJSON += ',{\"fromId\":\"'+createNodeId2(endPoint)+'\",\"toId\":\"'+createNodeId(nearestPoint)+'\"}'\n//   //   // }\n//   // }\n\n//   return dynamicEdgesJSON\n// }\n\n\nfunction getDynamicNodesJSON(startPoint, endPoint)\n{\n  var dynamicNodesJSON = \"\"\n  // var startPoint = new Point([startPoint.geometry.coordinates[0], startPoint.geometry.coordinates[1]]);\n  // var endPoint = new Point([endPoint.geometry.coordinates[0], endPoint.geometry.coordinates[1]]);\n\n  dynamicNodesJSON += '{\"id\":\"'+createNodeId2(startPoint)+'\",\"data\":{\"x\":'+startPoint.x+',\"y\":'+startPoint.y+'}},'\n  dynamicNodesJSON += '{\"id\":\"'+createNodeId2(endPoint)+'\",\"data\":{\"x\":'+endPoint.x+',\"y\":'+endPoint.y+'}},'\n\n  // points.push(startPoint)\n  // points.push(endPoint)\n\n  return dynamicNodesJSON\n}\n\n\n\n// Finds upper tangent of two polygons 'a' and 'b' \nfunction find4Tangents(a, b) \n// function find4Tangents(a, b, polygon1, polygon2) \n{ \n  // var aAsInt = []\n  // var bAsInt = []\n\n  // for (var i = 0; i < a.length; i++) {\n  //   aAsInt.push([Math.round(a[i].x * multiplier), Math.round(a[i].y * multiplier)])\n  // }\n  // aAsInt.push([Math.round(a[0].x * multiplier), Math.round(a[0].y * multiplier)]) // just to make sure last is equal to first\n\n  // for (var i = 0; i < b.length; i++) {\n  //   bAsInt.push([Math.round(b[i].x * multiplier), Math.round(b[i].y * multiplier)])\n  // }\n  // bAsInt.push([Math.round(b[0].x * multiplier), Math.round(b[0].y * multiplier)]) // just to make sure last is equal to first\n\n  // var polygon1 = turf.polygon([aAsInt]);\n  // var polygon2 = turf.polygon([bAsInt]);\n\n\n\n\n\n\n\n  var tangents1 = []\n  var tangents2 = []\n  tangents1.push([a[0].x, a[0].y])\n\n\n\n\n\n\n  var findTangentOfB = 1\n  var tangentPairs = []\n  var done1 = 0;\n  var done2 = 0;\n  var iterationsRemaining = 10\n\n  while( iterationsRemaining > 0){\n    var tangents = []\n    var srcTangets = findTangentOfB ? tangents1 : tangents2\n    var oldTangents = findTangentOfB ? tangents2.slice(0) : tangents1.slice(0)\n    var polygon = findTangentOfB ? b : a\n    var matches = 0\n    var oldTangentPairs = tangentPairs.slice(0)\n    tangentPairs = []\n\n    for (var i = 0; i < srcTangets.length; i++) {\n      var rawTangents = []\n      var point = new _Point__WEBPACK_IMPORTED_MODULE_1__[\"Point\"](srcTangets[i]);\n      var rawTangents = getPolygonTangents(point, polygon)\n      // tangents = []\n\n      // for (var j = 0; j < features.length; j++)\n      //   rawTangents.push(features[j])\n\n      var srcPoint = new _Point__WEBPACK_IMPORTED_MODULE_1__[\"Point\"](srcTangets[i])\n      var p1 = rawTangents[0]\n      var p2 = rawTangents[1]\n      var angle1 = srcPoint.angleToPoint(p1)\n      var angle2 = srcPoint.angleToPoint(p2)\n      var diff = angle1 - angle2\n      diff = diff < 0 ? diff + Math.PI*2 : diff\n\n      var rightTangent = rawTangents[1]\n      var leftTangent = rawTangents[0]\n\n      if(diff > Math.PI){\n        rightTangent = rawTangents[0]\n        leftTangent = rawTangents[1]\n      }\n\n\n      if(srcTangets.length <= 2){\n        tangents.push([leftTangent.x, leftTangent.y])\n        tangents.push([rightTangent.x, rightTangent.y])\n      }else{\n        if(typeof oldTangentPairs[i] == 'undefined')\n          continue;\n\n        var oldSource = new _Point__WEBPACK_IMPORTED_MODULE_1__[\"Point\"]([oldTangentPairs[i][1][0], oldTangentPairs[i][1][1]])\n        var dist1 = Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"calcEdgeDistance\"])(p1, oldSource)\n        var dist2 = Object(_utils__WEBPACK_IMPORTED_MODULE_3__[\"calcEdgeDistance\"])(p2, oldSource)\n\n        // var angle = srcPoint.angleToPoint(oldSource)\n        // var diff1 = angle1 - angle\n        // var diff2 = angle2 - angle\n        // diff1 = diff1 < 0 ? diff1 + Math.PI*2 : diff1\n        // diff2 = diff2 < 0 ? diff2 + Math.PI*2 : diff2\n\n        tangents.push(dist1 < dist2 ? [rawTangents[0].x, rawTangents[0].y] : [rawTangents[1].x, rawTangents[1].y])\n        // if(i == 0)\n        //   tangents.push(findTangentOfB ? leftTangent : leftTangent)\n        // else if(i == 1)\n        //   tangents.push(findTangentOfB ? leftTangent : rightTangent)\n        // else if(i == 2)\n        //   tangents.push(findTangentOfB ? rightTangent : leftTangent)\n        // else if(i == 3)\n        //   tangents.push(findTangentOfB ? rightTangent : rightTangent)\n      }\n\n\n      // if(srcTangets.length <= 2){\n      //   tangents.push(leftTangent)\n      //   tangents.push(rightTangent)\n      // }else{\n      //   if(i == 0)\n      //     tangents.push(findTangentOfB ? leftTangent : leftTangent)\n      //   else if(i == 1)\n      //     tangents.push(findTangentOfB ? leftTangent : rightTangent)\n      //   else if(i == 2)\n      //     tangents.push(findTangentOfB ? rightTangent : leftTangent)\n      //   else if(i == 3)\n      //     tangents.push(findTangentOfB ? rightTangent : rightTangent)\n      // }\n\n\n        for (var m = 0; m < tangents.length; m++) {\n        // for (var k = oldTangents.length - 1; k >= 0; k--) {\n          var tangent = tangents[m]\n          if(srcTangets.length > 2)\n            tangent = tangents[i]\n          // if(tangent[0] == oldTangents[k][0] && tangent[1] == oldTangents[k][1]){\n            // if(matches < 4){\n              // check for duplicates\n              var isUnique = true\n              for (var l = tangentPairs.length - 1; l >= 0; l--) {\n                if(tangentPairs[l][0][0] == tangent[0] && tangentPairs[l][0][1] == tangent[1])\n                  isUnique = false\n              }\n\n              if(isUnique){\n                tangentPairs.push([tangent, srcTangets[i]])\n              }\n              matches++\n\n              if(srcTangets.length > 2)\n                break\n            // }\n          // }\n        // }\n        }\n    }\n\n    if(findTangentOfB){\n      done2 = matches == 4 ? true : false\n      tangents2 = tangents.slice(0)\n    }else{\n      done1 = matches == 4 ? true : false\n      tangents1 = tangents.slice(0)\n    }\n\n    // if(iterationsRemaining == 7)\n    //   break\n\n    // if(matches < 4)\n    //   iterationsRemaining = 10\n\n    findTangentOfB = !findTangentOfB\n    iterationsRemaining--\n  }\n\n  for (var i = 0; i < tangentPairs.length; i++) {\n    // var tp1 = turf.point([tangentPairs[i][0][0],tangentPairs[i][0][1]]);\n    // var tp2 = turf.point([tangentPairs[i][1][0],tangentPairs[i][1][1]]);\n    // var nearestStart = turf.nearestPoint(tp1, points)\n    // var nearestEnd = turf.nearestPoint(tp2, points)\n    let p1 = new _Point__WEBPACK_IMPORTED_MODULE_1__[\"Point\"](tangentPairs[i][0])\n    let p2 = new _Point__WEBPACK_IMPORTED_MODULE_1__[\"Point\"](tangentPairs[i][1])\n\n\n\n    allTangents.push(p1)\n    allTangents.push(p2)\n\n    if(Object(_src_main__WEBPACK_IMPORTED_MODULE_4__[\"isVisible\"])(p1,p2))\n      output += ',{\"fromId\":\"'+createNodeId2(p1)+'\",\"toId\":\"'+createNodeId2(p2)+'\"}'\n    // if(i==0)\n      // console.log(\"\\tvar start = [\"+createNodeId2(p1)+\"]\\n\\tvar end = [\"+createNodeId2(p2)+\"]\\n\\n\")\n    // else{\n    //   var isVisible = true\n    //   var angle = p1.angleToPoint(p2)\n\n    //   for (var j = turfPolygons.length - 1; j >= 0; j--) {\n    //     var tpm1 = turf.point([tangentPairs[i][0][0] * multiplier,tangentPairs[i][0][1] * multiplier]);\n    //     var tpm2 = turf.point([tangentPairs[i][1][0] * multiplier,tangentPairs[i][1][1] * multiplier]);\n    //     if(turf.booleanPointInPolygon(tpm2, turfPolygons[i]))\n    //       continue\n\n    //     var features = turf.polygonTangents(tpm1, turfPolygons[j]).features\n    //     var t1 = new Point([features[0].geometry.coordinates[0]/multiplier, features[0].geometry.coordinates[1]/multiplier])\n    //     var t2 = new Point([features[1].geometry.coordinates[0]/multiplier, features[1].geometry.coordinates[1]/multiplier])\n    //     var angle1 = p1.angleToPoint(t1)\n    //     var angle2 = p1.angleToPoint(t2)\n    //     var diff = angle1 - angle2\n    //     diff = diff < 0 ? diff + Math.PI : diff\n\n    //     // ensure angle2 is the left one\n    //     if(diff > Math.PI/2){\n    //       var temp = angle1\n    //       angle1 = angle2\n    //       angle2 = temp\n    //     }\n\n    //     var diff1 = angle1 - angle\n    //     diff1 = diff1 < 0 ? diff1 + Math.PI : diff1\n\n    //     var diff2 = angle - angle2\n    //     diff2 = diff2 < 0 ? diff2 + Math.PI : diff2\n\n    //     // angle is between angle1 and angle2\n    //     if(diff1 < Math.PI/2 && diff2 < Math.PI/2){\n    //       const dist = calcEdgeDistance(p1, p2)\n    //       const dist1 = calcEdgeDistance(p1, t1)\n    //       const dist2 = calcEdgeDistance(p1, t2)\n\n    //       // if both tangents are closer\n    //       if(dist1<dist && dist2<dist){\n    //         isVisible = false\n    //         break;\n    //       }\n    //     }\n    //   }\n\n    //   if(isVisible)\n        // output += ',{\"fromId\":\"'+createNodeId(nearestStart)+'\",\"toId\":\"'+createNodeId(nearestEnd)+'\"}'\n    // }\n  }\n\n\n\n\n  // var m1 = L.marker([tangentPairs[0][0][0],tangentPairs[0][0][1], {\n  //   draggable: true,\n  //   icon: new L.NumberedDivIcon()\n  // })\n\n  // var m2 = L.marker(tangentPairs[0][1][0],tangentPairs[0][1][1], {\n  //   draggable: true,\n  //   icon: new L.NumberedDivIcon()\n  // })\n\n\n\n\n  // routeLayer.setLatLngs([])\n  // var nearestStart = turf.nearestPoint(t1, points)\n  // var nearestEnd = turf.nearestPoint(t2, points)\n  // foundPath = pathFinder.find(createNodeId(nearestStart), createNodeId(nearestEnd))\n  // drawPath()\n\n\n\n\n\n\n\n  // var tangents2 = [[features[0].geometry.coordinates[0]/multiplier, features[0].geometry.coordinates[1]/multiplier], \n  //                   [features[1].geometry.coordinates[0]/multiplier, features[1].geometry.coordinates[1]/multiplier]]\n\n\n\n\n\n  // var point = turf.point([Math.round(tangents2[0][0] * multiplier), Math.round(tangents2[0][1] * multiplier)]);\n  // var features = turf.polygonTangents(point, polygon1)\n  // var tangents1 = [[features[0].geometry.coordinates[0]/multiplier, features[0].geometry.coordinates[1]/multiplier], \n  //                   [features[1].geometry.coordinates[0]/multiplier, features[1].geometry.coordinates[1]/multiplier]]\n\n\n\n\n\n\n\n  // startMarker = L.marker([ a[0].x, a[0].y], {\n  //   draggable: true,\n  //   icon: new L.NumberedDivIcon()\n  // }).addTo(map)\n\n  // var tangent = [ tangents.features[0].geometry.coordinates[0]/multiplier, tangents.features[0].geometry.coordinates[1]/multiplier]\n\n  // endMarker = L.marker(tangent, {\n  //   draggable: true,\n  //   icon: new L.NumberedDivIcon()\n  // }).addTo(map)\n\n  // var nearestStart = turf.nearestPoint(startMarker.toGeoJSON(), points)\n  // var nearestEnd = turf.nearestPoint(endMarker.toGeoJSON(), points)\n  // foundPath = pathFinder.find(createNodeId(nearestStart), createNodeId(nearestEnd))\n  // drawPath()\n\n\n  // console.log(a[0].x + \",\" + a[0].y + \" \" + tangent[0] + \",\" + tangent[1])\n  // console.log('')\n\n\n\n\n\n\n\n\n\n\n    // // n1 -> number of points in polygon a \n    // // n2 -> number of points in polygon b \n    // var n1 = a.length, n2 = b.length; \n  \n    // // To find a point inside the convex polygon(centroid), \n    // // we sum up all the coordinates and then divide  by \n    // // n(number of points). But this would be a floating-point \n    // // value. So to get rid of this we multiply points \n    // // initially with n1 and then find the centre and \n    // // then divided it by n1 again. \n    // // Similarly we do divide and multiply for n2 (i.e., \n    // // elements of b) \n  \n    // // maxa and minb are used to check if polygon a \n    // // is left of b. \n    // var maxa = Number.MIN_SAFE_INTEGER; \n    // for (var i=0; i<n1; i++) \n    // { \n    //     maxa = Math.max(maxa, a[i].x); \n    //     mid.x  += a[i].x;\n    //     mid.y += a[i].y; \n    //     a[i].x *= n1; \n    //     a[i].y *= n1; \n    // } \n  \n    // // sorting the points in counter clockwise order \n    // // for polygon a \n    // const clonedA = clonePoints(a)\n    // sortPoints(a[0], clonedA)\n    // a = clonedA\n  \n    // for (var i=0; i<n1; i++) \n    // { \n    //     a[i].x /= n1; \n    //     a[i].y /= n1; \n    // } \n  \n    // mid = new Point([0,0])\n  \n    // var minb = Number.MAX_SAFE_INTEGER; \n    // for (var i=0; i<n2; i++) \n    // { \n    //     mid.x += b[i].x; \n    //     mid.y += b[i].y; \n    //     minb = Math.min(minb, b[i].x); \n    //     b[i].x *= n2; \n    //     b[i].y *= n2; \n    // } \n  \n    // // sorting the points in counter clockwise \n    // // order for polygon b \n    // const clonedB = clonePoints(b)\n    // sortPoints(b[0], clonedB)\n    // b = clonedB\n  \n    // for (var i=0; i<n2; i++) \n    // { \n    //     b[i].x/=n2; \n    //     b[i].y/=n2; \n    // } \n  \n    // // If a is to the right of b, swap a and b \n    // // This makes sure a is left of b. \n    // if (minb < maxa) \n    // { \n    //     b = [a, a = b][0];  // swap a and b    \n    //     n1 = a.length;\n    //     n2 = b.length;\n    // } \n  \n    // // ia -> rightmost point of a \n    // var ia = 0, ib = 0; \n    // for (var i=1; i<n1; i++) \n    //     if (a[i].x > a[ia].x) \n    //         ia = i; \n  \n    // // ib -> leftmost point of b \n    // for (var i=1; i<n2; i++) \n    //     if (b[i].x < b[ib].x) \n    //         ib=i; \n  \n    // // finding the upper tangent \n    // var inda = ia, indb = ib; \n    // var done = 0; \n    // while (!done) \n    // { \n    //     done = 1; \n    //     // const g = createGraph()\n    //     // g.addNode(createNodeId2(b[indb]), { x: b[indb].x, y: b[indb].y })\n    //     // g.addNode(createNodeId2(a[inda]), { x: a[inda].x, y: a[inda].y })\n    //     // g.addNode(createNodeId2(a[(inda+1)%n1]), { x: a[(inda+1)%n1].x, y: a[(inda+1)%n1].y })\n    //     // g.addLink(createNodeId2(b[indb]), createNodeId2(a[inda]))\n    //     // g.addLink(createNodeId2(a[inda]), createNodeId2(a[(inda+1)%n1]))\n    //     // setGraph(g)\n    //     // routeLayer.setLatLngs([b[indb], a[inda]])\n    //     // drawPath()\n\n    //     // routeLayer.setLatLngs([])\n\n\n    //     while (orientation(b[indb], a[inda], a[(inda+1)%n1]) > 0) \n    //         inda = (inda + 1) % n1; \n  \n    //     while (orientation(a[inda], b[indb], b[(n2+indb-1)%n2]) < 0) \n    //     { \n    //         indb = (n2+indb-1)%n2; \n    //         done = 0; \n    //     } \n    // } \n    // console.log(a[inda].x + \",\" + a[inda].y)\n  \n    // // cout << \"upper tangent (\" << a[inda].x << \",\"\n    // //     << a[inda].y << \") (\" << b[indb].x \n    // //     << \",\" << b[indb].y << \")\\n\"; \n} \n\n  function createNodeId2 (p) {\n    return p.x + ',' + p.y\n  }\n\nfunction clearGraphRelatedData () {\n  if (routeLayer !== null) routeLayer.setLatLngs([])\n  if (selectionLayer !== null) selectionLayer.clearLayers()\n}\n\nfunction setupRouteLayer () {\n  routeLayer = L.polyline([], {\n    color: '#EB3223'\n  }).addTo(map)\n}\n\nfunction setPathFinder (pathGraph) {\n  pathFinder = pathGraph\n}\n\nfunction updatePathMarkers () {\n  if(updatingPathMarkers){\n    updatingPathMarkers = 0\n    return\n  }\n\n  updatingPathMarkers = true\n\n  if(routeLayer != null)\n    routeLayer.setLatLngs([])\n  Object(_src_main__WEBPACK_IMPORTED_MODULE_4__[\"restoreOriginalPointsAndEdges\"])()\n\n  if(routeLayer != null){\n    startPoint = new _Point__WEBPACK_IMPORTED_MODULE_1__[\"Point\"]([startMarker.toGeoJSON().geometry.coordinates[0], startMarker.toGeoJSON().geometry.coordinates[1]]);\n    endPoint = new _Point__WEBPACK_IMPORTED_MODULE_1__[\"Point\"]([endMarker.toGeoJSON().geometry.coordinates[0], endMarker.toGeoJSON().geometry.coordinates[1]]);\n  }\n\n  var dynamicNodesJSON = getDynamicNodesJSON(startPoint, endPoint)\n  var dynamicEdgesJSON = getDynamicEdgesJSON(startPoint, endPoint)\n  Object(_graphHelper__WEBPACK_IMPORTED_MODULE_6__[\"updateGraphWithDynamicJSON\"])(dynamicNodesJSON, dynamicEdgesJSON)\n\n  var startCreation = new Date()\n  if(routeLayer != null){\n    var nearestStart = turf.nearestPoint(startMarker.toGeoJSON(), points)\n    var nearestEnd = turf.nearestPoint(endMarker.toGeoJSON(), points)\n    // nearestStart = startMarker.toGeoJSON()\n    // nearestEnd = endMarker.toGeoJSON()\n    foundPath = pathFinder.find(createNodeId(nearestStart), createNodeId(nearestEnd))\n    drawPath()\n  }else{\n    foundPath = pathFinder.find(createNodeId2(startPoint), createNodeId2(endPoint))\n  }\n  console.log(\"\\tvar start = [\"+createNodeId2(startPoint)+\"]\\n\\tvar end = [\"+createNodeId2(endPoint)+\"]\\n\\n\")\n\n  var endCreation = new Date() - startCreation\n  console.log('Time to find path: ', endCreation)\n\n\n\n  updatingPathMarkers = false\n\n  return foundPath\n}\n\nfunction drawPath () {\n  const pathLatLngs = foundPath.map(function (node) {\n    return [node.data.y, node.data.x]\n  })\n  routeLayer.setLatLngs(pathLatLngs)\n}\n\nfunction createNodeId (p) {\n  return p.geometry.coordinates[0] + ',' + p.geometry.coordinates[1]\n}\n\nfunction unhighlightFeature () {\n  selectionLayer.clearLayers()\n}\n\nfunction setGraph (gd) {\n  graphData = gd\n}\n\nfunction highlightFeature (e) {\n  selectionLayer.clearLayers()\n\n  const node = graphData.getNode(e.target._latlng.lng + ',' + e.target._latlng.lat)\n\n  graphData.forEachLinkedNode(e.target._latlng.lng + ',' + e.target._latlng.lat, function (linkedNode, link) {\n    L.polyline([[linkedNode.data.y, linkedNode.data.x], [node.data.y, node.data.x]], {\n      weight: 0.5,\n      opacity: 0.8,\n      pane: 'shadowPane',\n      interactive: false\n    }).addTo(selectionLayer)\n  })\n}\n\nfunction createNumberDiv () {\n  return L.Icon.extend({\n    options: {\n      iconSize: new L.Point(15, 15),\n      className: 'leaflet-div-icon'\n    },\n    createIcon: function () {\n      var div = document.createElement('div')\n      var numdiv = document.createElement('div')\n      numdiv.setAttribute('class', 'number')\n      numdiv.innerHTML = this.options['number'] || ''\n      div.appendChild(numdiv)\n      this._setIconStyles(div, 'icon')\n      return div\n    }\n  })\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFwSGVscGVycy5qcz9mYzY1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFzQztBQUNQO0FBQ2tCO0FBQzZCO0FBQ3VFO0FBQ3ZHO0FBQ1k7OztBQUcxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBOzs7Ozs7QUFNQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTs7O0FBR0EsbUJBQW1CLDRDQUFLO0FBQ3hCLGlCQUFpQiw0Q0FBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkJ0QjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQSxLQUFLO0FBQ0w7Ozs7Ozs7OztBQVNBLEVBQUUsNERBQVU7O0FBRVosd0NBQXdDLFFBQVE7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsSUFBSSxzRUFBYztBQUNsQjtBQUNBOztBQUVBLHVEQUF1RCxRQUFRO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7Ozs7O0FBU0E7O0FBRUE7Ozs7OztBQU1BOztBQUVBLHVDQUF1QyxRQUFRO0FBQy9DLDRCQUE0QixRQUFRO0FBQ3BDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLDBCQUEwQixRQUFRO0FBQ2xDLHlCQUF5QixRQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsaUJBQWlCO0FBQ3ZDOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw4RUFBOEU7QUFDeEc7QUFDQTtBQUNBOztBQUVBO0FBQ0EseUNBQXlDLFFBQVE7QUFDakQ7QUFDQTs7QUFFQTs7QUFFQSw0Q0FBNEMsUUFBUTtBQUNwRCw0QkFBNEIsUUFBUTtBQUNwQzs7QUFFQTtBQUNBLDBCQUEwQixrRUFBa0U7QUFDNUY7O0FBRUE7QUFDQSw2QkFBNkIsa0VBQWtFO0FBQy9GO0FBQ0E7O0FBRUE7OztBQUdBOztBQUVBOztBQUVBO0FBQ0EsaUJBQWlCLHNCQUFzQjtBQUN2QztBQUNBOztBQUVBLG1CQUFtQixjQUFjO0FBQ2pDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBLEM7QUFDQTtBQUNBLGlCO0FBQ0E7QUFDQSxpQjtBQUNBO0FBQ0EsaUI7QUFDQSxhO0FBQ0EsQzs7QUFFQTtBQUNBO0FBQ0EsQztBQUNBO0FBQ0Esa0M7O0FBRUE7QUFDQSxpQjtBQUNBO0FBQ0EsaUI7QUFDQSxjO0FBQ0EsQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGdCQUFnQiw0Q0FBSztBQUNyQiw4QztBQUNBLGdCQUFnQiw0Q0FBSztBQUNyQiw4Qzs7QUFFQSxzQjtBQUNBLHNCOztBQUVBO0FBQ0Esb0M7QUFDQSx3QztBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx1Q0FBdUMsU0FBUztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLDJFQUF5Qjs7O0FBRzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0NBQStDLFFBQVE7QUFDdkQ7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHdDQUF3QyxRQUFRO0FBQ2hEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdDQUFnQyxvRUFBa0I7O0FBRWxEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwrQkFBK0IsNEdBQTRHO0FBQzNJO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELFFBQVE7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsNEdBQTRHO0FBQ2hKLFVBQVU7QUFDVjtBQUNBO0FBQ0Esb0NBQW9DLDRHQUE0RztBQUNoSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7OztBQVlBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7O0FBVUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx1QkFBdUIseUJBQXlCO0FBQ2hEOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLDhDQUE4QyxRQUFRO0FBQ3RELGdEQUFnRCxRQUFRO0FBQ3hEO0FBQ0E7QUFDQSxxQ0FBcUMsaUZBQWlGO0FBQ3RIO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGlGQUFpRjtBQUN2SDtBQUNBOztBQUVBLDhDQUE4QyxRQUFRO0FBQ3RELDhDQUE4QyxRQUFRO0FBQ3REO0FBQ0E7QUFDQSxxQ0FBcUMsK0VBQStFO0FBQ3BIO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLCtFQUErRTtBQUNySDtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsK0VBQStFO0FBQ3JIO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx3QkFBd0IsNkNBQTZDLDJDQUEyQztBQUNoSCx3QkFBd0IsMkNBQTJDLHVDQUF1Qzs7QUFFMUc7QUFDQTs7QUFFQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0EsQztBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CLGNBQWM7QUFDbEM7QUFDQTtBQUNBOztBQUVBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7Ozs7OztBQVFBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQkFBbUIsdUJBQXVCO0FBQzFDO0FBQ0Esc0JBQXNCLDRDQUFLO0FBQzNCO0FBQ0E7O0FBRUEsd0JBQXdCLHFCQUFxQjtBQUM3Qzs7QUFFQSx5QkFBeUIsNENBQUs7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBLDRCQUE0Qiw0Q0FBSztBQUNqQyxvQkFBb0IsK0RBQWdCO0FBQ3BDLG9CQUFvQiwrREFBZ0I7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLHVCQUF1QixxQkFBcUI7QUFDNUMsK0NBQStDLFFBQVE7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsUUFBUTtBQUMzRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGlCQUFpQix5QkFBeUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNENBQUs7QUFDdEIsaUJBQWlCLDRDQUFLOzs7O0FBSXRCO0FBQ0E7O0FBRUEsT0FBTywyREFBUztBQUNoQixtQkFBbUIsZ0VBQWdFO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsOENBQThDLFFBQVE7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esd0JBQXdCLGdGQUFnRjtBQUN4RztBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBLE1BQU07O0FBRU47QUFDQTtBQUNBO0FBQ0EsTUFBTTs7Ozs7QUFLTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OztBQVFBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OztBQVFBO0FBQ0E7QUFDQTtBQUNBLE1BQU07O0FBRU47O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTs7QUFFTjtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7Ozs7Ozs7Ozs7QUFXQTtBQUNBO0FBQ0Esd0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsMEM7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQixRO0FBQ0EseUM7QUFDQTtBQUNBLDJCO0FBQ0Esd0I7QUFDQSx3QjtBQUNBLFE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsTUFBTTtBQUMxQixRO0FBQ0Esd0I7QUFDQSx3QjtBQUNBLFE7O0FBRUE7O0FBRUEsMEM7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQixRO0FBQ0EsMkI7QUFDQSwyQjtBQUNBLHlDO0FBQ0Esd0I7QUFDQSx3QjtBQUNBLFE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IsTUFBTTtBQUMxQixRO0FBQ0Esc0I7QUFDQSxzQjtBQUNBLFE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0EsUTs7QUFFQTtBQUNBLDBCO0FBQ0Esb0JBQW9CLE1BQU07QUFDMUI7QUFDQSxzQjs7QUFFQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0Esb0I7O0FBRUE7QUFDQSxnQztBQUNBLG9CO0FBQ0E7QUFDQSxRO0FBQ0Esb0I7QUFDQTtBQUNBLGlEQUFpRCw2QkFBNkI7QUFDOUUsaURBQWlELDZCQUE2QjtBQUM5RSx3REFBd0QsMkNBQTJDO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBO0FBQ0Esc0M7O0FBRUE7QUFDQSxZO0FBQ0EscUM7QUFDQSx3QjtBQUNBLFk7QUFDQSxRO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDJDO0FBQ0EsQzs7QUFFQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxFQUFFLCtFQUE2Qjs7QUFFL0I7QUFDQSxxQkFBcUIsNENBQUs7QUFDMUIsbUJBQW1CLDRDQUFLO0FBQ3hCOztBQUVBO0FBQ0E7QUFDQSxFQUFFLCtFQUEwQjs7QUFFNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7OztBQUlBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6Ii4vc3JjL21hcEhlbHBlcnMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlR3JhcGggZnJvbSAnbmdyYXBoLmdyYXBoJ1xuaW1wb3J0IHsgUG9pbnQgfSBmcm9tICcuL1BvaW50J1xuaW1wb3J0IHsgc2V0dXBTdHJ1Y3R1cmUgfSBmcm9tICcuL3NldHVwU3RydWN0dXJlJ1xuaW1wb3J0IHsgSU5GLCBlZGdlSW50ZXJzZWN0LCBvblNlZ21lbnQsIGNjdywgY2FsY0VkZ2VEaXN0YW5jZSB9IGZyb20gJy4vdXRpbHMnXG5pbXBvcnQgeyBpc1Zpc2libGUsIGdldFZpc2libGVOb2RlcywgbG9hZFBvaW50cywgcmVzdG9yZU9yaWdpbmFsUG9pbnRzQW5kRWRnZXMsIGdldE9ic3RydWN0aW5nRWRnZSwgYWRkU3RhcnRpbmdBbmRFbmRpbmdOb2RlcyB9IGZyb20gJy4uLy4uL3NyYy9tYWluJ1xuaW1wb3J0IHsgbWFrZUNvbnZleGh1bGwgfSBmcm9tICcuL2NvbnZleC1odWxsJ1xuaW1wb3J0IHsgdXBkYXRlR3JhcGhXaXRoRHluYW1pY0pTT04gfSBmcm9tICcuL2dyYXBoSGVscGVyJ1xuXG5cbmxldCBtYXAgPSBudWxsXG5sZXQgc3RhcnRNYXJrZXIgPSBudWxsXG5sZXQgZW5kTWFya2VyID0gbnVsbFxubGV0IHNlbGVjdGlvbkxheWVyID0gbnVsbFxubGV0IHBvbHlMYXllciA9IG51bGxcbmxldCBwb2ludHMgPSBudWxsXG5sZXQgcG9pbnRzTHlyID0gbnVsbFxubGV0IGdyYXBoRGF0YSA9IG51bGxcbmxldCBmb3VuZFBhdGggPSBudWxsXG5sZXQgcGF0aEZpbmRlciA9IG51bGxcbmxldCByb3V0ZUxheWVyID0gbnVsbFxubGV0IHBvaW50czEgPSBbXVxubGV0IHBvaW50czIgPSBbXVxubGV0IHBvaW50c0FyciA9IFtdXG5sZXQgdHVyZlBvbHlnb25zID0gW11cbnZhciBvdXRwdXQgPSBcIlwiXG52YXIgbXVsdGlwbGllciA9IDEwMDAgKiAxMDAwICogMTAwMCAqIDEwMDAgKiAxMDAwICogMTAwMCAqIDEwMDAgKiAxMDAwXG52YXIgdXBkYXRpbmdQYXRoTWFya2VycyA9IGZhbHNlXG52YXIgYWxsVGFuZ2VudHMgPSBbXVxudmFyIHN0YXJ0UG9pbnQgPSBudWxsXG52YXIgZW5kUG9pbnQgPSBudWxsXG5cblxuZXhwb3J0IGZ1bmN0aW9uIHNldHVwTWFwIChzdGFydCwgZW5kLCBzaG93TWFwKSB7XG4gIGlmKHNob3dNYXApe1xuICAgIG1hcCA9IEwubWFwKCdtYXAnLCB7XG4gICAgICBtaW5ab29tOiAxLFxuICAgICAgbWF4Wm9vbTogMjAsXG4gICAgICBjZW50ZXI6IFswLCAwXSxcbiAgICAgIHpvb206IDIsXG4gICAgICBjcnM6IEwuQ1JTLlNpbXBsZVxuICAgIH0pXG5cbiAgICBMLk51bWJlcmVkRGl2SWNvbiA9IGNyZWF0ZU51bWJlckRpdigpXG4gIH1cblxuICBpZihzdGFydCA9PSBudWxsKXtcbiAgICAvLyB2YXIgc3RhcnQgPSBbNzMuMTkzNzQ5OTk0MDM5NTQsMC42NTQ4ODI4MDcyODQ1OTM2XVxuICAgIC8vIHZhciBlbmQgPSBbNzMuMTk4NDQ5NjExNjY0LDAuNjkxOTUwMTg5ODA3NTg1XVxuXG4gICAgLy8gdmFyIHN0YXJ0ID0gWzczLjIwMzEzNzIwNTkxMzY2LDAuNjY4ODg0Mjc3MzQzNzVdXG4gICAgLy8gdmFyIGVuZCA9IFs3My4yMjY4OTIwOTEzMzM4NywwLjY3ODA1MTc1NDgzMjI2NzhdXG5cbiAgICAvLyB2YXIgc3RhcnQgPSBbNzMuMjAwNzgxMjQxMDU5MywwLjY2NTQ3ODUyMzgyMDYzODddXG4gICAgLy8gdmFyIGVuZCA9IFs3My4yMDEwNzQyMjc2OTA3LDAuNzAwMzkwNjI1NzQ1MDU4MV1cblxuICAgIC8vIHZhciBzdGFydCA9IFs3My4xNDY1NzY0MjczOCwwLjY2Mzk5MDM2MzU0MjYzNzldXG4gICAgLy8gdmFyIGVuZCA9IFs3My4yMDEwNzQyMjc2OTA3LDAuNzAwMzkwNjI1NzQ1MDU4MV1cblxuXG4gICAgdmFyIHN0YXJ0ID0gWzczLjE5NzA3MDMwMDU3OTA3LDAuNjY3NzczNDQwNDgwMjMyMl1cbiAgICB2YXIgZW5kID0gWzczLjE3OTAxNjExMzI4MTI1LDAuNjgzNDEwNjQ0OTk2OTExM11cblxuXG5cblxuXG4gICAgLy8gdmFyIHN0YXJ0ID0gWzczLjE4NjI4ODQ3NTk5LDAuNjYwNTQ5MDc0MzU4MTQ0MV1cbiAgICAvLyB2YXIgZW5kID0gWzczLjE2OTAwMjU5MDIyNCwwLjY2ODkzMTE3MDE2MzA0ODddXG5cblxuXG5cbiAgICAvLyB2YXIgc3RhcnQgPSBbNzMuMjM0Mzc1LDAuMTQ0NTMxMTkwMzk1MzU1MjJdXG4gICAgLy8gdmFyIGVuZCA9IFs3My4xNjkwMDI1OTAyMjQsMC42Njg5MzExNzAxNjMwNDg3XVxuICB9XG5cblxuICBzdGFydFBvaW50ID0gbmV3IFBvaW50KHN0YXJ0KTtcbiAgZW5kUG9pbnQgPSBuZXcgUG9pbnQoZW5kKTtcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4gIC8vIHZhciBzdGFydCA9IFs3My4xOTY1NTA2MDc2ODEsMC42NzQ1Mzg1MjcwMTMxNjkyXVxuICAvLyB2YXIgZW5kID0gWzczLjE5NTYxNzE5ODk0NCwwLjY3NDc0MjM2MDc2NzM4MjRdXG5cbiAgLy8gdmFyIHN0YXJ0ID0gWzczLjE4NDYxOTE0MzYwNTIzLDAuNjg4MDg1OTMyMjg0NTkzNl1cbiAgLy8gdmFyIGVuZCA9IFs3My4xOTg0NDk2MTE2NjQsMC42OTE5NTAxODk4MDc1ODVdXG5cbiAgaWYoc2hvd01hcCl7XG4gICAgc3RhcnRNYXJrZXIgPSBMLm1hcmtlcihbc3RhcnRbMV0sc3RhcnRbMF1dLCB7XG4gICAgICBkcmFnZ2FibGU6IHRydWUsXG4gICAgICBpY29uOiBuZXcgTC5OdW1iZXJlZERpdkljb24oKVxuICAgIH0pLmFkZFRvKG1hcClcblxuICAgIGVuZE1hcmtlciA9IEwubWFya2VyKFtlbmRbMV0sZW5kWzBdXSwge1xuICAgICAgZHJhZ2dhYmxlOiB0cnVlLFxuICAgICAgaWNvbjogbmV3IEwuTnVtYmVyZWREaXZJY29uKClcbiAgICB9KS5hZGRUbyhtYXApXG5cbiAgICBzdGFydE1hcmtlci5vbignZHJhZycsIHVwZGF0ZVBhdGhNYXJrZXJzKVxuICAgIGVuZE1hcmtlci5vbignZHJhZycsIHVwZGF0ZVBhdGhNYXJrZXJzKVxuICAgIHNlbGVjdGlvbkxheWVyID0gTC5sYXllckdyb3VwKFtdKS5hZGRUbyhtYXApXG4gIH1lbHNlXG4gICAgcmV0dXJuIHVwZGF0ZVBhdGhNYXJrZXJzKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldERhdGEgKGRhdGEsIHNob3dNYXApIHtcbiAgaWYoc2hvd01hcCl7XG4gICAgcG9seUxheWVyID0gTC5nZW9Kc29uKGRhdGEsIHtcbiAgICAgIG5vQ2xpcDogdHJ1ZSxcbiAgICAgIHN0cm9rZTogZmFsc2UsXG4gICAgICBmaWxsQ29sb3I6ICcjOEI5OUFFJ1xuICAgIH0pLmFkZFRvKG1hcClcblxuICAgIG1hcC5maXRCb3VuZHMocG9seUxheWVyLmdldEJvdW5kcygpLCB7XG4gICAgICBwYWRkaW5nOiBbMjAsIDIwXVxuICAgIH0pXG5cbiAgICBwb2ludHMgPSB0dXJmLmZlYXR1cmVDb2xsZWN0aW9uKFtdKVxuXG4gICAgcG9pbnRzTHlyID0gTC5sYXllckdyb3VwKFtdLCB7XG4gICAgICBwYW5lOiAncG9wdXBQYW5lJ1xuICAgIH0pLmFkZFRvKG1hcClcblxuICAgIHR1cmYubWV0YS5jb29yZEVhY2goZGF0YSwgZnVuY3Rpb24gKGN1cnJlbnRDb29yZCkge1xuICAgICAgcG9pbnRzLmZlYXR1cmVzLnB1c2godHVyZi5wb2ludChbY3VycmVudENvb3JkWzBdLCBjdXJyZW50Q29vcmRbMV1dKSlcblxuICAgICAgdmFyIGxheWVyID0gTC5jaXJjbGVNYXJrZXIoW2N1cnJlbnRDb29yZFsxXSwgY3VycmVudENvb3JkWzBdXSwge1xuICAgICAgICByYWRpdXM6IDMsXG4gICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgIGZpbGxPcGFjaXR5OiAwLjUsXG4gICAgICAgIG9yaWdQb2ludDogW2N1cnJlbnRDb29yZFswXSwgY3VycmVudENvb3JkWzFdXVxuICAgICAgfSkuYWRkVG8ocG9pbnRzTHlyKVxuICAgICAgbGF5ZXIub24oJ21vdXNlb3ZlcicsIGhpZ2hsaWdodEZlYXR1cmUpXG4gICAgICBsYXllci5vbignbW91c2VvdXQnLCB1bmhpZ2hsaWdodEZlYXR1cmUpXG5cbiAgICB9LCB0cnVlKVxuICB9XG5cblxuXG5cblxuXG5cblxuICBsb2FkUG9pbnRzKGRhdGEpXG5cbiAgZm9yICh2YXIgaSA9IGRhdGEuZmVhdHVyZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBjb25zdCBlZGdlcyA9IFtdXG4gICAgY29uc3QgcG9seWdvbnMgPSBbXVxuICAgIHBvaW50czEgPSBbXVxuICAgIHNldHVwU3RydWN0dXJlKGRhdGEuZmVhdHVyZXNbaV0sIGVkZ2VzLCBwb2ludHMxLCBwb2x5Z29ucywgaSlcbiAgICBwb2ludHNBcnIucHVzaChwb2ludHMxLnNsaWNlKDApKVxuICB9XG5cbiAgLy8gZm9yICh2YXIgaSA9IGRhdGEuZ2VvbWV0cnkuY29vcmRpbmF0ZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgLy8gICBjb25zdCBlZGdlcyA9IFtdXG4gIC8vICAgY29uc3QgcG9seWdvbnMgPSBbXVxuICAvLyAgIHBvaW50czEgPSBbXVxuICAvLyAgIHNldHVwU3RydWN0dXJlKGRhdGEuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbaV0sIGVkZ2VzLCBwb2ludHMxLCBwb2x5Z29ucywgaSlcbiAgLy8gICBwb2ludHNBcnIucHVzaChwb2ludHMxLnNsaWNlKDApKVxuICAvLyB9XG5cbiAgLy8gbG9hZFR1cmZQb2x5Z29ucyhkYXRhKVxuXG5cblxuXG5cblxuXG5cbiAgLy8gdmFyIHRhbmdlbnRzID0gZ2V0UG9seWdvblRhbmdlbnRzKG5ldyBQb2ludChbNzMuMTQ2NTc2NDI3MzgsMC42NjM5OTAzNjM1NDI2Mzc5XSksIHBvaW50c0FyclsxMV0pXG5cbiAgLy8gY29uc29sZS5sb2coXCJcXHR2YXIgc3RhcnQgPSBbXCIrY3JlYXRlTm9kZUlkMihuZXcgUG9pbnQoWzczLjE0NjU3NjQyNzM4LDAuNjYzOTkwMzYzNTQyNjM3OV0pKStcIl1cXG5cXHR2YXIgZW5kID0gW1wiK2NyZWF0ZU5vZGVJZDIodGFuZ2VudHNbMV0pK1wiXVxcblxcblwiKVxuXG5cblxuXG5cbiAgICBjb25zb2xlLmxvZygnc3RhcnRpbmcnKVxuXG4gIC8vIGZvciAodmFyIGkgPSBwb2ludHNBcnIubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgLy8gLy8gZm9yICh2YXIgaSA9IDE5IC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgLy8gICAvLyB2YXIgaSA9IDQ7XG4gIC8vICAgLy8gdmFyIGogPSAxMTtcblxuICAvLyAgIC8vIHZhciBpID0gNDtcbiAgLy8gICAvLyB2YXIgaiA9IDk7XG5cbiAgLy8gICAvLyB2YXIgaSA9IDExO1xuICAvLyAgIC8vIHZhciBqID0gMDtcblxuICAvLyAgIGZvciAodmFyIGogPSBpIC0gMTsgaiA+PSAwOyBqLS0pIHtcbiAgLy8gICAvLyBmb3IgKHZhciBqID0gNTsgaiA+PSAyOyBqLS0pIHtcbiAgLy8gICAvLyAgIGlmKGkgPT0gaikgY29udGludWVcbiAgLy8gICAgIC8vIGNvbnNvbGUubG9nKCd0ZXN0JylcbiAgLy8gICAvLyBjb25zb2xlLmxvZygnaTogJyArIGkgKyAnIGo6ICcgKyBqKVxuICAvLyAgICAgLy8gZmluZDRUYW5nZW50cyhwb2ludHNBcnJbaV0sIHBvaW50c0FycltqXSwgdHVyZlBvbHlnb25zW2ldLCB0dXJmUG9seWdvbnNbal0pXG4gIC8vICAgICBmaW5kNFRhbmdlbnRzKHBvaW50c0FycltpXSwgcG9pbnRzQXJyW2pdKVxuXG4gIC8vICAgfVxuXG5cbiAgLy8gICAvLyBmaW5kIHNob3J0Y3V0cyB0byBza2lwIGNvbmNhdmUgcGFydHMgb2YgcG9seWdvbnNcbiAgLy8gICB2YXIgcEFyciA9IHBvaW50c0FycltpXVxuICAvLyAgIHZhciBodWxsID0gbWFrZUNvbnZleGh1bGwocEFycik7XG4gIC8vICAgY29uc29sZS5sb2coJ3Rlc3QnKVxuICAvLyAgIHZhciBsID0gMFxuICAvLyAgIGZvciAodmFyIGsgPSAwOyBrIDwgaHVsbC5sZW5ndGg7IGsrKykge1xuICAvLyAgICAgdmFyIG5leHRQb2ludCA9IGh1bGxbIChrKzEpICUgaHVsbC5sZW5ndGggXVxuXG4gIC8vICAgICAvLyBmaW5kIHRoZSBwb2ludCB0aGF0IG1hdGNoZXMgdGhlIHBvaW50IGluIHRoZSBodWxsXG4gIC8vICAgICB3aGlsZSggIXBBcnJbbF0uaXNQb2ludEVxdWFsKGh1bGxba10pKXtcbiAgLy8gICAgICAgbCA9IChsKzEpICUgcEFyci5sZW5ndGhcbiAgLy8gICAgIH1cbiAgICAgIFxuICAvLyAgICAgLy8gaWYgdGhlIG5leHQgcG9pbnQgaXMgZGlmZmVyZW50IHdlIG5lZWQgdGhlIGxpbmUgYmV0d2VlblxuICAvLyAgICAgaWYoICFwQXJyW2xdLm5leHRQb2ludC5pc1BvaW50RXF1YWwobmV4dFBvaW50KSl7XG4gIC8vICAgICAgIC8vIGlmKGlzVmlzaWJsZShodWxsW2tdLG5leHRQb2ludCkpXG4gIC8vICAgICAgICAgb3V0cHV0ICs9ICcse1wiZnJvbUlkXCI6XCInKyBjcmVhdGVOb2RlSWQyKGh1bGxba10pICsnXCIsXCJ0b0lkXCI6XCInK2NyZWF0ZU5vZGVJZDIobmV4dFBvaW50KSsnXCJ9J1xuICAvLyAgICAgfVxuICAvLyAgIH1cbiAgLy8gfVxuXG4gIC8vIGNvbnNvbGUubG9nKGFsbFRhbmdlbnRzLmxlbmd0aClcbiAgLy8gZm9yICh2YXIgaSA9IGFsbFRhbmdlbnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gIC8vICAgY29uc29sZS5sb2coJ3Rlc3QnKVxuICAvLyAgIHZhciBwMSA9IGFsbFRhbmdlbnRzW2ldXG5cbiAgLy8gICB2YXIgbm9kZXNWaXNpYmxlID0gZ2V0VmlzaWJsZU5vZGVzKHAxKVxuXG4gIC8vICAgZm9yICh2YXIgayA9IG5vZGVzVmlzaWJsZS5sZW5ndGggLSAxOyBrID49IDA7IGstLSkge1xuICAvLyAgICAgZm9yICh2YXIgaiA9IGkgLSAxOyBqID49IDA7IGotLSkge1xuICAvLyAgICAgICB2YXIgcDIgPSBhbGxUYW5nZW50c1tqXVxuXG4gIC8vICAgICAgIGlmKG5vZGVzVmlzaWJsZVtrXS54ID09IHAyLnggJiYgbm9kZXNWaXNpYmxlW2tdLnkgPT0gcDIueSApe1xuICAvLyAgICAgICAgIG91dHB1dCArPSAnLHtcImZyb21JZFwiOlwiJysgY3JlYXRlTm9kZUlkMihwMSkgKydcIixcInRvSWRcIjpcIicrY3JlYXRlTm9kZUlkMihwMikrJ1wifSdcbiAgLy8gICAgICAgfVxuXG4gIC8vICAgICAgIC8vIGlmKGlzVmlzaWJsZShwMSwgcDIpKVxuICAvLyAgICAgICAvLyAgIG91dHB1dCArPSAnLHtcImZyb21JZFwiOlwiJysgY3JlYXRlTm9kZUlkMihwMSkgKydcIixcInRvSWRcIjpcIicrY3JlYXRlTm9kZUlkMihwMikrJ1wifSdcbiAgLy8gICAgIH1cbiAgLy8gICB9XG5cbiAgLy8gfVxuXG5cbiAgY29uc29sZS5sb2cob3V0cHV0KVxuXG59XG5cbmZ1bmN0aW9uIGxvYWRUdXJmUG9seWdvbnMoZGF0YSl7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcG9pbnRzQXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGFBc0ludCA9IFtdXG4gICAgdmFyIGEgPSBwb2ludHNBcnJbaV1cblxuICAgIGZvciAodmFyIGogPSAwOyBqIDwgYS5sZW5ndGg7IGorKykge1xuICAgICAgYUFzSW50LnB1c2goW01hdGgucm91bmQoYVtqXS54ICogbXVsdGlwbGllciksIE1hdGgucm91bmQoYVtqXS55ICogbXVsdGlwbGllcildKVxuICAgIH1cbiAgICBhQXNJbnQucHVzaChbTWF0aC5yb3VuZChhWzBdLnggKiBtdWx0aXBsaWVyKSwgTWF0aC5yb3VuZChhWzBdLnkgKiBtdWx0aXBsaWVyKV0pIC8vIGp1c3QgdG8gbWFrZSBzdXJlIGxhc3QgaXMgZXF1YWwgdG8gZmlyc3RcblxuICAgIHR1cmZQb2x5Z29ucy5wdXNoKHR1cmYucG9seWdvbihbYUFzSW50XSkpO1xuICB9XG59XG5cbiAgXG4vLyBkZXRlcm1pbmVzIHRoZSBxdWFkcmFudCBvZiBhIHBvaW50IFxuLy8gKHVzZWQgaW4gY29tcGFyZSgpKSBcbmZ1bmN0aW9uIHF1YWQocCkgXG57IFxuICAgIGlmIChwLnggPj0gMCAmJiBwLnkgPj0gMCkgXG4gICAgICAgIHJldHVybiAxOyBcbiAgICBpZiAocC54IDw9IDAgJiYgcC55ID49IDApIFxuICAgICAgICByZXR1cm4gMjsgXG4gICAgaWYgKHAueCA8PSAwICYmIHAueSA8PSAwKSBcbiAgICAgICAgcmV0dXJuIDM7IFxuICAgIHJldHVybiA0OyBcbn0gXG4gIFxuLy8gQ2hlY2tzIHdoZXRoZXIgdGhlIGxpbmUgaXMgY3Jvc3NpbmcgdGhlIHBvbHlnb24gXG5mdW5jdGlvbiBvcmllbnRhdGlvbiggYSwgYiwgYykgXG57IFxuICAgIHZhciByZXMgPSAoYi55LWEueSkqKGMueC1iLngpIC0gXG4gICAgICAgICAgICAgIChjLnktYi55KSooYi54LWEueCk7IFxuICBcbiAgICBpZiAocmVzID09IDApIFxuICAgICAgICByZXR1cm4gMDsgXG4gICAgaWYgKHJlcyA+IDApIFxuICAgICAgICByZXR1cm4gMTsgXG4gICAgcmV0dXJuIC0xOyBcbn0gXG4gIFxuZnVuY3Rpb24gY2xvbmVQb2ludHMgKHBvaW50cykge1xuICByZXR1cm4gcG9pbnRzLnNsaWNlKDApXG59XG5cbmZ1bmN0aW9uIHNvcnRQb2ludHMgKHBvaW50LCBjbG9uZWRQb2ludHMpIHtcbiAgY2xvbmVkUG9pbnRzLnNvcnQoKGEsIGIpID0+IHtcbiAgICB2YXIgcCA9IG5ldyBQb2ludChbYS54IC0gbWlkLngsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhLnkgLSBtaWQueV0pOyBcbiAgICB2YXIgcSA9IG5ldyBQb2ludChbYi54IC0gbWlkLngsIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiLnkgLSBtaWQueV0pOyBcbiAgXG4gICAgdmFyIG9uZSA9IHF1YWQocCk7IFxuICAgIHZhciB0d28gPSBxdWFkKHEpOyBcbiAgXG4gICAgaWYgKG9uZSAhPSB0d28pIFxuICAgICAgICByZXR1cm4gKG9uZSA8IHR3byA/IC0xIDogMSk7IFxuICAgIHJldHVybiAocC55KnEueCA8IHEueSpwLnggPyAtMSA6IDEpOyBcbiAgfSlcbn1cblxuLy8gZnVuY3Rpb24gc29ydFBvaW50cyAocG9pbnQsIGNsb25lZFBvaW50cykge1xuLy8gICBjbG9uZWRQb2ludHMuc29ydCgoYSwgYikgPT4ge1xuLy8gICAgIGNvbnN0IGFuZ2xlMSA9IHBvaW50LmFuZ2xlVG9Qb2ludChhKVxuLy8gICAgIGNvbnN0IGFuZ2xlMiA9IHBvaW50LmFuZ2xlVG9Qb2ludChiKVxuLy8gICAgIGlmIChhbmdsZTEgPCBhbmdsZTIpIHJldHVybiAtMVxuLy8gICAgIGlmIChhbmdsZTEgPiBhbmdsZTIpIHJldHVybiAxXG4vLyAgICAgY29uc3QgZGlzdDEgPSBjYWxjRWRnZURpc3RhbmNlKHBvaW50LCBhKVxuLy8gICAgIGNvbnN0IGRpc3QyID0gY2FsY0VkZ2VEaXN0YW5jZShwb2ludCwgYilcbi8vICAgICBpZiAoZGlzdDEgPCBkaXN0MikgcmV0dXJuIC0xXG4vLyAgICAgaWYgKGRpc3QxID4gZGlzdDIpIHJldHVybiAxXG4vLyAgICAgcmV0dXJuIDBcbi8vICAgfSlcbi8vIH1cblxuZnVuY3Rpb24gZ2V0UG9seWdvblRhbmdlbnRzKHNyY1BvaW50LCBwb2ludHNBcnIpe1xuICAgIC8vIGluaXRpYWxpemUgdXNpbmcgZmlyc3QgcG9pbnRcbiAgICB2YXIgZmlyc3RQb2ludCA9IHBvaW50c0Fycltwb2ludHNBcnIubGVuZ3RoIC0gMV1cbiAgICB2YXIgYW5nbGUgPSBzcmNQb2ludC5hbmdsZVRvUG9pbnQoZmlyc3RQb2ludClcbiAgICB2YXIgbGVmdE1vc3RBbmdsZSA9IGFuZ2xlXG4gICAgdmFyIHJpZ2h0TW9zdEFuZ2xlID0gYW5nbGVcbiAgICB2YXIgbGVmdE1vc3RQb2ludCA9IGZpcnN0UG9pbnRcbiAgICB2YXIgcmlnaHRNb3N0UG9pbnQgPSBmaXJzdFBvaW50XG4gICAgICAgIC8vIHJvdXRlTGF5ZXIuc2V0TGF0TG5ncyhbc3JjUG9pbnQsIGZpcnN0UG9pbnRdKVxuXG4gICAgZm9yICh2YXIgaSA9ICBwb2ludHNBcnIubGVuZ3RoIC0gMjsgIGkgPj0gMDsgaS0tKSB7XG4gICAgICAgIC8vIGlzIHRoaXMgcG9pbnQgbW9yZSB0b3dhcmRzIGxlZnQgdGhhbiBsZWZ0IG1vc3QgcG9pbnQ/XG4gICAgICAgIHZhciBhbmdsZSA9IHNyY1BvaW50LmFuZ2xlVG9Qb2ludChwb2ludHNBcnJbaV0pXG4gICAgICAgIHZhciBkaWZmMSA9IHJpZ2h0TW9zdEFuZ2xlIC0gYW5nbGVcbiAgICAgICAgZGlmZjEgPSBkaWZmMSA8IDAgPyAoKGRpZmYxIDwgLU1hdGguUEkpID8gZGlmZjEgKyBNYXRoLlBJKjIgOiBNYXRoLlBJICogMykgOiBkaWZmMVxuICAgICAgICAvLyBkaWZmMSA9IGRpZmYxIDwgMCA/IGRpZmYxICsgTWF0aC5QSSoyIDogZGlmZjFcblxuICAgICAgICAvLyBpcyB0aGlzIHBvaW50IG1vcmUgdG93YXJkcyByaWdodCB0aGFuIHJpZ2h0IG1vc3QgcG9pbnQ/XG4gICAgICAgIHZhciBhbmdsZSA9IHNyY1BvaW50LmFuZ2xlVG9Qb2ludChwb2ludHNBcnJbaV0pXG4gICAgICAgIHZhciBkaWZmMiA9IGFuZ2xlIC0gbGVmdE1vc3RBbmdsZVxuICAgICAgICBkaWZmMiA9IGRpZmYyIDwgMCA/ICgoZGlmZjIgPCAtTWF0aC5QSSkgPyBkaWZmMiArIE1hdGguUEkqMiA6IE1hdGguUEkgKiAzKSA6IGRpZmYyXG4gICAgICAgIC8vIGRpZmYyID0gZGlmZjIgPCAwID8gZGlmZjIgKyBNYXRoLlBJKjIgOiBkaWZmMlxuXG4gICAgICAgIC8vIGlmKGkgPT0gNTYpXG4gICAgICAgIC8vICAgaSA9IGlcblxuXG4gICAgICAgIC8qIGlmIHVuY2hhcnRlcmVkIGFuZ2xlICovXG4gICAgICAgIGlmKGRpZmYxIDwgTWF0aC5QSS8yIHx8IGRpZmYyIDwgTWF0aC5QSS8yKXtcbiAgICAgICAgICBpZihkaWZmMSA8IGRpZmYyKXtcbiAgICAgICAgICAgIC8qIGlmIGNsb3NlciB0byBsZWZ0IG1vc3QgcG9pbnQgKi9cbiAgICAgICAgICAgIHJpZ2h0TW9zdEFuZ2xlID0gYW5nbGVcbiAgICAgICAgICAgIHJpZ2h0TW9zdFBvaW50ID0gcG9pbnRzQXJyW2ldXG4gICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICBsZWZ0TW9zdEFuZ2xlID0gYW5nbGVcbiAgICAgICAgICAgIGxlZnRNb3N0UG9pbnQgPSBwb2ludHNBcnJbaV1cbiAgICAgICAgICAgIC8vIGJyZWFrXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFtsZWZ0TW9zdFBvaW50LCByaWdodE1vc3RQb2ludF1cbn1cblxuZnVuY3Rpb24gZ2V0RHluYW1pY0VkZ2VzSlNPTihzdGFydFBvaW50LCBlbmRQb2ludClcbntcbiAgdmFyIGR5bmFtaWNFZGdlc0pTT04gPSBcIlwiXG4gIC8vIHZhciBzdGFydFBvaW50ID0gbmV3IFBvaW50KFtzdGFydFBvaW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdLCBzdGFydFBvaW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdXSk7XG4gIC8vIHZhciBlbmRQb2ludCA9IG5ldyBQb2ludChbZW5kUG9pbnQuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0sIGVuZFBvaW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdXSk7XG4gIGFkZFN0YXJ0aW5nQW5kRW5kaW5nTm9kZXMoc3RhcnRQb2ludCwgZW5kUG9pbnQpXG5cblxuICB2YXIgcG9pbnRzVG9Db25uZWN0ID0gW11cbiAgdmFyIHBvbHlnb25JZHMgPSBbXVxuICBwb2ludHNUb0Nvbm5lY3QucHVzaChbZW5kUG9pbnQsIHN0YXJ0UG9pbnRdKVxuICBwb2ludHNUb0Nvbm5lY3QucHVzaChbc3RhcnRQb2ludCwgZW5kUG9pbnRdKVxuICBwb2x5Z29uSWRzLnB1c2goLTEpXG4gIHBvbHlnb25JZHMucHVzaCgtMSlcbiAgdmFyIGsgPSAwXG5cbiAgd2hpbGUocG9pbnRzVG9Db25uZWN0Lmxlbmd0aCAhPSAwKXtcbiAgICB2YXIgb2xkUG9pbnRzVG9Db25uZWN0ID0gcG9pbnRzVG9Db25uZWN0LnNsaWNlKDApXG4gICAgdmFyIG9sZFBvbHlnb25JZHMgPSBwb2x5Z29uSWRzLnNsaWNlKDApXG4gICAgcG9pbnRzVG9Db25uZWN0ID0gW11cbiAgICBwb2x5Z29uSWRzID0gW11cblxuICAgIGZvciAodmFyIGkgPSBvbGRQb2ludHNUb0Nvbm5lY3QubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIHZhciBzcmNQb2ludCA9IG9sZFBvaW50c1RvQ29ubmVjdFtpXVswXVxuICAgICAgdmFyIGRlc3RQb2ludCA9IG9sZFBvaW50c1RvQ29ubmVjdFtpXVsxXVxuXG4gICAgICB2YXIgYW5nbGUgPSBzcmNQb2ludC5hbmdsZVRvUG9pbnQoZGVzdFBvaW50KVxuICAgICAgdmFyIG5vT2JzdHJ1Y3RpbmdQb2x5Z29ucyA9IHRydWVcblxuICAgICAgZm9yICh2YXIgaiA9IHBvaW50c0Fyci5sZW5ndGggLSAxOyBqID49IDA7IGotLSkge1xuICAgICAgICB2YXIgdGFuZ2VudHMgPSBnZXRQb2x5Z29uVGFuZ2VudHMob2xkUG9pbnRzVG9Db25uZWN0W2ldWzBdLCBwb2ludHNBcnJbal0pXG4gICAgICAgIHZhciBhbmdsZTEgPSBzcmNQb2ludC5hbmdsZVRvUG9pbnQodGFuZ2VudHNbMF0pXG4gICAgICAgIHZhciBhbmdsZTIgPSBzcmNQb2ludC5hbmdsZVRvUG9pbnQodGFuZ2VudHNbMV0pXG5cbiAgICAgICAgLy8gbWFrZSBhbGwgYW5nbGVzIHJlbGF0aXZlIHRvIHJpZ2h0IG1vc3QgYW5nbGUgKGFuZ2xlMikgYnkgbWFraW5nIHJpZ2h0IG1vc3QgYW5nbGUgMCAoc3RhcnRpbmcgYW5nbGUpXG4gICAgICAgIHZhciBhbmdsZTAgPSBhbmdsZSAtIGFuZ2xlMlxuICAgICAgICBhbmdsZTEgLT0gYW5nbGUyXG4gICAgICAgIGFuZ2xlMiAtPSBhbmdsZTJcblxuICAgICAgICBpZihhbmdsZTIgPCBhbmdsZTAgJiYgYW5nbGUwIDwgYW5nbGUxKXtcbiAgICAgICAgICB2YXIgb2JzdHJ1Y3RpbmdFZGdlID0gZ2V0T2JzdHJ1Y3RpbmdFZGdlKG9sZFBvaW50c1RvQ29ubmVjdFtpXVswXSwgb2xkUG9pbnRzVG9Db25uZWN0W2ldWzFdLCBwb2ludHNBcnJbal0pXG5cbiAgICAgICAgICBpZihvYnN0cnVjdGluZ0VkZ2UgIT0gbnVsbCl7XG4gICAgICAgICAgICBub09ic3RydWN0aW5nUG9seWdvbnMgPSBmYWxzZVxuICAgICAgICAgICAgcG9pbnRzVG9Db25uZWN0LnB1c2goW29sZFBvaW50c1RvQ29ubmVjdFtpXVswXSwgdGFuZ2VudHNbMF1dKVxuICAgICAgICAgICAgcG9pbnRzVG9Db25uZWN0LnB1c2goW29sZFBvaW50c1RvQ29ubmVjdFtpXVswXSwgdGFuZ2VudHNbMV1dKVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmKG5vT2JzdHJ1Y3RpbmdQb2x5Z29ucylcbiAgICAgICAgZHluYW1pY0VkZ2VzSlNPTiArPSAnLHtcImZyb21JZFwiOlwiJytjcmVhdGVOb2RlSWQyKG9sZFBvaW50c1RvQ29ubmVjdFtpXVswXSkrJ1wiLFwidG9JZFwiOlwiJytjcmVhdGVOb2RlSWQyKG9sZFBvaW50c1RvQ29ubmVjdFtpXVsxXSkrJ1wifSdcbiAgICB9XG4gICAgaysrXG4gIH1cblxuICByZXR1cm4gZHluYW1pY0VkZ2VzSlNPTlxufVxuXG4vLyBmdW5jdGlvbiBnZXREeW5hbWljRWRnZXNKU09OKHN0YXJ0UG9pbnQsIGVuZFBvaW50KVxuLy8ge1xuLy8gICB2YXIgZHluYW1pY0VkZ2VzSlNPTiA9IFwiXCJcbi8vICAgLy8gdmFyIG5lYXJlc3RQb2ludFxuLy8gICAvLyB2YXIgc3RhcnQgPSB0dXJmLnBvaW50KFtNYXRoLnJvdW5kKHN0YXJ0UG9pbnQuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0gKiBtdWx0aXBsaWVyKSwgTWF0aC5yb3VuZChzdGFydFBvaW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdICogbXVsdGlwbGllcildKTtcbi8vICAgLy8gdmFyIGVuZCA9IHR1cmYucG9pbnQoW01hdGgucm91bmQoZW5kUG9pbnQuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0gKiBtdWx0aXBsaWVyKSwgTWF0aC5yb3VuZChlbmRQb2ludC5nZW9tZXRyeS5jb29yZGluYXRlc1sxXSAqIG11bHRpcGxpZXIpXSk7XG4vLyAgIHZhciBzdGFydFBvaW50ID0gbmV3IFBvaW50KFtzdGFydFBvaW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdLCBzdGFydFBvaW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdXSk7XG4vLyAgIHZhciBlbmRQb2ludCA9IG5ldyBQb2ludChbZW5kUG9pbnQuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0sIGVuZFBvaW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdXSk7XG4vLyAgIGFkZFN0YXJ0aW5nQW5kRW5kaW5nTm9kZXMoc3RhcnRQb2ludCwgZW5kUG9pbnQpXG5cbi8vICAgdmFyIHBvaW50c1RvQ29ubmVjdCA9IFtdXG4vLyAgIHZhciBwb2x5Z29uSWRzID0gW11cbi8vICAgcG9pbnRzVG9Db25uZWN0LnB1c2goW2VuZFBvaW50LCBzdGFydFBvaW50XSlcbi8vICAgLy8gcG9pbnRzVG9Db25uZWN0LnB1c2goW3N0YXJ0UG9pbnQsIGVuZFBvaW50XSlcbi8vICAgcG9seWdvbklkcy5wdXNoKC0xKVxuLy8gICAvLyBwb2x5Z29uSWRzLnB1c2goLTEpXG4vLyAgIHZhciBrID0gMFxuXG4vLyAgIHdoaWxlKHBvaW50c1RvQ29ubmVjdC5sZW5ndGggIT0gMCl7XG4vLyAgICAgdmFyIG9sZFBvaW50c1RvQ29ubmVjdCA9IHBvaW50c1RvQ29ubmVjdC5zbGljZSgwKVxuLy8gICAgIHZhciBvbGRQb2x5Z29uSWRzID0gcG9seWdvbklkcy5zbGljZSgwKVxuLy8gICAgIHBvaW50c1RvQ29ubmVjdCA9IFtdXG4vLyAgICAgcG9seWdvbklkcyA9IFtdXG4vLyAgICAgZm9yICh2YXIgaSA9IG9sZFBvaW50c1RvQ29ubmVjdC5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuLy8gICAgICAgLy8gdmFyIHR1cmZQb2ludCA9IHR1cmYucG9pbnQoW01hdGgucm91bmQob2xkUG9pbnRzVG9Db25uZWN0W2ldWzBdLnggKiBtdWx0aXBsaWVyKSwgTWF0aC5yb3VuZChvbGRQb2ludHNUb0Nvbm5lY3RbaV1bMF0ueSAqIG11bHRpcGxpZXIpXSk7XG4vLyAgICAgICB2YXIgb2JzdHJ1Y3RpbmdFZGdlID0gZ2V0T2JzdHJ1Y3RpbmdFZGdlKG9sZFBvaW50c1RvQ29ubmVjdFtpXVswXSwgb2xkUG9pbnRzVG9Db25uZWN0W2ldWzFdKVxuLy8gICAgICAgaWYob2JzdHJ1Y3RpbmdFZGdlID09IG51bGwpe1xuLy8gICAgICAgICAvLyBpZihpc1Zpc2libGUob2xkUG9pbnRzVG9Db25uZWN0W2ldWzBdLCBvbGRQb2ludHNUb0Nvbm5lY3RbaV1bMV0pKVxuLy8gICAgICAgICAgIGR5bmFtaWNFZGdlc0pTT04gKz0gJyx7XCJmcm9tSWRcIjpcIicrY3JlYXRlTm9kZUlkMihvbGRQb2ludHNUb0Nvbm5lY3RbaV1bMF0pKydcIixcInRvSWRcIjpcIicrY3JlYXRlTm9kZUlkMihvbGRQb2ludHNUb0Nvbm5lY3RbaV1bMV0pKydcIn0nXG4vLyAgICAgICB9ZWxzZXtcbi8vICAgICAgICAgdmFyIGogPSB0dXJmUG9seWdvbnMubGVuZ3RoIC0gb2JzdHJ1Y3RpbmdFZGdlLnAxLnBvbHlnb25JRCAtIDFcbi8vICAgICAgICAgaWYoaiA9PSBvbGRQb2x5Z29uSWRzW2ldKVxuLy8gICAgICAgICAgIGR5bmFtaWNFZGdlc0pTT04gKz0gJyx7XCJmcm9tSWRcIjpcIicrY3JlYXRlTm9kZUlkMihvbGRQb2ludHNUb0Nvbm5lY3RbaV1bMF0pKydcIixcInRvSWRcIjpcIicrY3JlYXRlTm9kZUlkMihvbGRQb2ludHNUb0Nvbm5lY3RbaV1bMV0pKydcIn0nXG4vLyAgICAgICAgIGVsc2V7XG4vLyAgICAgICAgICAgdmFyIHRhbmdlbnRzID0gZ2V0UG9seWdvblRhbmdlbnRzKG9sZFBvaW50c1RvQ29ubmVjdFtpXVswXSwgcG9pbnRzQXJyW2pdKVxuLy8gICAgICAgICAgIHBvaW50c1RvQ29ubmVjdC5wdXNoKFtvbGRQb2ludHNUb0Nvbm5lY3RbaV1bMF0sIHRhbmdlbnRzWzBdXSlcbi8vICAgICAgICAgICBwb2ludHNUb0Nvbm5lY3QucHVzaChbb2xkUG9pbnRzVG9Db25uZWN0W2ldWzBdLCB0YW5nZW50c1sxXV0pXG4vLyAgICAgICAgICAgcG9seWdvbklkcy5wdXNoKGopXG4vLyAgICAgICAgICAgcG9seWdvbklkcy5wdXNoKGopXG5cblxuXG5cblxuXG5cblxuXG5cblxuLy8gICAgICAgICAgIC8vIHZhciBmZWF0dXJlczEgPSB0dXJmLnBvbHlnb25UYW5nZW50cyh0dXJmUG9pbnQsIHR1cmZQb2x5Z29uc1tqXSkuZmVhdHVyZXNcbi8vICAgICAgICAgICAvLyBpZihmZWF0dXJlczEubGVuZ3RoID4gMilcbi8vICAgICAgICAgICAvLyAgIGFsZXJ0KCdNb3JlIHRoYW4gMiB0YW5nZW50cycpXG5cbi8vICAgICAgICAgICAvLyB2YXIgbmVhcmVzdFBvaW50ID0gdHVyZi5uZWFyZXN0UG9pbnQodHVyZi5wb2ludChbZmVhdHVyZXMxWzBdLmdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdL211bHRpcGxpZXIsIGZlYXR1cmVzMVswXS5nZW9tZXRyeS5jb29yZGluYXRlc1sxXS9tdWx0aXBsaWVyXSksIHBvaW50cylcbi8vICAgICAgICAgICAvLyB2YXIgdGFuZ2VudDEgPSBuZXcgUG9pbnQoW25lYXJlc3RQb2ludC5nZW9tZXRyeS5jb29yZGluYXRlc1swXSwgbmVhcmVzdFBvaW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdXSlcbi8vICAgICAgICAgICAvLyBuZWFyZXN0UG9pbnQgPSB0dXJmLm5lYXJlc3RQb2ludCh0dXJmLnBvaW50KFtmZWF0dXJlczFbMV0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0vbXVsdGlwbGllciwgZmVhdHVyZXMxWzFdLmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdL211bHRpcGxpZXJdKSwgcG9pbnRzKVxuLy8gICAgICAgICAgIC8vIHZhciB0YW5nZW50MiA9IG5ldyBQb2ludChbbmVhcmVzdFBvaW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdLCBuZWFyZXN0UG9pbnQuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV1dKVxuLy8gICAgICAgICAgIC8vIHBvaW50c1RvQ29ubmVjdC5wdXNoKFtvbGRQb2ludHNUb0Nvbm5lY3RbaV1bMF0sIHRhbmdlbnQxXSlcbi8vICAgICAgICAgICAvLyBwb2ludHNUb0Nvbm5lY3QucHVzaChbb2xkUG9pbnRzVG9Db25uZWN0W2ldWzBdLCB0YW5nZW50Ml0pXG4vLyAgICAgICAgICAgLy8gcG9seWdvbklkcy5wdXNoKGopXG4vLyAgICAgICAgICAgLy8gcG9seWdvbklkcy5wdXNoKGopXG5cblxuXG5cblxuXG5cblxuXG4vLyAgICAgICAgICAgaWYoaz09MCl7XG4vLyAgICAgICAgICAgICBwb2ludHNUb0Nvbm5lY3QucHVzaChbb2xkUG9pbnRzVG9Db25uZWN0W29sZFBvaW50c1RvQ29ubmVjdC5sZW5ndGgtMS1pXVswXSwgdGFuZ2VudHNbMF1dKVxuLy8gICAgICAgICAgICAgcG9pbnRzVG9Db25uZWN0LnB1c2goW29sZFBvaW50c1RvQ29ubmVjdFtvbGRQb2ludHNUb0Nvbm5lY3QubGVuZ3RoLTEtaV1bMF0sIHRhbmdlbnRzWzFdXSlcbi8vICAgICAgICAgICAgIHBvbHlnb25JZHMucHVzaCgtMSlcbi8vICAgICAgICAgICAgIHBvbHlnb25JZHMucHVzaCgtMSlcbi8vICAgICAgICAgICB9XG5cblxuLy8gICAgICAgICAgIC8vIGlmKGs9PTApe1xuLy8gICAgICAgICAgIC8vICAgY29uc29sZS5sb2coXCJcXHR2YXIgc3RhcnQgPSBbXCIrY3JlYXRlTm9kZUlkMihvbGRQb2ludHNUb0Nvbm5lY3RbaV1bMF0pK1wiXVxcblxcdHZhciBlbmQgPSBbXCIrY3JlYXRlTm9kZUlkMih0YW5nZW50c1swXSkrXCJdXFxuXFxuXCIpXG4vLyAgICAgICAgICAgLy8gICBjb25zb2xlLmxvZyhcIlxcdHZhciBzdGFydCA9IFtcIitjcmVhdGVOb2RlSWQyKG9sZFBvaW50c1RvQ29ubmVjdFtpXVswXSkrXCJdXFxuXFx0dmFyIGVuZCA9IFtcIitjcmVhdGVOb2RlSWQyKHRhbmdlbnRzWzFdKStcIl1cXG5cXG5cIilcbi8vICAgICAgICAgICAvLyAgIGlmKGk9PTApXG4vLyAgICAgICAgICAgLy8gICAgIHJldHVybiBkeW5hbWljRWRnZXNKU09OO1xuLy8gICAgICAgICAgIC8vIH1cblxuLy8gICAgICAgICB9XG4vLyAgICAgICB9XG4vLyAgICAgfVxuLy8gICAgIGsrK1xuLy8gICB9XG5cbi8vICAgLy8gdmFyIG5vZGVzVmlzaWJsZTEgPSBnZXRWaXNpYmxlTm9kZXMoc3RhcnRQb2ludCwgc3RhcnRQb2ludCwgZW5kUG9pbnQpXG4vLyAgIC8vIHZhciBub2Rlc1Zpc2libGUyID0gZ2V0VmlzaWJsZU5vZGVzKGVuZFBvaW50KVxuLy8gICAvLyB2YXIgc3RhcnRUYW5nZW50cyA9IFtdXG4vLyAgIC8vIHZhciBlbmRUYW5nZW50cyA9IFtdXG5cbi8vICAgLy8gZm9yICh2YXIgaSA9IDA7IGkgPCB0dXJmUG9seWdvbnMubGVuZ3RoOyBpKyspIHtcbi8vICAgLy8gICBjb25zb2xlLmxvZygndGVzdCcpO1xuXG4vLyAgIC8vICAgdmFyIGZlYXR1cmVzMSA9IHR1cmYucG9seWdvblRhbmdlbnRzKHN0YXJ0LCB0dXJmUG9seWdvbnNbaV0pLmZlYXR1cmVzXG4vLyAgIC8vICAgdmFyIGZlYXR1cmVzMiA9IHR1cmYucG9seWdvblRhbmdlbnRzKGVuZCwgdHVyZlBvbHlnb25zW2ldKS5mZWF0dXJlc1xuXG4vLyAgIC8vICAgdmFyIHN0YXJ0VGFuZ2VudDEgPSBuZXcgUG9pbnQoW2ZlYXR1cmVzMVswXS5nZW9tZXRyeS5jb29yZGluYXRlc1swXS9tdWx0aXBsaWVyLCBmZWF0dXJlczFbMF0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV0vbXVsdGlwbGllcl0pXG4vLyAgIC8vICAgdmFyIHN0YXJ0VGFuZ2VudDIgPSBuZXcgUG9pbnQoW2ZlYXR1cmVzMVsxXS5nZW9tZXRyeS5jb29yZGluYXRlc1swXS9tdWx0aXBsaWVyLCBmZWF0dXJlczFbMV0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV0vbXVsdGlwbGllcl0pXG4vLyAgIC8vICAgc3RhcnRUYW5nZW50cy5wdXNoKHN0YXJ0VGFuZ2VudDEpXG4vLyAgIC8vICAgc3RhcnRUYW5nZW50cy5wdXNoKHN0YXJ0VGFuZ2VudDIpXG5cbi8vICAgLy8gICB2YXIgZW5kVGFuZ2VudDEgPSBuZXcgUG9pbnQoW2ZlYXR1cmVzMlswXS5nZW9tZXRyeS5jb29yZGluYXRlc1swXS9tdWx0aXBsaWVyLCBmZWF0dXJlczJbMF0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV0vbXVsdGlwbGllcl0pXG4vLyAgIC8vICAgdmFyIGVuZFRhbmdlbnQyID0gbmV3IFBvaW50KFtmZWF0dXJlczJbMV0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0vbXVsdGlwbGllciwgZmVhdHVyZXMyWzFdLmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdL211bHRpcGxpZXJdKVxuLy8gICAvLyAgIGVuZFRhbmdlbnRzLnB1c2goZW5kVGFuZ2VudDEpXG4vLyAgIC8vICAgZW5kVGFuZ2VudHMucHVzaChlbmRUYW5nZW50MilcblxuLy8gICAvLyAgIGlmKGk9PTExKXtcbi8vICAgLy8gICAgIGNvbnNvbGUubG9nKFwiXFx0dmFyIHN0YXJ0ID0gW1wiK2NyZWF0ZU5vZGVJZDIoc3RhcnRQb2ludCkrXCJdXFxuXFx0dmFyIGVuZCA9IFtcIitjcmVhdGVOb2RlSWQodHVyZi5uZWFyZXN0UG9pbnQodHVyZi5wb2ludChbc3RhcnRUYW5nZW50MS54LCBzdGFydFRhbmdlbnQxLnldKSwgcG9pbnRzKSkrXCJdXFxuXFxuXCIpXG4vLyAgIC8vICAgICBjb25zb2xlLmxvZyhcIlxcdHZhciBzdGFydCA9IFtcIitjcmVhdGVOb2RlSWQyKHN0YXJ0UG9pbnQpK1wiXVxcblxcdHZhciBlbmQgPSBbXCIrY3JlYXRlTm9kZUlkKHR1cmYubmVhcmVzdFBvaW50KHR1cmYucG9pbnQoW3N0YXJ0VGFuZ2VudDIueCwgc3RhcnRUYW5nZW50Mi55XSksIHBvaW50cykpK1wiXVxcblxcblwiKVxuLy8gICAvLyAgICAgY29uc29sZS5sb2coXCJcXHR2YXIgc3RhcnQgPSBbXCIrY3JlYXRlTm9kZUlkMihlbmRQb2ludCkrXCJdXFxuXFx0dmFyIGVuZCA9IFtcIitjcmVhdGVOb2RlSWQodHVyZi5uZWFyZXN0UG9pbnQodHVyZi5wb2ludChbZW5kVGFuZ2VudDEueCwgZW5kVGFuZ2VudDEueV0pLCBwb2ludHMpKStcIl1cXG5cXG5cIilcbi8vICAgLy8gICAgIGNvbnNvbGUubG9nKFwiXFx0dmFyIHN0YXJ0ID0gW1wiK2NyZWF0ZU5vZGVJZDIoZW5kUG9pbnQpK1wiXVxcblxcdHZhciBlbmQgPSBbXCIrY3JlYXRlTm9kZUlkKHR1cmYubmVhcmVzdFBvaW50KHR1cmYucG9pbnQoW2VuZFRhbmdlbnQyLngsIGVuZFRhbmdlbnQyLnldKSwgcG9pbnRzKSkrXCJdXFxuXFxuXCIpXG4vLyAgIC8vICAgfVxuXG4vLyAgIC8vIH1cblxuLy8gICAvLyBmb3IgKHZhciBqID0gbm9kZXNWaXNpYmxlMS5sZW5ndGggLSAxOyBqID49IDA7IGotLSkge1xuLy8gICAvLyAgIGZvciAodmFyIGkgPSBzdGFydFRhbmdlbnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4vLyAgIC8vICAgICBpZihub2Rlc1Zpc2libGUxW2pdLnggPT0gc3RhcnRUYW5nZW50c1tpXS54ICYmIG5vZGVzVmlzaWJsZTFbal0ueSA9PSBzdGFydFRhbmdlbnRzW2ldLnkgKXtcbi8vICAgLy8gICAgICAgbmVhcmVzdFBvaW50ID0gdHVyZi5uZWFyZXN0UG9pbnQodHVyZi5wb2ludChbc3RhcnRUYW5nZW50c1tpXS54LCBzdGFydFRhbmdlbnRzW2ldLnldKSwgcG9pbnRzKVxuLy8gICAvLyAgICAgICBkeW5hbWljRWRnZXNKU09OICs9ICcse1wiZnJvbUlkXCI6XCInK2NyZWF0ZU5vZGVJZDIoc3RhcnRQb2ludCkrJ1wiLFwidG9JZFwiOlwiJytjcmVhdGVOb2RlSWQobmVhcmVzdFBvaW50KSsnXCJ9J1xuLy8gICAvLyAgICAgfVxuLy8gICAvLyAgIH1cbi8vICAgLy8gICAvLyBpZihub2Rlc1Zpc2libGUxW2pdLnggPT0gc3RhcnRUYW5nZW50Mi54ICYmIG5vZGVzVmlzaWJsZTFbal0ueSA9PSBzdGFydFRhbmdlbnQyLnkgKXtcbi8vICAgLy8gICAvLyAgIG5lYXJlc3RQb2ludCA9IHR1cmYubmVhcmVzdFBvaW50KHR1cmYucG9pbnQoW3N0YXJ0VGFuZ2VudDIueCwgc3RhcnRUYW5nZW50Mi55XSksIHBvaW50cylcbi8vICAgLy8gICAvLyAgIGR5bmFtaWNFZGdlc0pTT04gKz0gJyx7XCJmcm9tSWRcIjpcIicrY3JlYXRlTm9kZUlkMihzdGFydFBvaW50KSsnXCIsXCJ0b0lkXCI6XCInK2NyZWF0ZU5vZGVJZChuZWFyZXN0UG9pbnQpKydcIn0nXG4vLyAgIC8vICAgLy8gfVxuLy8gICAvLyB9XG5cbi8vICAgLy8gZm9yICh2YXIgaiA9IG5vZGVzVmlzaWJsZTIubGVuZ3RoIC0gMTsgaiA+PSAwOyBqLS0pIHtcbi8vICAgLy8gICBmb3IgKHZhciBpID0gZW5kVGFuZ2VudHMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbi8vICAgLy8gICAgIGlmKG5vZGVzVmlzaWJsZTJbal0ueCA9PSBlbmRUYW5nZW50c1tpXS54ICYmIG5vZGVzVmlzaWJsZTJbal0ueSA9PSBlbmRUYW5nZW50c1tpXS55ICl7XG4vLyAgIC8vICAgICAgIG5lYXJlc3RQb2ludCA9IHR1cmYubmVhcmVzdFBvaW50KHR1cmYucG9pbnQoW2VuZFRhbmdlbnRzW2ldLngsIGVuZFRhbmdlbnRzW2ldLnldKSwgcG9pbnRzKVxuLy8gICAvLyAgICAgICBkeW5hbWljRWRnZXNKU09OICs9ICcse1wiZnJvbUlkXCI6XCInK2NyZWF0ZU5vZGVJZDIoZW5kUG9pbnQpKydcIixcInRvSWRcIjpcIicrY3JlYXRlTm9kZUlkKG5lYXJlc3RQb2ludCkrJ1wifSdcbi8vICAgLy8gICAgIH1cbi8vICAgLy8gICB9XG4vLyAgIC8vICAgLy8gaWYobm9kZXNWaXNpYmxlMltqXS54ID09IGVuZFRhbmdlbnQxLnggJiYgbm9kZXNWaXNpYmxlMltqXS55ID09IGVuZFRhbmdlbnQxLnkgKXtcbi8vICAgLy8gICAvLyAgIG5lYXJlc3RQb2ludCA9IHR1cmYubmVhcmVzdFBvaW50KHR1cmYucG9pbnQoW2VuZFRhbmdlbnQxLngsIGVuZFRhbmdlbnQxLnldKSwgcG9pbnRzKVxuLy8gICAvLyAgIC8vICAgZHluYW1pY0VkZ2VzSlNPTiArPSAnLHtcImZyb21JZFwiOlwiJytjcmVhdGVOb2RlSWQyKGVuZFBvaW50KSsnXCIsXCJ0b0lkXCI6XCInK2NyZWF0ZU5vZGVJZChuZWFyZXN0UG9pbnQpKydcIn0nXG4vLyAgIC8vICAgLy8gfVxuLy8gICAvLyAgIC8vIGlmKG5vZGVzVmlzaWJsZTJbal0ueCA9PSBlbmRUYW5nZW50Mi54ICYmIG5vZGVzVmlzaWJsZTJbal0ueSA9PSBlbmRUYW5nZW50Mi55ICl7XG4vLyAgIC8vICAgLy8gICBuZWFyZXN0UG9pbnQgPSB0dXJmLm5lYXJlc3RQb2ludCh0dXJmLnBvaW50KFtlbmRUYW5nZW50Mi54LCBlbmRUYW5nZW50Mi55XSksIHBvaW50cylcbi8vICAgLy8gICAvLyAgIGR5bmFtaWNFZGdlc0pTT04gKz0gJyx7XCJmcm9tSWRcIjpcIicrY3JlYXRlTm9kZUlkMihlbmRQb2ludCkrJ1wiLFwidG9JZFwiOlwiJytjcmVhdGVOb2RlSWQobmVhcmVzdFBvaW50KSsnXCJ9J1xuLy8gICAvLyAgIC8vIH1cbi8vICAgLy8gfVxuXG4vLyAgIHJldHVybiBkeW5hbWljRWRnZXNKU09OXG4vLyB9XG5cblxuZnVuY3Rpb24gZ2V0RHluYW1pY05vZGVzSlNPTihzdGFydFBvaW50LCBlbmRQb2ludClcbntcbiAgdmFyIGR5bmFtaWNOb2Rlc0pTT04gPSBcIlwiXG4gIC8vIHZhciBzdGFydFBvaW50ID0gbmV3IFBvaW50KFtzdGFydFBvaW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdLCBzdGFydFBvaW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdXSk7XG4gIC8vIHZhciBlbmRQb2ludCA9IG5ldyBQb2ludChbZW5kUG9pbnQuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0sIGVuZFBvaW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdXSk7XG5cbiAgZHluYW1pY05vZGVzSlNPTiArPSAne1wiaWRcIjpcIicrY3JlYXRlTm9kZUlkMihzdGFydFBvaW50KSsnXCIsXCJkYXRhXCI6e1wieFwiOicrc3RhcnRQb2ludC54KycsXCJ5XCI6JytzdGFydFBvaW50LnkrJ319LCdcbiAgZHluYW1pY05vZGVzSlNPTiArPSAne1wiaWRcIjpcIicrY3JlYXRlTm9kZUlkMihlbmRQb2ludCkrJ1wiLFwiZGF0YVwiOntcInhcIjonK2VuZFBvaW50LngrJyxcInlcIjonK2VuZFBvaW50LnkrJ319LCdcblxuICAvLyBwb2ludHMucHVzaChzdGFydFBvaW50KVxuICAvLyBwb2ludHMucHVzaChlbmRQb2ludClcblxuICByZXR1cm4gZHluYW1pY05vZGVzSlNPTlxufVxuXG5cblxuLy8gRmluZHMgdXBwZXIgdGFuZ2VudCBvZiB0d28gcG9seWdvbnMgJ2EnIGFuZCAnYicgXG5mdW5jdGlvbiBmaW5kNFRhbmdlbnRzKGEsIGIpIFxuLy8gZnVuY3Rpb24gZmluZDRUYW5nZW50cyhhLCBiLCBwb2x5Z29uMSwgcG9seWdvbjIpIFxueyBcbiAgLy8gdmFyIGFBc0ludCA9IFtdXG4gIC8vIHZhciBiQXNJbnQgPSBbXVxuXG4gIC8vIGZvciAodmFyIGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAvLyAgIGFBc0ludC5wdXNoKFtNYXRoLnJvdW5kKGFbaV0ueCAqIG11bHRpcGxpZXIpLCBNYXRoLnJvdW5kKGFbaV0ueSAqIG11bHRpcGxpZXIpXSlcbiAgLy8gfVxuICAvLyBhQXNJbnQucHVzaChbTWF0aC5yb3VuZChhWzBdLnggKiBtdWx0aXBsaWVyKSwgTWF0aC5yb3VuZChhWzBdLnkgKiBtdWx0aXBsaWVyKV0pIC8vIGp1c3QgdG8gbWFrZSBzdXJlIGxhc3QgaXMgZXF1YWwgdG8gZmlyc3RcblxuICAvLyBmb3IgKHZhciBpID0gMDsgaSA8IGIubGVuZ3RoOyBpKyspIHtcbiAgLy8gICBiQXNJbnQucHVzaChbTWF0aC5yb3VuZChiW2ldLnggKiBtdWx0aXBsaWVyKSwgTWF0aC5yb3VuZChiW2ldLnkgKiBtdWx0aXBsaWVyKV0pXG4gIC8vIH1cbiAgLy8gYkFzSW50LnB1c2goW01hdGgucm91bmQoYlswXS54ICogbXVsdGlwbGllciksIE1hdGgucm91bmQoYlswXS55ICogbXVsdGlwbGllcildKSAvLyBqdXN0IHRvIG1ha2Ugc3VyZSBsYXN0IGlzIGVxdWFsIHRvIGZpcnN0XG5cbiAgLy8gdmFyIHBvbHlnb24xID0gdHVyZi5wb2x5Z29uKFthQXNJbnRdKTtcbiAgLy8gdmFyIHBvbHlnb24yID0gdHVyZi5wb2x5Z29uKFtiQXNJbnRdKTtcblxuXG5cblxuXG5cblxuICB2YXIgdGFuZ2VudHMxID0gW11cbiAgdmFyIHRhbmdlbnRzMiA9IFtdXG4gIHRhbmdlbnRzMS5wdXNoKFthWzBdLngsIGFbMF0ueV0pXG5cblxuXG5cblxuXG4gIHZhciBmaW5kVGFuZ2VudE9mQiA9IDFcbiAgdmFyIHRhbmdlbnRQYWlycyA9IFtdXG4gIHZhciBkb25lMSA9IDA7XG4gIHZhciBkb25lMiA9IDA7XG4gIHZhciBpdGVyYXRpb25zUmVtYWluaW5nID0gMTBcblxuICB3aGlsZSggaXRlcmF0aW9uc1JlbWFpbmluZyA+IDApe1xuICAgIHZhciB0YW5nZW50cyA9IFtdXG4gICAgdmFyIHNyY1RhbmdldHMgPSBmaW5kVGFuZ2VudE9mQiA/IHRhbmdlbnRzMSA6IHRhbmdlbnRzMlxuICAgIHZhciBvbGRUYW5nZW50cyA9IGZpbmRUYW5nZW50T2ZCID8gdGFuZ2VudHMyLnNsaWNlKDApIDogdGFuZ2VudHMxLnNsaWNlKDApXG4gICAgdmFyIHBvbHlnb24gPSBmaW5kVGFuZ2VudE9mQiA/IGIgOiBhXG4gICAgdmFyIG1hdGNoZXMgPSAwXG4gICAgdmFyIG9sZFRhbmdlbnRQYWlycyA9IHRhbmdlbnRQYWlycy5zbGljZSgwKVxuICAgIHRhbmdlbnRQYWlycyA9IFtdXG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNyY1RhbmdldHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciByYXdUYW5nZW50cyA9IFtdXG4gICAgICB2YXIgcG9pbnQgPSBuZXcgUG9pbnQoc3JjVGFuZ2V0c1tpXSk7XG4gICAgICB2YXIgcmF3VGFuZ2VudHMgPSBnZXRQb2x5Z29uVGFuZ2VudHMocG9pbnQsIHBvbHlnb24pXG4gICAgICAvLyB0YW5nZW50cyA9IFtdXG5cbiAgICAgIC8vIGZvciAodmFyIGogPSAwOyBqIDwgZmVhdHVyZXMubGVuZ3RoOyBqKyspXG4gICAgICAvLyAgIHJhd1RhbmdlbnRzLnB1c2goZmVhdHVyZXNbal0pXG5cbiAgICAgIHZhciBzcmNQb2ludCA9IG5ldyBQb2ludChzcmNUYW5nZXRzW2ldKVxuICAgICAgdmFyIHAxID0gcmF3VGFuZ2VudHNbMF1cbiAgICAgIHZhciBwMiA9IHJhd1RhbmdlbnRzWzFdXG4gICAgICB2YXIgYW5nbGUxID0gc3JjUG9pbnQuYW5nbGVUb1BvaW50KHAxKVxuICAgICAgdmFyIGFuZ2xlMiA9IHNyY1BvaW50LmFuZ2xlVG9Qb2ludChwMilcbiAgICAgIHZhciBkaWZmID0gYW5nbGUxIC0gYW5nbGUyXG4gICAgICBkaWZmID0gZGlmZiA8IDAgPyBkaWZmICsgTWF0aC5QSSoyIDogZGlmZlxuXG4gICAgICB2YXIgcmlnaHRUYW5nZW50ID0gcmF3VGFuZ2VudHNbMV1cbiAgICAgIHZhciBsZWZ0VGFuZ2VudCA9IHJhd1RhbmdlbnRzWzBdXG5cbiAgICAgIGlmKGRpZmYgPiBNYXRoLlBJKXtcbiAgICAgICAgcmlnaHRUYW5nZW50ID0gcmF3VGFuZ2VudHNbMF1cbiAgICAgICAgbGVmdFRhbmdlbnQgPSByYXdUYW5nZW50c1sxXVxuICAgICAgfVxuXG5cbiAgICAgIGlmKHNyY1RhbmdldHMubGVuZ3RoIDw9IDIpe1xuICAgICAgICB0YW5nZW50cy5wdXNoKFtsZWZ0VGFuZ2VudC54LCBsZWZ0VGFuZ2VudC55XSlcbiAgICAgICAgdGFuZ2VudHMucHVzaChbcmlnaHRUYW5nZW50LngsIHJpZ2h0VGFuZ2VudC55XSlcbiAgICAgIH1lbHNle1xuICAgICAgICBpZih0eXBlb2Ygb2xkVGFuZ2VudFBhaXJzW2ldID09ICd1bmRlZmluZWQnKVxuICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgIHZhciBvbGRTb3VyY2UgPSBuZXcgUG9pbnQoW29sZFRhbmdlbnRQYWlyc1tpXVsxXVswXSwgb2xkVGFuZ2VudFBhaXJzW2ldWzFdWzFdXSlcbiAgICAgICAgdmFyIGRpc3QxID0gY2FsY0VkZ2VEaXN0YW5jZShwMSwgb2xkU291cmNlKVxuICAgICAgICB2YXIgZGlzdDIgPSBjYWxjRWRnZURpc3RhbmNlKHAyLCBvbGRTb3VyY2UpXG5cbiAgICAgICAgLy8gdmFyIGFuZ2xlID0gc3JjUG9pbnQuYW5nbGVUb1BvaW50KG9sZFNvdXJjZSlcbiAgICAgICAgLy8gdmFyIGRpZmYxID0gYW5nbGUxIC0gYW5nbGVcbiAgICAgICAgLy8gdmFyIGRpZmYyID0gYW5nbGUyIC0gYW5nbGVcbiAgICAgICAgLy8gZGlmZjEgPSBkaWZmMSA8IDAgPyBkaWZmMSArIE1hdGguUEkqMiA6IGRpZmYxXG4gICAgICAgIC8vIGRpZmYyID0gZGlmZjIgPCAwID8gZGlmZjIgKyBNYXRoLlBJKjIgOiBkaWZmMlxuXG4gICAgICAgIHRhbmdlbnRzLnB1c2goZGlzdDEgPCBkaXN0MiA/IFtyYXdUYW5nZW50c1swXS54LCByYXdUYW5nZW50c1swXS55XSA6IFtyYXdUYW5nZW50c1sxXS54LCByYXdUYW5nZW50c1sxXS55XSlcbiAgICAgICAgLy8gaWYoaSA9PSAwKVxuICAgICAgICAvLyAgIHRhbmdlbnRzLnB1c2goZmluZFRhbmdlbnRPZkIgPyBsZWZ0VGFuZ2VudCA6IGxlZnRUYW5nZW50KVxuICAgICAgICAvLyBlbHNlIGlmKGkgPT0gMSlcbiAgICAgICAgLy8gICB0YW5nZW50cy5wdXNoKGZpbmRUYW5nZW50T2ZCID8gbGVmdFRhbmdlbnQgOiByaWdodFRhbmdlbnQpXG4gICAgICAgIC8vIGVsc2UgaWYoaSA9PSAyKVxuICAgICAgICAvLyAgIHRhbmdlbnRzLnB1c2goZmluZFRhbmdlbnRPZkIgPyByaWdodFRhbmdlbnQgOiBsZWZ0VGFuZ2VudClcbiAgICAgICAgLy8gZWxzZSBpZihpID09IDMpXG4gICAgICAgIC8vICAgdGFuZ2VudHMucHVzaChmaW5kVGFuZ2VudE9mQiA/IHJpZ2h0VGFuZ2VudCA6IHJpZ2h0VGFuZ2VudClcbiAgICAgIH1cblxuXG4gICAgICAvLyBpZihzcmNUYW5nZXRzLmxlbmd0aCA8PSAyKXtcbiAgICAgIC8vICAgdGFuZ2VudHMucHVzaChsZWZ0VGFuZ2VudClcbiAgICAgIC8vICAgdGFuZ2VudHMucHVzaChyaWdodFRhbmdlbnQpXG4gICAgICAvLyB9ZWxzZXtcbiAgICAgIC8vICAgaWYoaSA9PSAwKVxuICAgICAgLy8gICAgIHRhbmdlbnRzLnB1c2goZmluZFRhbmdlbnRPZkIgPyBsZWZ0VGFuZ2VudCA6IGxlZnRUYW5nZW50KVxuICAgICAgLy8gICBlbHNlIGlmKGkgPT0gMSlcbiAgICAgIC8vICAgICB0YW5nZW50cy5wdXNoKGZpbmRUYW5nZW50T2ZCID8gbGVmdFRhbmdlbnQgOiByaWdodFRhbmdlbnQpXG4gICAgICAvLyAgIGVsc2UgaWYoaSA9PSAyKVxuICAgICAgLy8gICAgIHRhbmdlbnRzLnB1c2goZmluZFRhbmdlbnRPZkIgPyByaWdodFRhbmdlbnQgOiBsZWZ0VGFuZ2VudClcbiAgICAgIC8vICAgZWxzZSBpZihpID09IDMpXG4gICAgICAvLyAgICAgdGFuZ2VudHMucHVzaChmaW5kVGFuZ2VudE9mQiA/IHJpZ2h0VGFuZ2VudCA6IHJpZ2h0VGFuZ2VudClcbiAgICAgIC8vIH1cblxuXG4gICAgICAgIGZvciAodmFyIG0gPSAwOyBtIDwgdGFuZ2VudHMubGVuZ3RoOyBtKyspIHtcbiAgICAgICAgLy8gZm9yICh2YXIgayA9IG9sZFRhbmdlbnRzLmxlbmd0aCAtIDE7IGsgPj0gMDsgay0tKSB7XG4gICAgICAgICAgdmFyIHRhbmdlbnQgPSB0YW5nZW50c1ttXVxuICAgICAgICAgIGlmKHNyY1RhbmdldHMubGVuZ3RoID4gMilcbiAgICAgICAgICAgIHRhbmdlbnQgPSB0YW5nZW50c1tpXVxuICAgICAgICAgIC8vIGlmKHRhbmdlbnRbMF0gPT0gb2xkVGFuZ2VudHNba11bMF0gJiYgdGFuZ2VudFsxXSA9PSBvbGRUYW5nZW50c1trXVsxXSl7XG4gICAgICAgICAgICAvLyBpZihtYXRjaGVzIDwgNCl7XG4gICAgICAgICAgICAgIC8vIGNoZWNrIGZvciBkdXBsaWNhdGVzXG4gICAgICAgICAgICAgIHZhciBpc1VuaXF1ZSA9IHRydWVcbiAgICAgICAgICAgICAgZm9yICh2YXIgbCA9IHRhbmdlbnRQYWlycy5sZW5ndGggLSAxOyBsID49IDA7IGwtLSkge1xuICAgICAgICAgICAgICAgIGlmKHRhbmdlbnRQYWlyc1tsXVswXVswXSA9PSB0YW5nZW50WzBdICYmIHRhbmdlbnRQYWlyc1tsXVswXVsxXSA9PSB0YW5nZW50WzFdKVxuICAgICAgICAgICAgICAgICAgaXNVbmlxdWUgPSBmYWxzZVxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYoaXNVbmlxdWUpe1xuICAgICAgICAgICAgICAgIHRhbmdlbnRQYWlycy5wdXNoKFt0YW5nZW50LCBzcmNUYW5nZXRzW2ldXSlcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBtYXRjaGVzKytcblxuICAgICAgICAgICAgICBpZihzcmNUYW5nZXRzLmxlbmd0aCA+IDIpXG4gICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAvLyB9XG4gICAgICAgIC8vIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmKGZpbmRUYW5nZW50T2ZCKXtcbiAgICAgIGRvbmUyID0gbWF0Y2hlcyA9PSA0ID8gdHJ1ZSA6IGZhbHNlXG4gICAgICB0YW5nZW50czIgPSB0YW5nZW50cy5zbGljZSgwKVxuICAgIH1lbHNle1xuICAgICAgZG9uZTEgPSBtYXRjaGVzID09IDQgPyB0cnVlIDogZmFsc2VcbiAgICAgIHRhbmdlbnRzMSA9IHRhbmdlbnRzLnNsaWNlKDApXG4gICAgfVxuXG4gICAgLy8gaWYoaXRlcmF0aW9uc1JlbWFpbmluZyA9PSA3KVxuICAgIC8vICAgYnJlYWtcblxuICAgIC8vIGlmKG1hdGNoZXMgPCA0KVxuICAgIC8vICAgaXRlcmF0aW9uc1JlbWFpbmluZyA9IDEwXG5cbiAgICBmaW5kVGFuZ2VudE9mQiA9ICFmaW5kVGFuZ2VudE9mQlxuICAgIGl0ZXJhdGlvbnNSZW1haW5pbmctLVxuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0YW5nZW50UGFpcnMubGVuZ3RoOyBpKyspIHtcbiAgICAvLyB2YXIgdHAxID0gdHVyZi5wb2ludChbdGFuZ2VudFBhaXJzW2ldWzBdWzBdLHRhbmdlbnRQYWlyc1tpXVswXVsxXV0pO1xuICAgIC8vIHZhciB0cDIgPSB0dXJmLnBvaW50KFt0YW5nZW50UGFpcnNbaV1bMV1bMF0sdGFuZ2VudFBhaXJzW2ldWzFdWzFdXSk7XG4gICAgLy8gdmFyIG5lYXJlc3RTdGFydCA9IHR1cmYubmVhcmVzdFBvaW50KHRwMSwgcG9pbnRzKVxuICAgIC8vIHZhciBuZWFyZXN0RW5kID0gdHVyZi5uZWFyZXN0UG9pbnQodHAyLCBwb2ludHMpXG4gICAgbGV0IHAxID0gbmV3IFBvaW50KHRhbmdlbnRQYWlyc1tpXVswXSlcbiAgICBsZXQgcDIgPSBuZXcgUG9pbnQodGFuZ2VudFBhaXJzW2ldWzFdKVxuXG5cblxuICAgIGFsbFRhbmdlbnRzLnB1c2gocDEpXG4gICAgYWxsVGFuZ2VudHMucHVzaChwMilcblxuICAgIGlmKGlzVmlzaWJsZShwMSxwMikpXG4gICAgICBvdXRwdXQgKz0gJyx7XCJmcm9tSWRcIjpcIicrY3JlYXRlTm9kZUlkMihwMSkrJ1wiLFwidG9JZFwiOlwiJytjcmVhdGVOb2RlSWQyKHAyKSsnXCJ9J1xuICAgIC8vIGlmKGk9PTApXG4gICAgICAvLyBjb25zb2xlLmxvZyhcIlxcdHZhciBzdGFydCA9IFtcIitjcmVhdGVOb2RlSWQyKHAxKStcIl1cXG5cXHR2YXIgZW5kID0gW1wiK2NyZWF0ZU5vZGVJZDIocDIpK1wiXVxcblxcblwiKVxuICAgIC8vIGVsc2V7XG4gICAgLy8gICB2YXIgaXNWaXNpYmxlID0gdHJ1ZVxuICAgIC8vICAgdmFyIGFuZ2xlID0gcDEuYW5nbGVUb1BvaW50KHAyKVxuXG4gICAgLy8gICBmb3IgKHZhciBqID0gdHVyZlBvbHlnb25zLmxlbmd0aCAtIDE7IGogPj0gMDsgai0tKSB7XG4gICAgLy8gICAgIHZhciB0cG0xID0gdHVyZi5wb2ludChbdGFuZ2VudFBhaXJzW2ldWzBdWzBdICogbXVsdGlwbGllcix0YW5nZW50UGFpcnNbaV1bMF1bMV0gKiBtdWx0aXBsaWVyXSk7XG4gICAgLy8gICAgIHZhciB0cG0yID0gdHVyZi5wb2ludChbdGFuZ2VudFBhaXJzW2ldWzFdWzBdICogbXVsdGlwbGllcix0YW5nZW50UGFpcnNbaV1bMV1bMV0gKiBtdWx0aXBsaWVyXSk7XG4gICAgLy8gICAgIGlmKHR1cmYuYm9vbGVhblBvaW50SW5Qb2x5Z29uKHRwbTIsIHR1cmZQb2x5Z29uc1tpXSkpXG4gICAgLy8gICAgICAgY29udGludWVcblxuICAgIC8vICAgICB2YXIgZmVhdHVyZXMgPSB0dXJmLnBvbHlnb25UYW5nZW50cyh0cG0xLCB0dXJmUG9seWdvbnNbal0pLmZlYXR1cmVzXG4gICAgLy8gICAgIHZhciB0MSA9IG5ldyBQb2ludChbZmVhdHVyZXNbMF0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0vbXVsdGlwbGllciwgZmVhdHVyZXNbMF0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV0vbXVsdGlwbGllcl0pXG4gICAgLy8gICAgIHZhciB0MiA9IG5ldyBQb2ludChbZmVhdHVyZXNbMV0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0vbXVsdGlwbGllciwgZmVhdHVyZXNbMV0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV0vbXVsdGlwbGllcl0pXG4gICAgLy8gICAgIHZhciBhbmdsZTEgPSBwMS5hbmdsZVRvUG9pbnQodDEpXG4gICAgLy8gICAgIHZhciBhbmdsZTIgPSBwMS5hbmdsZVRvUG9pbnQodDIpXG4gICAgLy8gICAgIHZhciBkaWZmID0gYW5nbGUxIC0gYW5nbGUyXG4gICAgLy8gICAgIGRpZmYgPSBkaWZmIDwgMCA/IGRpZmYgKyBNYXRoLlBJIDogZGlmZlxuXG4gICAgLy8gICAgIC8vIGVuc3VyZSBhbmdsZTIgaXMgdGhlIGxlZnQgb25lXG4gICAgLy8gICAgIGlmKGRpZmYgPiBNYXRoLlBJLzIpe1xuICAgIC8vICAgICAgIHZhciB0ZW1wID0gYW5nbGUxXG4gICAgLy8gICAgICAgYW5nbGUxID0gYW5nbGUyXG4gICAgLy8gICAgICAgYW5nbGUyID0gdGVtcFxuICAgIC8vICAgICB9XG5cbiAgICAvLyAgICAgdmFyIGRpZmYxID0gYW5nbGUxIC0gYW5nbGVcbiAgICAvLyAgICAgZGlmZjEgPSBkaWZmMSA8IDAgPyBkaWZmMSArIE1hdGguUEkgOiBkaWZmMVxuXG4gICAgLy8gICAgIHZhciBkaWZmMiA9IGFuZ2xlIC0gYW5nbGUyXG4gICAgLy8gICAgIGRpZmYyID0gZGlmZjIgPCAwID8gZGlmZjIgKyBNYXRoLlBJIDogZGlmZjJcblxuICAgIC8vICAgICAvLyBhbmdsZSBpcyBiZXR3ZWVuIGFuZ2xlMSBhbmQgYW5nbGUyXG4gICAgLy8gICAgIGlmKGRpZmYxIDwgTWF0aC5QSS8yICYmIGRpZmYyIDwgTWF0aC5QSS8yKXtcbiAgICAvLyAgICAgICBjb25zdCBkaXN0ID0gY2FsY0VkZ2VEaXN0YW5jZShwMSwgcDIpXG4gICAgLy8gICAgICAgY29uc3QgZGlzdDEgPSBjYWxjRWRnZURpc3RhbmNlKHAxLCB0MSlcbiAgICAvLyAgICAgICBjb25zdCBkaXN0MiA9IGNhbGNFZGdlRGlzdGFuY2UocDEsIHQyKVxuXG4gICAgLy8gICAgICAgLy8gaWYgYm90aCB0YW5nZW50cyBhcmUgY2xvc2VyXG4gICAgLy8gICAgICAgaWYoZGlzdDE8ZGlzdCAmJiBkaXN0MjxkaXN0KXtcbiAgICAvLyAgICAgICAgIGlzVmlzaWJsZSA9IGZhbHNlXG4gICAgLy8gICAgICAgICBicmVhaztcbiAgICAvLyAgICAgICB9XG4gICAgLy8gICAgIH1cbiAgICAvLyAgIH1cblxuICAgIC8vICAgaWYoaXNWaXNpYmxlKVxuICAgICAgICAvLyBvdXRwdXQgKz0gJyx7XCJmcm9tSWRcIjpcIicrY3JlYXRlTm9kZUlkKG5lYXJlc3RTdGFydCkrJ1wiLFwidG9JZFwiOlwiJytjcmVhdGVOb2RlSWQobmVhcmVzdEVuZCkrJ1wifSdcbiAgICAvLyB9XG4gIH1cblxuXG5cblxuICAvLyB2YXIgbTEgPSBMLm1hcmtlcihbdGFuZ2VudFBhaXJzWzBdWzBdWzBdLHRhbmdlbnRQYWlyc1swXVswXVsxXSwge1xuICAvLyAgIGRyYWdnYWJsZTogdHJ1ZSxcbiAgLy8gICBpY29uOiBuZXcgTC5OdW1iZXJlZERpdkljb24oKVxuICAvLyB9KVxuXG4gIC8vIHZhciBtMiA9IEwubWFya2VyKHRhbmdlbnRQYWlyc1swXVsxXVswXSx0YW5nZW50UGFpcnNbMF1bMV1bMV0sIHtcbiAgLy8gICBkcmFnZ2FibGU6IHRydWUsXG4gIC8vICAgaWNvbjogbmV3IEwuTnVtYmVyZWREaXZJY29uKClcbiAgLy8gfSlcblxuXG5cblxuICAvLyByb3V0ZUxheWVyLnNldExhdExuZ3MoW10pXG4gIC8vIHZhciBuZWFyZXN0U3RhcnQgPSB0dXJmLm5lYXJlc3RQb2ludCh0MSwgcG9pbnRzKVxuICAvLyB2YXIgbmVhcmVzdEVuZCA9IHR1cmYubmVhcmVzdFBvaW50KHQyLCBwb2ludHMpXG4gIC8vIGZvdW5kUGF0aCA9IHBhdGhGaW5kZXIuZmluZChjcmVhdGVOb2RlSWQobmVhcmVzdFN0YXJ0KSwgY3JlYXRlTm9kZUlkKG5lYXJlc3RFbmQpKVxuICAvLyBkcmF3UGF0aCgpXG5cblxuXG5cblxuXG5cbiAgLy8gdmFyIHRhbmdlbnRzMiA9IFtbZmVhdHVyZXNbMF0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0vbXVsdGlwbGllciwgZmVhdHVyZXNbMF0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV0vbXVsdGlwbGllcl0sIFxuICAvLyAgICAgICAgICAgICAgICAgICBbZmVhdHVyZXNbMV0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0vbXVsdGlwbGllciwgZmVhdHVyZXNbMV0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV0vbXVsdGlwbGllcl1dXG5cblxuXG5cblxuICAvLyB2YXIgcG9pbnQgPSB0dXJmLnBvaW50KFtNYXRoLnJvdW5kKHRhbmdlbnRzMlswXVswXSAqIG11bHRpcGxpZXIpLCBNYXRoLnJvdW5kKHRhbmdlbnRzMlswXVsxXSAqIG11bHRpcGxpZXIpXSk7XG4gIC8vIHZhciBmZWF0dXJlcyA9IHR1cmYucG9seWdvblRhbmdlbnRzKHBvaW50LCBwb2x5Z29uMSlcbiAgLy8gdmFyIHRhbmdlbnRzMSA9IFtbZmVhdHVyZXNbMF0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0vbXVsdGlwbGllciwgZmVhdHVyZXNbMF0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV0vbXVsdGlwbGllcl0sIFxuICAvLyAgICAgICAgICAgICAgICAgICBbZmVhdHVyZXNbMV0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0vbXVsdGlwbGllciwgZmVhdHVyZXNbMV0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV0vbXVsdGlwbGllcl1dXG5cblxuXG5cblxuXG5cbiAgLy8gc3RhcnRNYXJrZXIgPSBMLm1hcmtlcihbIGFbMF0ueCwgYVswXS55XSwge1xuICAvLyAgIGRyYWdnYWJsZTogdHJ1ZSxcbiAgLy8gICBpY29uOiBuZXcgTC5OdW1iZXJlZERpdkljb24oKVxuICAvLyB9KS5hZGRUbyhtYXApXG5cbiAgLy8gdmFyIHRhbmdlbnQgPSBbIHRhbmdlbnRzLmZlYXR1cmVzWzBdLmdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdL211bHRpcGxpZXIsIHRhbmdlbnRzLmZlYXR1cmVzWzBdLmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdL211bHRpcGxpZXJdXG5cbiAgLy8gZW5kTWFya2VyID0gTC5tYXJrZXIodGFuZ2VudCwge1xuICAvLyAgIGRyYWdnYWJsZTogdHJ1ZSxcbiAgLy8gICBpY29uOiBuZXcgTC5OdW1iZXJlZERpdkljb24oKVxuICAvLyB9KS5hZGRUbyhtYXApXG5cbiAgLy8gdmFyIG5lYXJlc3RTdGFydCA9IHR1cmYubmVhcmVzdFBvaW50KHN0YXJ0TWFya2VyLnRvR2VvSlNPTigpLCBwb2ludHMpXG4gIC8vIHZhciBuZWFyZXN0RW5kID0gdHVyZi5uZWFyZXN0UG9pbnQoZW5kTWFya2VyLnRvR2VvSlNPTigpLCBwb2ludHMpXG4gIC8vIGZvdW5kUGF0aCA9IHBhdGhGaW5kZXIuZmluZChjcmVhdGVOb2RlSWQobmVhcmVzdFN0YXJ0KSwgY3JlYXRlTm9kZUlkKG5lYXJlc3RFbmQpKVxuICAvLyBkcmF3UGF0aCgpXG5cblxuICAvLyBjb25zb2xlLmxvZyhhWzBdLnggKyBcIixcIiArIGFbMF0ueSArIFwiIFwiICsgdGFuZ2VudFswXSArIFwiLFwiICsgdGFuZ2VudFsxXSlcbiAgLy8gY29uc29sZS5sb2coJycpXG5cblxuXG5cblxuXG5cblxuXG5cbiAgICAvLyAvLyBuMSAtPiBudW1iZXIgb2YgcG9pbnRzIGluIHBvbHlnb24gYSBcbiAgICAvLyAvLyBuMiAtPiBudW1iZXIgb2YgcG9pbnRzIGluIHBvbHlnb24gYiBcbiAgICAvLyB2YXIgbjEgPSBhLmxlbmd0aCwgbjIgPSBiLmxlbmd0aDsgXG4gIFxuICAgIC8vIC8vIFRvIGZpbmQgYSBwb2ludCBpbnNpZGUgdGhlIGNvbnZleCBwb2x5Z29uKGNlbnRyb2lkKSwgXG4gICAgLy8gLy8gd2Ugc3VtIHVwIGFsbCB0aGUgY29vcmRpbmF0ZXMgYW5kIHRoZW4gZGl2aWRlICBieSBcbiAgICAvLyAvLyBuKG51bWJlciBvZiBwb2ludHMpLiBCdXQgdGhpcyB3b3VsZCBiZSBhIGZsb2F0aW5nLXBvaW50IFxuICAgIC8vIC8vIHZhbHVlLiBTbyB0byBnZXQgcmlkIG9mIHRoaXMgd2UgbXVsdGlwbHkgcG9pbnRzIFxuICAgIC8vIC8vIGluaXRpYWxseSB3aXRoIG4xIGFuZCB0aGVuIGZpbmQgdGhlIGNlbnRyZSBhbmQgXG4gICAgLy8gLy8gdGhlbiBkaXZpZGVkIGl0IGJ5IG4xIGFnYWluLiBcbiAgICAvLyAvLyBTaW1pbGFybHkgd2UgZG8gZGl2aWRlIGFuZCBtdWx0aXBseSBmb3IgbjIgKGkuZS4sIFxuICAgIC8vIC8vIGVsZW1lbnRzIG9mIGIpIFxuICBcbiAgICAvLyAvLyBtYXhhIGFuZCBtaW5iIGFyZSB1c2VkIHRvIGNoZWNrIGlmIHBvbHlnb24gYSBcbiAgICAvLyAvLyBpcyBsZWZ0IG9mIGIuIFxuICAgIC8vIHZhciBtYXhhID0gTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVI7IFxuICAgIC8vIGZvciAodmFyIGk9MDsgaTxuMTsgaSsrKSBcbiAgICAvLyB7IFxuICAgIC8vICAgICBtYXhhID0gTWF0aC5tYXgobWF4YSwgYVtpXS54KTsgXG4gICAgLy8gICAgIG1pZC54ICArPSBhW2ldLng7XG4gICAgLy8gICAgIG1pZC55ICs9IGFbaV0ueTsgXG4gICAgLy8gICAgIGFbaV0ueCAqPSBuMTsgXG4gICAgLy8gICAgIGFbaV0ueSAqPSBuMTsgXG4gICAgLy8gfSBcbiAgXG4gICAgLy8gLy8gc29ydGluZyB0aGUgcG9pbnRzIGluIGNvdW50ZXIgY2xvY2t3aXNlIG9yZGVyIFxuICAgIC8vIC8vIGZvciBwb2x5Z29uIGEgXG4gICAgLy8gY29uc3QgY2xvbmVkQSA9IGNsb25lUG9pbnRzKGEpXG4gICAgLy8gc29ydFBvaW50cyhhWzBdLCBjbG9uZWRBKVxuICAgIC8vIGEgPSBjbG9uZWRBXG4gIFxuICAgIC8vIGZvciAodmFyIGk9MDsgaTxuMTsgaSsrKSBcbiAgICAvLyB7IFxuICAgIC8vICAgICBhW2ldLnggLz0gbjE7IFxuICAgIC8vICAgICBhW2ldLnkgLz0gbjE7IFxuICAgIC8vIH0gXG4gIFxuICAgIC8vIG1pZCA9IG5ldyBQb2ludChbMCwwXSlcbiAgXG4gICAgLy8gdmFyIG1pbmIgPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUjsgXG4gICAgLy8gZm9yICh2YXIgaT0wOyBpPG4yOyBpKyspIFxuICAgIC8vIHsgXG4gICAgLy8gICAgIG1pZC54ICs9IGJbaV0ueDsgXG4gICAgLy8gICAgIG1pZC55ICs9IGJbaV0ueTsgXG4gICAgLy8gICAgIG1pbmIgPSBNYXRoLm1pbihtaW5iLCBiW2ldLngpOyBcbiAgICAvLyAgICAgYltpXS54ICo9IG4yOyBcbiAgICAvLyAgICAgYltpXS55ICo9IG4yOyBcbiAgICAvLyB9IFxuICBcbiAgICAvLyAvLyBzb3J0aW5nIHRoZSBwb2ludHMgaW4gY291bnRlciBjbG9ja3dpc2UgXG4gICAgLy8gLy8gb3JkZXIgZm9yIHBvbHlnb24gYiBcbiAgICAvLyBjb25zdCBjbG9uZWRCID0gY2xvbmVQb2ludHMoYilcbiAgICAvLyBzb3J0UG9pbnRzKGJbMF0sIGNsb25lZEIpXG4gICAgLy8gYiA9IGNsb25lZEJcbiAgXG4gICAgLy8gZm9yICh2YXIgaT0wOyBpPG4yOyBpKyspIFxuICAgIC8vIHsgXG4gICAgLy8gICAgIGJbaV0ueC89bjI7IFxuICAgIC8vICAgICBiW2ldLnkvPW4yOyBcbiAgICAvLyB9IFxuICBcbiAgICAvLyAvLyBJZiBhIGlzIHRvIHRoZSByaWdodCBvZiBiLCBzd2FwIGEgYW5kIGIgXG4gICAgLy8gLy8gVGhpcyBtYWtlcyBzdXJlIGEgaXMgbGVmdCBvZiBiLiBcbiAgICAvLyBpZiAobWluYiA8IG1heGEpIFxuICAgIC8vIHsgXG4gICAgLy8gICAgIGIgPSBbYSwgYSA9IGJdWzBdOyAgLy8gc3dhcCBhIGFuZCBiICAgIFxuICAgIC8vICAgICBuMSA9IGEubGVuZ3RoO1xuICAgIC8vICAgICBuMiA9IGIubGVuZ3RoO1xuICAgIC8vIH0gXG4gIFxuICAgIC8vIC8vIGlhIC0+IHJpZ2h0bW9zdCBwb2ludCBvZiBhIFxuICAgIC8vIHZhciBpYSA9IDAsIGliID0gMDsgXG4gICAgLy8gZm9yICh2YXIgaT0xOyBpPG4xOyBpKyspIFxuICAgIC8vICAgICBpZiAoYVtpXS54ID4gYVtpYV0ueCkgXG4gICAgLy8gICAgICAgICBpYSA9IGk7IFxuICBcbiAgICAvLyAvLyBpYiAtPiBsZWZ0bW9zdCBwb2ludCBvZiBiIFxuICAgIC8vIGZvciAodmFyIGk9MTsgaTxuMjsgaSsrKSBcbiAgICAvLyAgICAgaWYgKGJbaV0ueCA8IGJbaWJdLngpIFxuICAgIC8vICAgICAgICAgaWI9aTsgXG4gIFxuICAgIC8vIC8vIGZpbmRpbmcgdGhlIHVwcGVyIHRhbmdlbnQgXG4gICAgLy8gdmFyIGluZGEgPSBpYSwgaW5kYiA9IGliOyBcbiAgICAvLyB2YXIgZG9uZSA9IDA7IFxuICAgIC8vIHdoaWxlICghZG9uZSkgXG4gICAgLy8geyBcbiAgICAvLyAgICAgZG9uZSA9IDE7IFxuICAgIC8vICAgICAvLyBjb25zdCBnID0gY3JlYXRlR3JhcGgoKVxuICAgIC8vICAgICAvLyBnLmFkZE5vZGUoY3JlYXRlTm9kZUlkMihiW2luZGJdKSwgeyB4OiBiW2luZGJdLngsIHk6IGJbaW5kYl0ueSB9KVxuICAgIC8vICAgICAvLyBnLmFkZE5vZGUoY3JlYXRlTm9kZUlkMihhW2luZGFdKSwgeyB4OiBhW2luZGFdLngsIHk6IGFbaW5kYV0ueSB9KVxuICAgIC8vICAgICAvLyBnLmFkZE5vZGUoY3JlYXRlTm9kZUlkMihhWyhpbmRhKzEpJW4xXSksIHsgeDogYVsoaW5kYSsxKSVuMV0ueCwgeTogYVsoaW5kYSsxKSVuMV0ueSB9KVxuICAgIC8vICAgICAvLyBnLmFkZExpbmsoY3JlYXRlTm9kZUlkMihiW2luZGJdKSwgY3JlYXRlTm9kZUlkMihhW2luZGFdKSlcbiAgICAvLyAgICAgLy8gZy5hZGRMaW5rKGNyZWF0ZU5vZGVJZDIoYVtpbmRhXSksIGNyZWF0ZU5vZGVJZDIoYVsoaW5kYSsxKSVuMV0pKVxuICAgIC8vICAgICAvLyBzZXRHcmFwaChnKVxuICAgIC8vICAgICAvLyByb3V0ZUxheWVyLnNldExhdExuZ3MoW2JbaW5kYl0sIGFbaW5kYV1dKVxuICAgIC8vICAgICAvLyBkcmF3UGF0aCgpXG5cbiAgICAvLyAgICAgLy8gcm91dGVMYXllci5zZXRMYXRMbmdzKFtdKVxuXG5cbiAgICAvLyAgICAgd2hpbGUgKG9yaWVudGF0aW9uKGJbaW5kYl0sIGFbaW5kYV0sIGFbKGluZGErMSklbjFdKSA+IDApIFxuICAgIC8vICAgICAgICAgaW5kYSA9IChpbmRhICsgMSkgJSBuMTsgXG4gIFxuICAgIC8vICAgICB3aGlsZSAob3JpZW50YXRpb24oYVtpbmRhXSwgYltpbmRiXSwgYlsobjIraW5kYi0xKSVuMl0pIDwgMCkgXG4gICAgLy8gICAgIHsgXG4gICAgLy8gICAgICAgICBpbmRiID0gKG4yK2luZGItMSklbjI7IFxuICAgIC8vICAgICAgICAgZG9uZSA9IDA7IFxuICAgIC8vICAgICB9IFxuICAgIC8vIH0gXG4gICAgLy8gY29uc29sZS5sb2coYVtpbmRhXS54ICsgXCIsXCIgKyBhW2luZGFdLnkpXG4gIFxuICAgIC8vIC8vIGNvdXQgPDwgXCJ1cHBlciB0YW5nZW50IChcIiA8PCBhW2luZGFdLnggPDwgXCIsXCJcbiAgICAvLyAvLyAgICAgPDwgYVtpbmRhXS55IDw8IFwiKSAoXCIgPDwgYltpbmRiXS54IFxuICAgIC8vIC8vICAgICA8PCBcIixcIiA8PCBiW2luZGJdLnkgPDwgXCIpXFxuXCI7IFxufSBcblxuICBmdW5jdGlvbiBjcmVhdGVOb2RlSWQyIChwKSB7XG4gICAgcmV0dXJuIHAueCArICcsJyArIHAueVxuICB9XG5cbmV4cG9ydCBmdW5jdGlvbiBjbGVhckdyYXBoUmVsYXRlZERhdGEgKCkge1xuICBpZiAocm91dGVMYXllciAhPT0gbnVsbCkgcm91dGVMYXllci5zZXRMYXRMbmdzKFtdKVxuICBpZiAoc2VsZWN0aW9uTGF5ZXIgIT09IG51bGwpIHNlbGVjdGlvbkxheWVyLmNsZWFyTGF5ZXJzKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldHVwUm91dGVMYXllciAoKSB7XG4gIHJvdXRlTGF5ZXIgPSBMLnBvbHlsaW5lKFtdLCB7XG4gICAgY29sb3I6ICcjRUIzMjIzJ1xuICB9KS5hZGRUbyhtYXApXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRQYXRoRmluZGVyIChwYXRoR3JhcGgpIHtcbiAgcGF0aEZpbmRlciA9IHBhdGhHcmFwaFxufVxuXG5mdW5jdGlvbiB1cGRhdGVQYXRoTWFya2VycyAoKSB7XG4gIGlmKHVwZGF0aW5nUGF0aE1hcmtlcnMpe1xuICAgIHVwZGF0aW5nUGF0aE1hcmtlcnMgPSAwXG4gICAgcmV0dXJuXG4gIH1cblxuICB1cGRhdGluZ1BhdGhNYXJrZXJzID0gdHJ1ZVxuXG4gIGlmKHJvdXRlTGF5ZXIgIT0gbnVsbClcbiAgICByb3V0ZUxheWVyLnNldExhdExuZ3MoW10pXG4gIHJlc3RvcmVPcmlnaW5hbFBvaW50c0FuZEVkZ2VzKClcblxuICBpZihyb3V0ZUxheWVyICE9IG51bGwpe1xuICAgIHN0YXJ0UG9pbnQgPSBuZXcgUG9pbnQoW3N0YXJ0TWFya2VyLnRvR2VvSlNPTigpLmdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdLCBzdGFydE1hcmtlci50b0dlb0pTT04oKS5nZW9tZXRyeS5jb29yZGluYXRlc1sxXV0pO1xuICAgIGVuZFBvaW50ID0gbmV3IFBvaW50KFtlbmRNYXJrZXIudG9HZW9KU09OKCkuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0sIGVuZE1hcmtlci50b0dlb0pTT04oKS5nZW9tZXRyeS5jb29yZGluYXRlc1sxXV0pO1xuICB9XG5cbiAgdmFyIGR5bmFtaWNOb2Rlc0pTT04gPSBnZXREeW5hbWljTm9kZXNKU09OKHN0YXJ0UG9pbnQsIGVuZFBvaW50KVxuICB2YXIgZHluYW1pY0VkZ2VzSlNPTiA9IGdldER5bmFtaWNFZGdlc0pTT04oc3RhcnRQb2ludCwgZW5kUG9pbnQpXG4gIHVwZGF0ZUdyYXBoV2l0aER5bmFtaWNKU09OKGR5bmFtaWNOb2Rlc0pTT04sIGR5bmFtaWNFZGdlc0pTT04pXG5cbiAgdmFyIHN0YXJ0Q3JlYXRpb24gPSBuZXcgRGF0ZSgpXG4gIGlmKHJvdXRlTGF5ZXIgIT0gbnVsbCl7XG4gICAgdmFyIG5lYXJlc3RTdGFydCA9IHR1cmYubmVhcmVzdFBvaW50KHN0YXJ0TWFya2VyLnRvR2VvSlNPTigpLCBwb2ludHMpXG4gICAgdmFyIG5lYXJlc3RFbmQgPSB0dXJmLm5lYXJlc3RQb2ludChlbmRNYXJrZXIudG9HZW9KU09OKCksIHBvaW50cylcbiAgICAvLyBuZWFyZXN0U3RhcnQgPSBzdGFydE1hcmtlci50b0dlb0pTT04oKVxuICAgIC8vIG5lYXJlc3RFbmQgPSBlbmRNYXJrZXIudG9HZW9KU09OKClcbiAgICBmb3VuZFBhdGggPSBwYXRoRmluZGVyLmZpbmQoY3JlYXRlTm9kZUlkKG5lYXJlc3RTdGFydCksIGNyZWF0ZU5vZGVJZChuZWFyZXN0RW5kKSlcbiAgICBkcmF3UGF0aCgpXG4gIH1lbHNle1xuICAgIGZvdW5kUGF0aCA9IHBhdGhGaW5kZXIuZmluZChjcmVhdGVOb2RlSWQyKHN0YXJ0UG9pbnQpLCBjcmVhdGVOb2RlSWQyKGVuZFBvaW50KSlcbiAgfVxuICBjb25zb2xlLmxvZyhcIlxcdHZhciBzdGFydCA9IFtcIitjcmVhdGVOb2RlSWQyKHN0YXJ0UG9pbnQpK1wiXVxcblxcdHZhciBlbmQgPSBbXCIrY3JlYXRlTm9kZUlkMihlbmRQb2ludCkrXCJdXFxuXFxuXCIpXG5cbiAgdmFyIGVuZENyZWF0aW9uID0gbmV3IERhdGUoKSAtIHN0YXJ0Q3JlYXRpb25cbiAgY29uc29sZS5sb2coJ1RpbWUgdG8gZmluZCBwYXRoOiAnLCBlbmRDcmVhdGlvbilcblxuXG5cbiAgdXBkYXRpbmdQYXRoTWFya2VycyA9IGZhbHNlXG5cbiAgcmV0dXJuIGZvdW5kUGF0aFxufVxuXG5mdW5jdGlvbiBkcmF3UGF0aCAoKSB7XG4gIGNvbnN0IHBhdGhMYXRMbmdzID0gZm91bmRQYXRoLm1hcChmdW5jdGlvbiAobm9kZSkge1xuICAgIHJldHVybiBbbm9kZS5kYXRhLnksIG5vZGUuZGF0YS54XVxuICB9KVxuICByb3V0ZUxheWVyLnNldExhdExuZ3MocGF0aExhdExuZ3MpXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU5vZGVJZCAocCkge1xuICByZXR1cm4gcC5nZW9tZXRyeS5jb29yZGluYXRlc1swXSArICcsJyArIHAuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV1cbn1cblxuZnVuY3Rpb24gdW5oaWdobGlnaHRGZWF0dXJlICgpIHtcbiAgc2VsZWN0aW9uTGF5ZXIuY2xlYXJMYXllcnMoKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0R3JhcGggKGdkKSB7XG4gIGdyYXBoRGF0YSA9IGdkXG59XG5cbmZ1bmN0aW9uIGhpZ2hsaWdodEZlYXR1cmUgKGUpIHtcbiAgc2VsZWN0aW9uTGF5ZXIuY2xlYXJMYXllcnMoKVxuXG4gIGNvbnN0IG5vZGUgPSBncmFwaERhdGEuZ2V0Tm9kZShlLnRhcmdldC5fbGF0bG5nLmxuZyArICcsJyArIGUudGFyZ2V0Ll9sYXRsbmcubGF0KVxuXG4gIGdyYXBoRGF0YS5mb3JFYWNoTGlua2VkTm9kZShlLnRhcmdldC5fbGF0bG5nLmxuZyArICcsJyArIGUudGFyZ2V0Ll9sYXRsbmcubGF0LCBmdW5jdGlvbiAobGlua2VkTm9kZSwgbGluaykge1xuICAgIEwucG9seWxpbmUoW1tsaW5rZWROb2RlLmRhdGEueSwgbGlua2VkTm9kZS5kYXRhLnhdLCBbbm9kZS5kYXRhLnksIG5vZGUuZGF0YS54XV0sIHtcbiAgICAgIHdlaWdodDogMC41LFxuICAgICAgb3BhY2l0eTogMC44LFxuICAgICAgcGFuZTogJ3NoYWRvd1BhbmUnLFxuICAgICAgaW50ZXJhY3RpdmU6IGZhbHNlXG4gICAgfSkuYWRkVG8oc2VsZWN0aW9uTGF5ZXIpXG4gIH0pXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZU51bWJlckRpdiAoKSB7XG4gIHJldHVybiBMLkljb24uZXh0ZW5kKHtcbiAgICBvcHRpb25zOiB7XG4gICAgICBpY29uU2l6ZTogbmV3IEwuUG9pbnQoMTUsIDE1KSxcbiAgICAgIGNsYXNzTmFtZTogJ2xlYWZsZXQtZGl2LWljb24nXG4gICAgfSxcbiAgICBjcmVhdGVJY29uOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgIHZhciBudW1kaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgICAgbnVtZGl2LnNldEF0dHJpYnV0ZSgnY2xhc3MnLCAnbnVtYmVyJylcbiAgICAgIG51bWRpdi5pbm5lckhUTUwgPSB0aGlzLm9wdGlvbnNbJ251bWJlciddIHx8ICcnXG4gICAgICBkaXYuYXBwZW5kQ2hpbGQobnVtZGl2KVxuICAgICAgdGhpcy5fc2V0SWNvblN0eWxlcyhkaXYsICdpY29uJylcbiAgICAgIHJldHVybiBkaXZcbiAgICB9XG4gIH0pXG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/mapHelpers.js\n");

/***/ }),

/***/ "./src/setupStructure.js":
/*!*******************************!*\
  !*** ./src/setupStructure.js ***!
  \*******************************/
/*! exports provided: setupStructure */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setupStructure\", function() { return setupStructure; });\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Point */ \"./src/Point.js\");\n/* harmony import */ var _Edge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Edge */ \"./src/Edge.js\");\n\n\n\nfunction setupStructure (coords, edges, points, polygons, polygonId) {\n  // const geom = geojson.type === 'Feature' ? geojson.geometry : geojson\n\n  // let coords = geom.coordinates\n\n  // // standardise the input\n  // if (geom.type === 'Polygon') coords = [coords]\n\n  coords = [coords]\n\n  for (let i = 0; i < coords.length; i++) {\n    const contour = []\n    polygons.push(contour)\n\n    if(coords[i] == undefined)\n      continue\n\n    for (let ii = 0; ii < coords[i].geometry.coordinates.length; ii++) {\n      let prevPoint = new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"](coords[i].geometry.coordinates[ii][0], polygonId)\n      let currentPoint = new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"](coords[i].geometry.coordinates[ii][1], polygonId)\n      prevPoint.nextPoint = currentPoint\n      let nextPoint = new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"](coords[i].geometry.coordinates[ii][2], polygonId)\n      linkPoints(prevPoint, currentPoint, nextPoint)\n\n      points.push(prevPoint)\n\n      let prevEdge = new _Edge__WEBPACK_IMPORTED_MODULE_1__[\"Edge\"](prevPoint, currentPoint) // eslint-disable-line\n      edges.push(prevEdge)\n      contour.push(prevEdge)\n\n      // Save me for later\n      const firstPoint = prevPoint\n\n      prevPoint = currentPoint\n      currentPoint = nextPoint\n\n      for (let iii = 2; iii < coords[i].geometry.coordinates[ii].length - 2; iii++) {\n        points.push(prevPoint)\n\n        nextPoint = new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"](coords[i].geometry.coordinates[ii][iii + 1], polygonId)\n\n        linkPoints(prevPoint, currentPoint, nextPoint)\n\n        const e = new _Edge__WEBPACK_IMPORTED_MODULE_1__[\"Edge\"](prevPoint, currentPoint) // eslint-disable-line\n\n        edges.push(e)\n        contour.push(e)\n\n        prevPoint = currentPoint\n        currentPoint = nextPoint\n        prevEdge = e\n      }\n\n      linkPoints(prevPoint, currentPoint, firstPoint)\n\n      const secondLastEdge = new _Edge__WEBPACK_IMPORTED_MODULE_1__[\"Edge\"](prevEdge.p2, currentPoint)\n\n      edges.push(secondLastEdge)\n      contour.push(secondLastEdge)\n\n      const lastEdge = new _Edge__WEBPACK_IMPORTED_MODULE_1__[\"Edge\"](currentPoint, firstPoint) // eslint-disable-line\n      linkPoints(currentPoint, firstPoint, firstPoint.nextPoint)\n\n      edges.push(lastEdge)\n      contour.push(lastEdge)\n\n      points.push(prevPoint)\n      points.push(nextPoint)\n    }\n  }\n}\n\n// export function setupStructure (coords, edges, points, polygons, polygonId) {\n//   // const geom = geojson.type === 'Feature' ? geojson.geometry : geojson\n\n//   // let coords = geom.coordinates\n\n//   // // standardise the input\n//   // if (geom.type === 'Polygon') coords = [coords]\n\n//   coords = [coords]\n\n//   for (let i = 0; i < coords.length; i++) {\n//     const contour = []\n//     polygons.push(contour)\n\n//     if(coords[i] == undefined)\n//       continue\n\n//     for (let ii = 0; ii < coords[i].length; ii++) {\n//       let prevPoint = new Point(coords[i][ii][0], polygonId)\n//       let currentPoint = new Point(coords[i][ii][1], polygonId)\n//       prevPoint.nextPoint = currentPoint\n//       let nextPoint = new Point(coords[i][ii][2], polygonId)\n//       linkPoints(prevPoint, currentPoint, nextPoint)\n\n//       points.push(prevPoint)\n\n//       let prevEdge = new Edge(prevPoint, currentPoint) // eslint-disable-line\n//       edges.push(prevEdge)\n//       contour.push(prevEdge)\n\n//       // Save me for later\n//       const firstPoint = prevPoint\n\n//       prevPoint = currentPoint\n//       currentPoint = nextPoint\n\n//       for (let iii = 2; iii < coords[i][ii].length - 2; iii++) {\n//         points.push(prevPoint)\n\n//         nextPoint = new Point(coords[i][ii][iii + 1], polygonId)\n\n//         linkPoints(prevPoint, currentPoint, nextPoint)\n\n//         const e = new Edge(prevPoint, currentPoint) // eslint-disable-line\n\n//         edges.push(e)\n//         contour.push(e)\n\n//         prevPoint = currentPoint\n//         currentPoint = nextPoint\n//         prevEdge = e\n//       }\n\n//       linkPoints(prevPoint, currentPoint, firstPoint)\n\n//       const secondLastEdge = new Edge(prevEdge.p2, currentPoint)\n\n//       edges.push(secondLastEdge)\n//       contour.push(secondLastEdge)\n\n//       const lastEdge = new Edge(currentPoint, firstPoint) // eslint-disable-line\n//       linkPoints(currentPoint, firstPoint, firstPoint.nextPoint)\n\n//       edges.push(lastEdge)\n//       contour.push(lastEdge)\n\n//       points.push(prevPoint)\n//       points.push(nextPoint)\n//     }\n//   }\n// }\n\nfunction linkPoints (prevPoint, currentPoint, nextPoint) {\n  currentPoint.prevPoint = prevPoint\n  currentPoint.nextPoint = nextPoint\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2V0dXBTdHJ1Y3R1cmUuanM/NDFhNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUErQjtBQUNGOztBQUV0QjtBQUNQOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUEsaUJBQWlCLG1CQUFtQjtBQUNwQztBQUNBOztBQUVBO0FBQ0E7O0FBRUEsb0JBQW9CLDRDQUE0QztBQUNoRSwwQkFBMEIsNENBQUs7QUFDL0IsNkJBQTZCLDRDQUFLO0FBQ2xDO0FBQ0EsMEJBQTBCLDRDQUFLO0FBQy9COztBQUVBOztBQUVBLHlCQUF5QiwwQ0FBSTtBQUM3QjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSx1QkFBdUIscURBQXFEO0FBQzVFOztBQUVBLHdCQUF3Qiw0Q0FBSzs7QUFFN0I7O0FBRUEsc0JBQXNCLDBDQUFJOztBQUUxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGlDQUFpQywwQ0FBSTs7QUFFckM7QUFDQTs7QUFFQSwyQkFBMkIsMENBQUk7QUFDL0I7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSx1QkFBdUIsdUJBQXVCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSwwQkFBMEIsZ0NBQWdDO0FBQzFEOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL3NyYy9zZXR1cFN0cnVjdHVyZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvaW50IH0gZnJvbSAnLi9Qb2ludCdcbmltcG9ydCB7IEVkZ2UgfSBmcm9tICcuL0VkZ2UnXG5cbmV4cG9ydCBmdW5jdGlvbiBzZXR1cFN0cnVjdHVyZSAoY29vcmRzLCBlZGdlcywgcG9pbnRzLCBwb2x5Z29ucywgcG9seWdvbklkKSB7XG4gIC8vIGNvbnN0IGdlb20gPSBnZW9qc29uLnR5cGUgPT09ICdGZWF0dXJlJyA/IGdlb2pzb24uZ2VvbWV0cnkgOiBnZW9qc29uXG5cbiAgLy8gbGV0IGNvb3JkcyA9IGdlb20uY29vcmRpbmF0ZXNcblxuICAvLyAvLyBzdGFuZGFyZGlzZSB0aGUgaW5wdXRcbiAgLy8gaWYgKGdlb20udHlwZSA9PT0gJ1BvbHlnb24nKSBjb29yZHMgPSBbY29vcmRzXVxuXG4gIGNvb3JkcyA9IFtjb29yZHNdXG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb29yZHMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBjb250b3VyID0gW11cbiAgICBwb2x5Z29ucy5wdXNoKGNvbnRvdXIpXG5cbiAgICBpZihjb29yZHNbaV0gPT0gdW5kZWZpbmVkKVxuICAgICAgY29udGludWVcblxuICAgIGZvciAobGV0IGlpID0gMDsgaWkgPCBjb29yZHNbaV0uZ2VvbWV0cnkuY29vcmRpbmF0ZXMubGVuZ3RoOyBpaSsrKSB7XG4gICAgICBsZXQgcHJldlBvaW50ID0gbmV3IFBvaW50KGNvb3Jkc1tpXS5nZW9tZXRyeS5jb29yZGluYXRlc1tpaV1bMF0sIHBvbHlnb25JZClcbiAgICAgIGxldCBjdXJyZW50UG9pbnQgPSBuZXcgUG9pbnQoY29vcmRzW2ldLmdlb21ldHJ5LmNvb3JkaW5hdGVzW2lpXVsxXSwgcG9seWdvbklkKVxuICAgICAgcHJldlBvaW50Lm5leHRQb2ludCA9IGN1cnJlbnRQb2ludFxuICAgICAgbGV0IG5leHRQb2ludCA9IG5ldyBQb2ludChjb29yZHNbaV0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbaWldWzJdLCBwb2x5Z29uSWQpXG4gICAgICBsaW5rUG9pbnRzKHByZXZQb2ludCwgY3VycmVudFBvaW50LCBuZXh0UG9pbnQpXG5cbiAgICAgIHBvaW50cy5wdXNoKHByZXZQb2ludClcblxuICAgICAgbGV0IHByZXZFZGdlID0gbmV3IEVkZ2UocHJldlBvaW50LCBjdXJyZW50UG9pbnQpIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICAgIGVkZ2VzLnB1c2gocHJldkVkZ2UpXG4gICAgICBjb250b3VyLnB1c2gocHJldkVkZ2UpXG5cbiAgICAgIC8vIFNhdmUgbWUgZm9yIGxhdGVyXG4gICAgICBjb25zdCBmaXJzdFBvaW50ID0gcHJldlBvaW50XG5cbiAgICAgIHByZXZQb2ludCA9IGN1cnJlbnRQb2ludFxuICAgICAgY3VycmVudFBvaW50ID0gbmV4dFBvaW50XG5cbiAgICAgIGZvciAobGV0IGlpaSA9IDI7IGlpaSA8IGNvb3Jkc1tpXS5nZW9tZXRyeS5jb29yZGluYXRlc1tpaV0ubGVuZ3RoIC0gMjsgaWlpKyspIHtcbiAgICAgICAgcG9pbnRzLnB1c2gocHJldlBvaW50KVxuXG4gICAgICAgIG5leHRQb2ludCA9IG5ldyBQb2ludChjb29yZHNbaV0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbaWldW2lpaSArIDFdLCBwb2x5Z29uSWQpXG5cbiAgICAgICAgbGlua1BvaW50cyhwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCwgbmV4dFBvaW50KVxuXG4gICAgICAgIGNvbnN0IGUgPSBuZXcgRWRnZShwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCkgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4gICAgICAgIGVkZ2VzLnB1c2goZSlcbiAgICAgICAgY29udG91ci5wdXNoKGUpXG5cbiAgICAgICAgcHJldlBvaW50ID0gY3VycmVudFBvaW50XG4gICAgICAgIGN1cnJlbnRQb2ludCA9IG5leHRQb2ludFxuICAgICAgICBwcmV2RWRnZSA9IGVcbiAgICAgIH1cblxuICAgICAgbGlua1BvaW50cyhwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCwgZmlyc3RQb2ludClcblxuICAgICAgY29uc3Qgc2Vjb25kTGFzdEVkZ2UgPSBuZXcgRWRnZShwcmV2RWRnZS5wMiwgY3VycmVudFBvaW50KVxuXG4gICAgICBlZGdlcy5wdXNoKHNlY29uZExhc3RFZGdlKVxuICAgICAgY29udG91ci5wdXNoKHNlY29uZExhc3RFZGdlKVxuXG4gICAgICBjb25zdCBsYXN0RWRnZSA9IG5ldyBFZGdlKGN1cnJlbnRQb2ludCwgZmlyc3RQb2ludCkgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgICAgbGlua1BvaW50cyhjdXJyZW50UG9pbnQsIGZpcnN0UG9pbnQsIGZpcnN0UG9pbnQubmV4dFBvaW50KVxuXG4gICAgICBlZGdlcy5wdXNoKGxhc3RFZGdlKVxuICAgICAgY29udG91ci5wdXNoKGxhc3RFZGdlKVxuXG4gICAgICBwb2ludHMucHVzaChwcmV2UG9pbnQpXG4gICAgICBwb2ludHMucHVzaChuZXh0UG9pbnQpXG4gICAgfVxuICB9XG59XG5cbi8vIGV4cG9ydCBmdW5jdGlvbiBzZXR1cFN0cnVjdHVyZSAoY29vcmRzLCBlZGdlcywgcG9pbnRzLCBwb2x5Z29ucywgcG9seWdvbklkKSB7XG4vLyAgIC8vIGNvbnN0IGdlb20gPSBnZW9qc29uLnR5cGUgPT09ICdGZWF0dXJlJyA/IGdlb2pzb24uZ2VvbWV0cnkgOiBnZW9qc29uXG5cbi8vICAgLy8gbGV0IGNvb3JkcyA9IGdlb20uY29vcmRpbmF0ZXNcblxuLy8gICAvLyAvLyBzdGFuZGFyZGlzZSB0aGUgaW5wdXRcbi8vICAgLy8gaWYgKGdlb20udHlwZSA9PT0gJ1BvbHlnb24nKSBjb29yZHMgPSBbY29vcmRzXVxuXG4vLyAgIGNvb3JkcyA9IFtjb29yZHNdXG5cbi8vICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb29yZHMubGVuZ3RoOyBpKyspIHtcbi8vICAgICBjb25zdCBjb250b3VyID0gW11cbi8vICAgICBwb2x5Z29ucy5wdXNoKGNvbnRvdXIpXG5cbi8vICAgICBpZihjb29yZHNbaV0gPT0gdW5kZWZpbmVkKVxuLy8gICAgICAgY29udGludWVcblxuLy8gICAgIGZvciAobGV0IGlpID0gMDsgaWkgPCBjb29yZHNbaV0ubGVuZ3RoOyBpaSsrKSB7XG4vLyAgICAgICBsZXQgcHJldlBvaW50ID0gbmV3IFBvaW50KGNvb3Jkc1tpXVtpaV1bMF0sIHBvbHlnb25JZClcbi8vICAgICAgIGxldCBjdXJyZW50UG9pbnQgPSBuZXcgUG9pbnQoY29vcmRzW2ldW2lpXVsxXSwgcG9seWdvbklkKVxuLy8gICAgICAgcHJldlBvaW50Lm5leHRQb2ludCA9IGN1cnJlbnRQb2ludFxuLy8gICAgICAgbGV0IG5leHRQb2ludCA9IG5ldyBQb2ludChjb29yZHNbaV1baWldWzJdLCBwb2x5Z29uSWQpXG4vLyAgICAgICBsaW5rUG9pbnRzKHByZXZQb2ludCwgY3VycmVudFBvaW50LCBuZXh0UG9pbnQpXG5cbi8vICAgICAgIHBvaW50cy5wdXNoKHByZXZQb2ludClcblxuLy8gICAgICAgbGV0IHByZXZFZGdlID0gbmV3IEVkZ2UocHJldlBvaW50LCBjdXJyZW50UG9pbnQpIC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbi8vICAgICAgIGVkZ2VzLnB1c2gocHJldkVkZ2UpXG4vLyAgICAgICBjb250b3VyLnB1c2gocHJldkVkZ2UpXG5cbi8vICAgICAgIC8vIFNhdmUgbWUgZm9yIGxhdGVyXG4vLyAgICAgICBjb25zdCBmaXJzdFBvaW50ID0gcHJldlBvaW50XG5cbi8vICAgICAgIHByZXZQb2ludCA9IGN1cnJlbnRQb2ludFxuLy8gICAgICAgY3VycmVudFBvaW50ID0gbmV4dFBvaW50XG5cbi8vICAgICAgIGZvciAobGV0IGlpaSA9IDI7IGlpaSA8IGNvb3Jkc1tpXVtpaV0ubGVuZ3RoIC0gMjsgaWlpKyspIHtcbi8vICAgICAgICAgcG9pbnRzLnB1c2gocHJldlBvaW50KVxuXG4vLyAgICAgICAgIG5leHRQb2ludCA9IG5ldyBQb2ludChjb29yZHNbaV1baWldW2lpaSArIDFdLCBwb2x5Z29uSWQpXG5cbi8vICAgICAgICAgbGlua1BvaW50cyhwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCwgbmV4dFBvaW50KVxuXG4vLyAgICAgICAgIGNvbnN0IGUgPSBuZXcgRWRnZShwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCkgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuXG4vLyAgICAgICAgIGVkZ2VzLnB1c2goZSlcbi8vICAgICAgICAgY29udG91ci5wdXNoKGUpXG5cbi8vICAgICAgICAgcHJldlBvaW50ID0gY3VycmVudFBvaW50XG4vLyAgICAgICAgIGN1cnJlbnRQb2ludCA9IG5leHRQb2ludFxuLy8gICAgICAgICBwcmV2RWRnZSA9IGVcbi8vICAgICAgIH1cblxuLy8gICAgICAgbGlua1BvaW50cyhwcmV2UG9pbnQsIGN1cnJlbnRQb2ludCwgZmlyc3RQb2ludClcblxuLy8gICAgICAgY29uc3Qgc2Vjb25kTGFzdEVkZ2UgPSBuZXcgRWRnZShwcmV2RWRnZS5wMiwgY3VycmVudFBvaW50KVxuXG4vLyAgICAgICBlZGdlcy5wdXNoKHNlY29uZExhc3RFZGdlKVxuLy8gICAgICAgY29udG91ci5wdXNoKHNlY29uZExhc3RFZGdlKVxuXG4vLyAgICAgICBjb25zdCBsYXN0RWRnZSA9IG5ldyBFZGdlKGN1cnJlbnRQb2ludCwgZmlyc3RQb2ludCkgLy8gZXNsaW50LWRpc2FibGUtbGluZVxuLy8gICAgICAgbGlua1BvaW50cyhjdXJyZW50UG9pbnQsIGZpcnN0UG9pbnQsIGZpcnN0UG9pbnQubmV4dFBvaW50KVxuXG4vLyAgICAgICBlZGdlcy5wdXNoKGxhc3RFZGdlKVxuLy8gICAgICAgY29udG91ci5wdXNoKGxhc3RFZGdlKVxuXG4vLyAgICAgICBwb2ludHMucHVzaChwcmV2UG9pbnQpXG4vLyAgICAgICBwb2ludHMucHVzaChuZXh0UG9pbnQpXG4vLyAgICAgfVxuLy8gICB9XG4vLyB9XG5cbmZ1bmN0aW9uIGxpbmtQb2ludHMgKHByZXZQb2ludCwgY3VycmVudFBvaW50LCBuZXh0UG9pbnQpIHtcbiAgY3VycmVudFBvaW50LnByZXZQb2ludCA9IHByZXZQb2ludFxuICBjdXJyZW50UG9pbnQubmV4dFBvaW50ID0gbmV4dFBvaW50XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/setupStructure.js\n");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! exports provided: pi1, pi2, INF, edgeIntersect, ccw, onSegment, angle2, pointEdgeDistance, intersectPoint, calcEdgeDistance */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pi1\", function() { return pi1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pi2\", function() { return pi2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"INF\", function() { return INF; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"edgeIntersect\", function() { return edgeIntersect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ccw\", function() { return ccw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onSegment\", function() { return onSegment; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"angle2\", function() { return angle2; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"pointEdgeDistance\", function() { return pointEdgeDistance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"intersectPoint\", function() { return intersectPoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calcEdgeDistance\", function() { return calcEdgeDistance; });\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Point */ \"./src/Point.js\");\n\n\nconst pi1 = Math.PI * 3 / 2\nconst pi2 = Math.PI / 2\n\nconst INF = 10000\nconst COLIN_TOLERANCE = 13\nconst T = Math.pow(10, COLIN_TOLERANCE)\nconst T2 = Math.pow(10.0, COLIN_TOLERANCE)\n\nfunction edgeIntersect (p1, q1, edge) {\n  const p2 = edge.p1\n  const q2 = edge.p2\n  const o1 = ccw(p1, q1, p2)\n  const o2 = ccw(p1, q1, q2)\n  const o3 = ccw(p2, q2, p1)\n  const o4 = ccw(p2, q2, q1)\n  if (o1 !== o2 && o3 !== o4) return true\n  if (o1 === 0 && onSegment(p1, p2, q1)) return true\n  if (o2 === 0 && onSegment(p1, q2, q1)) return true\n  if (o3 === 0 && onSegment(p2, p1, q2)) return true\n  if (o4 === 0 && onSegment(p2, q1, q2)) return true\n  return false\n}\n\nfunction ccw (a, b, c) {\n  const area = Math.round(((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)) * T) / T2\n  if (area > 0) return 1\n  if (area < 0) return -1\n  return 0\n}\n\nfunction onSegment (p, q, r) {\n  if (q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x)) {\n    if (q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y)) return true\n  }\n  return false\n}\n\nfunction angle2 (p1, p2, p3) {\n  const a = Math.pow((p3.x - p2.x), 2) + Math.pow((p3.y - p2.y), 2)\n  const b = Math.pow((p3.x - p1.x), 2) + Math.pow((p3.y - p1.y), 2)\n  const c = Math.pow((p2.x - p1.x), 2) + Math.pow((p2.y - p1.y), 2)\n  return Math.acos((a + c - b) / (2 * Math.sqrt(a) * Math.sqrt(c)))\n}\n\nfunction pointEdgeDistance (p1, p2, edge) {\n  const ip = intersectPoint(p1, p2, edge)\n  return ip !== null ? calcEdgeDistance(p1, ip) : 0\n}\n\nfunction intersectPoint (p1, p2, edge) {\n  if (edge.containsPoint(p1)) return p1\n  if (edge.containsPoint(p2)) return p2\n  if (edge.p1.x === edge.p2.x) {\n    if (p1.x === p2.x) return null\n    const pslope = (p1.y - p2.y) / (p1.x - p2.x)\n    const intersectX = edge.p1.x\n    const intersectY = pslope * (intersectX - p1.x) + p1.y\n    return new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"]([intersectX, intersectY], null)\n  }\n  if (p1.x === p2.x) {\n    const eslope = (edge.p1.y - edge.p2.y) / (edge.p1.x - edge.p2.x)\n    const intersectX = p1.x\n    const intersectY = eslope * (intersectX - edge.p1.x) + edge.p1.y\n    return new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"]([intersectX, intersectY], null)\n  }\n\n  const pslope = (p1.y - p2.y) / (p1.x - p2.x)\n  const eslope = (edge.p1.y - edge.p2.y) / (edge.p1.x - edge.p2.x)\n\n  if (pslope === eslope) return null\n  const intersectX = (eslope * edge.p1.x - pslope * p1.x + p1.y - edge.p1.y) / (eslope - pslope)\n  const intersectY = eslope * (intersectX - edge.p1.x) + edge.p1.y\n  return new _Point__WEBPACK_IMPORTED_MODULE_0__[\"Point\"]([intersectX, intersectY], null)\n}\n\nfunction calcEdgeDistance (p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2))\n}\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMuanM/MDI1ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBK0I7O0FBRXhCO0FBQ0E7O0FBRUE7QUFDUDtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw0Q0FBSztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSw0Q0FBSztBQUNwQjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsNENBQUs7QUFDbEI7O0FBRU87QUFDUDtBQUNBIiwiZmlsZSI6Ii4vc3JjL3V0aWxzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUG9pbnQgfSBmcm9tICcuL1BvaW50J1xuXG5leHBvcnQgY29uc3QgcGkxID0gTWF0aC5QSSAqIDMgLyAyXG5leHBvcnQgY29uc3QgcGkyID0gTWF0aC5QSSAvIDJcblxuZXhwb3J0IGNvbnN0IElORiA9IDEwMDAwXG5jb25zdCBDT0xJTl9UT0xFUkFOQ0UgPSAxM1xuY29uc3QgVCA9IE1hdGgucG93KDEwLCBDT0xJTl9UT0xFUkFOQ0UpXG5jb25zdCBUMiA9IE1hdGgucG93KDEwLjAsIENPTElOX1RPTEVSQU5DRSlcblxuZXhwb3J0IGZ1bmN0aW9uIGVkZ2VJbnRlcnNlY3QgKHAxLCBxMSwgZWRnZSkge1xuICBjb25zdCBwMiA9IGVkZ2UucDFcbiAgY29uc3QgcTIgPSBlZGdlLnAyXG4gIGNvbnN0IG8xID0gY2N3KHAxLCBxMSwgcDIpXG4gIGNvbnN0IG8yID0gY2N3KHAxLCBxMSwgcTIpXG4gIGNvbnN0IG8zID0gY2N3KHAyLCBxMiwgcDEpXG4gIGNvbnN0IG80ID0gY2N3KHAyLCBxMiwgcTEpXG4gIGlmIChvMSAhPT0gbzIgJiYgbzMgIT09IG80KSByZXR1cm4gdHJ1ZVxuICBpZiAobzEgPT09IDAgJiYgb25TZWdtZW50KHAxLCBwMiwgcTEpKSByZXR1cm4gdHJ1ZVxuICBpZiAobzIgPT09IDAgJiYgb25TZWdtZW50KHAxLCBxMiwgcTEpKSByZXR1cm4gdHJ1ZVxuICBpZiAobzMgPT09IDAgJiYgb25TZWdtZW50KHAyLCBwMSwgcTIpKSByZXR1cm4gdHJ1ZVxuICBpZiAobzQgPT09IDAgJiYgb25TZWdtZW50KHAyLCBxMSwgcTIpKSByZXR1cm4gdHJ1ZVxuICByZXR1cm4gZmFsc2Vcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNjdyAoYSwgYiwgYykge1xuICBjb25zdCBhcmVhID0gTWF0aC5yb3VuZCgoKGIueCAtIGEueCkgKiAoYy55IC0gYS55KSAtIChiLnkgLSBhLnkpICogKGMueCAtIGEueCkpICogVCkgLyBUMlxuICBpZiAoYXJlYSA+IDApIHJldHVybiAxXG4gIGlmIChhcmVhIDwgMCkgcmV0dXJuIC0xXG4gIHJldHVybiAwXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvblNlZ21lbnQgKHAsIHEsIHIpIHtcbiAgaWYgKHEueCA8PSBNYXRoLm1heChwLngsIHIueCkgJiYgcS54ID49IE1hdGgubWluKHAueCwgci54KSkge1xuICAgIGlmIChxLnkgPD0gTWF0aC5tYXgocC55LCByLnkpICYmIHEueSA+PSBNYXRoLm1pbihwLnksIHIueSkpIHJldHVybiB0cnVlXG4gIH1cbiAgcmV0dXJuIGZhbHNlXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhbmdsZTIgKHAxLCBwMiwgcDMpIHtcbiAgY29uc3QgYSA9IE1hdGgucG93KChwMy54IC0gcDIueCksIDIpICsgTWF0aC5wb3coKHAzLnkgLSBwMi55KSwgMilcbiAgY29uc3QgYiA9IE1hdGgucG93KChwMy54IC0gcDEueCksIDIpICsgTWF0aC5wb3coKHAzLnkgLSBwMS55KSwgMilcbiAgY29uc3QgYyA9IE1hdGgucG93KChwMi54IC0gcDEueCksIDIpICsgTWF0aC5wb3coKHAyLnkgLSBwMS55KSwgMilcbiAgcmV0dXJuIE1hdGguYWNvcygoYSArIGMgLSBiKSAvICgyICogTWF0aC5zcXJ0KGEpICogTWF0aC5zcXJ0KGMpKSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBvaW50RWRnZURpc3RhbmNlIChwMSwgcDIsIGVkZ2UpIHtcbiAgY29uc3QgaXAgPSBpbnRlcnNlY3RQb2ludChwMSwgcDIsIGVkZ2UpXG4gIHJldHVybiBpcCAhPT0gbnVsbCA/IGNhbGNFZGdlRGlzdGFuY2UocDEsIGlwKSA6IDBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGludGVyc2VjdFBvaW50IChwMSwgcDIsIGVkZ2UpIHtcbiAgaWYgKGVkZ2UuY29udGFpbnNQb2ludChwMSkpIHJldHVybiBwMVxuICBpZiAoZWRnZS5jb250YWluc1BvaW50KHAyKSkgcmV0dXJuIHAyXG4gIGlmIChlZGdlLnAxLnggPT09IGVkZ2UucDIueCkge1xuICAgIGlmIChwMS54ID09PSBwMi54KSByZXR1cm4gbnVsbFxuICAgIGNvbnN0IHBzbG9wZSA9IChwMS55IC0gcDIueSkgLyAocDEueCAtIHAyLngpXG4gICAgY29uc3QgaW50ZXJzZWN0WCA9IGVkZ2UucDEueFxuICAgIGNvbnN0IGludGVyc2VjdFkgPSBwc2xvcGUgKiAoaW50ZXJzZWN0WCAtIHAxLngpICsgcDEueVxuICAgIHJldHVybiBuZXcgUG9pbnQoW2ludGVyc2VjdFgsIGludGVyc2VjdFldLCBudWxsKVxuICB9XG4gIGlmIChwMS54ID09PSBwMi54KSB7XG4gICAgY29uc3QgZXNsb3BlID0gKGVkZ2UucDEueSAtIGVkZ2UucDIueSkgLyAoZWRnZS5wMS54IC0gZWRnZS5wMi54KVxuICAgIGNvbnN0IGludGVyc2VjdFggPSBwMS54XG4gICAgY29uc3QgaW50ZXJzZWN0WSA9IGVzbG9wZSAqIChpbnRlcnNlY3RYIC0gZWRnZS5wMS54KSArIGVkZ2UucDEueVxuICAgIHJldHVybiBuZXcgUG9pbnQoW2ludGVyc2VjdFgsIGludGVyc2VjdFldLCBudWxsKVxuICB9XG5cbiAgY29uc3QgcHNsb3BlID0gKHAxLnkgLSBwMi55KSAvIChwMS54IC0gcDIueClcbiAgY29uc3QgZXNsb3BlID0gKGVkZ2UucDEueSAtIGVkZ2UucDIueSkgLyAoZWRnZS5wMS54IC0gZWRnZS5wMi54KVxuXG4gIGlmIChwc2xvcGUgPT09IGVzbG9wZSkgcmV0dXJuIG51bGxcbiAgY29uc3QgaW50ZXJzZWN0WCA9IChlc2xvcGUgKiBlZGdlLnAxLnggLSBwc2xvcGUgKiBwMS54ICsgcDEueSAtIGVkZ2UucDEueSkgLyAoZXNsb3BlIC0gcHNsb3BlKVxuICBjb25zdCBpbnRlcnNlY3RZID0gZXNsb3BlICogKGludGVyc2VjdFggLSBlZGdlLnAxLngpICsgZWRnZS5wMS55XG4gIHJldHVybiBuZXcgUG9pbnQoW2ludGVyc2VjdFgsIGludGVyc2VjdFldLCBudWxsKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FsY0VkZ2VEaXN0YW5jZSAocDEsIHAyKSB7XG4gIHJldHVybiBNYXRoLnNxcnQoTWF0aC5wb3cocDIueCAtIHAxLngsIDIpICsgTWF0aC5wb3cocDIueSAtIHAxLnksIDIpKVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils.js\n");

/***/ })

/******/ });